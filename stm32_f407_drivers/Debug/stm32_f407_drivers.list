
stm32_f407_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00004760  08000190  08000190  00010190  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000003c0  080048f0  080048f0  000148f0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08004cb0  08004cb0  000201e8  2**0
                  CONTENTS
  4 .ARM          00000000  08004cb0  08004cb0  000201e8  2**0
                  CONTENTS
  5 .preinit_array 00000000  08004cb0  08004cb0  000201e8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08004cb0  08004cb0  00014cb0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08004cb4  08004cb4  00014cb4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000001e8  20000000  08004cb8  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  000201e8  2**0
                  CONTENTS
 10 .bss          0000024c  200001e8  200001e8  000201e8  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  20000434  20000434  000201e8  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  000201e8  2**0
                  CONTENTS, READONLY
 13 .comment      00000043  00000000  00000000  00020218  2**0
                  CONTENTS, READONLY
 14 .debug_info   00001bc2  00000000  00000000  0002025b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_abbrev 000007d0  00000000  00000000  00021e1d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_aranges 00000208  00000000  00000000  000225f0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_rnglists 0000017f  00000000  00000000  000227f8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_macro  00003611  00000000  00000000  00022977  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line   00002724  00000000  00000000  00025f88  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_str    0000b0d8  00000000  00000000  000286ac  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_frame  00001c70  00000000  00000000  00033784  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 0000007b  00000000  00000000  000353f4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000190 <__do_global_dtors_aux>:
 8000190:	b510      	push	{r4, lr}
 8000192:	4c05      	ldr	r4, [pc, #20]	; (80001a8 <__do_global_dtors_aux+0x18>)
 8000194:	7823      	ldrb	r3, [r4, #0]
 8000196:	b933      	cbnz	r3, 80001a6 <__do_global_dtors_aux+0x16>
 8000198:	4b04      	ldr	r3, [pc, #16]	; (80001ac <__do_global_dtors_aux+0x1c>)
 800019a:	b113      	cbz	r3, 80001a2 <__do_global_dtors_aux+0x12>
 800019c:	4804      	ldr	r0, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x20>)
 800019e:	f3af 8000 	nop.w
 80001a2:	2301      	movs	r3, #1
 80001a4:	7023      	strb	r3, [r4, #0]
 80001a6:	bd10      	pop	{r4, pc}
 80001a8:	200001e8 	.word	0x200001e8
 80001ac:	00000000 	.word	0x00000000
 80001b0:	080048d8 	.word	0x080048d8

080001b4 <frame_dummy>:
 80001b4:	b508      	push	{r3, lr}
 80001b6:	4b03      	ldr	r3, [pc, #12]	; (80001c4 <frame_dummy+0x10>)
 80001b8:	b11b      	cbz	r3, 80001c2 <frame_dummy+0xe>
 80001ba:	4903      	ldr	r1, [pc, #12]	; (80001c8 <frame_dummy+0x14>)
 80001bc:	4803      	ldr	r0, [pc, #12]	; (80001cc <frame_dummy+0x18>)
 80001be:	f3af 8000 	nop.w
 80001c2:	bd08      	pop	{r3, pc}
 80001c4:	00000000 	.word	0x00000000
 80001c8:	200001ec 	.word	0x200001ec
 80001cc:	080048d8 	.word	0x080048d8

080001d0 <memchr>:
 80001d0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001d4:	2a10      	cmp	r2, #16
 80001d6:	db2b      	blt.n	8000230 <memchr+0x60>
 80001d8:	f010 0f07 	tst.w	r0, #7
 80001dc:	d008      	beq.n	80001f0 <memchr+0x20>
 80001de:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001e2:	3a01      	subs	r2, #1
 80001e4:	428b      	cmp	r3, r1
 80001e6:	d02d      	beq.n	8000244 <memchr+0x74>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	b342      	cbz	r2, 8000240 <memchr+0x70>
 80001ee:	d1f6      	bne.n	80001de <memchr+0xe>
 80001f0:	b4f0      	push	{r4, r5, r6, r7}
 80001f2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80001f6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80001fa:	f022 0407 	bic.w	r4, r2, #7
 80001fe:	f07f 0700 	mvns.w	r7, #0
 8000202:	2300      	movs	r3, #0
 8000204:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000208:	3c08      	subs	r4, #8
 800020a:	ea85 0501 	eor.w	r5, r5, r1
 800020e:	ea86 0601 	eor.w	r6, r6, r1
 8000212:	fa85 f547 	uadd8	r5, r5, r7
 8000216:	faa3 f587 	sel	r5, r3, r7
 800021a:	fa86 f647 	uadd8	r6, r6, r7
 800021e:	faa5 f687 	sel	r6, r5, r7
 8000222:	b98e      	cbnz	r6, 8000248 <memchr+0x78>
 8000224:	d1ee      	bne.n	8000204 <memchr+0x34>
 8000226:	bcf0      	pop	{r4, r5, r6, r7}
 8000228:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800022c:	f002 0207 	and.w	r2, r2, #7
 8000230:	b132      	cbz	r2, 8000240 <memchr+0x70>
 8000232:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000236:	3a01      	subs	r2, #1
 8000238:	ea83 0301 	eor.w	r3, r3, r1
 800023c:	b113      	cbz	r3, 8000244 <memchr+0x74>
 800023e:	d1f8      	bne.n	8000232 <memchr+0x62>
 8000240:	2000      	movs	r0, #0
 8000242:	4770      	bx	lr
 8000244:	3801      	subs	r0, #1
 8000246:	4770      	bx	lr
 8000248:	2d00      	cmp	r5, #0
 800024a:	bf06      	itte	eq
 800024c:	4635      	moveq	r5, r6
 800024e:	3803      	subeq	r0, #3
 8000250:	3807      	subne	r0, #7
 8000252:	f015 0f01 	tst.w	r5, #1
 8000256:	d107      	bne.n	8000268 <memchr+0x98>
 8000258:	3001      	adds	r0, #1
 800025a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800025e:	bf02      	ittt	eq
 8000260:	3001      	addeq	r0, #1
 8000262:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000266:	3001      	addeq	r0, #1
 8000268:	bcf0      	pop	{r4, r5, r6, r7}
 800026a:	3801      	subs	r0, #1
 800026c:	4770      	bx	lr
 800026e:	bf00      	nop

08000270 <strlen>:
 8000270:	4603      	mov	r3, r0
 8000272:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000276:	2a00      	cmp	r2, #0
 8000278:	d1fb      	bne.n	8000272 <strlen+0x2>
 800027a:	1a18      	subs	r0, r3, r0
 800027c:	3801      	subs	r0, #1
 800027e:	4770      	bx	lr

08000280 <__aeabi_drsub>:
 8000280:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000284:	e002      	b.n	800028c <__adddf3>
 8000286:	bf00      	nop

08000288 <__aeabi_dsub>:
 8000288:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0800028c <__adddf3>:
 800028c:	b530      	push	{r4, r5, lr}
 800028e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000292:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000296:	ea94 0f05 	teq	r4, r5
 800029a:	bf08      	it	eq
 800029c:	ea90 0f02 	teqeq	r0, r2
 80002a0:	bf1f      	itttt	ne
 80002a2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002a6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002aa:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ae:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002b2:	f000 80e2 	beq.w	800047a <__adddf3+0x1ee>
 80002b6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002ba:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002be:	bfb8      	it	lt
 80002c0:	426d      	neglt	r5, r5
 80002c2:	dd0c      	ble.n	80002de <__adddf3+0x52>
 80002c4:	442c      	add	r4, r5
 80002c6:	ea80 0202 	eor.w	r2, r0, r2
 80002ca:	ea81 0303 	eor.w	r3, r1, r3
 80002ce:	ea82 0000 	eor.w	r0, r2, r0
 80002d2:	ea83 0101 	eor.w	r1, r3, r1
 80002d6:	ea80 0202 	eor.w	r2, r0, r2
 80002da:	ea81 0303 	eor.w	r3, r1, r3
 80002de:	2d36      	cmp	r5, #54	; 0x36
 80002e0:	bf88      	it	hi
 80002e2:	bd30      	pophi	{r4, r5, pc}
 80002e4:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80002e8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80002ec:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 80002f0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80002f4:	d002      	beq.n	80002fc <__adddf3+0x70>
 80002f6:	4240      	negs	r0, r0
 80002f8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80002fc:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000300:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000304:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000308:	d002      	beq.n	8000310 <__adddf3+0x84>
 800030a:	4252      	negs	r2, r2
 800030c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000310:	ea94 0f05 	teq	r4, r5
 8000314:	f000 80a7 	beq.w	8000466 <__adddf3+0x1da>
 8000318:	f1a4 0401 	sub.w	r4, r4, #1
 800031c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000320:	db0d      	blt.n	800033e <__adddf3+0xb2>
 8000322:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000326:	fa22 f205 	lsr.w	r2, r2, r5
 800032a:	1880      	adds	r0, r0, r2
 800032c:	f141 0100 	adc.w	r1, r1, #0
 8000330:	fa03 f20e 	lsl.w	r2, r3, lr
 8000334:	1880      	adds	r0, r0, r2
 8000336:	fa43 f305 	asr.w	r3, r3, r5
 800033a:	4159      	adcs	r1, r3
 800033c:	e00e      	b.n	800035c <__adddf3+0xd0>
 800033e:	f1a5 0520 	sub.w	r5, r5, #32
 8000342:	f10e 0e20 	add.w	lr, lr, #32
 8000346:	2a01      	cmp	r2, #1
 8000348:	fa03 fc0e 	lsl.w	ip, r3, lr
 800034c:	bf28      	it	cs
 800034e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000352:	fa43 f305 	asr.w	r3, r3, r5
 8000356:	18c0      	adds	r0, r0, r3
 8000358:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800035c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000360:	d507      	bpl.n	8000372 <__adddf3+0xe6>
 8000362:	f04f 0e00 	mov.w	lr, #0
 8000366:	f1dc 0c00 	rsbs	ip, ip, #0
 800036a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800036e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000372:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000376:	d31b      	bcc.n	80003b0 <__adddf3+0x124>
 8000378:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800037c:	d30c      	bcc.n	8000398 <__adddf3+0x10c>
 800037e:	0849      	lsrs	r1, r1, #1
 8000380:	ea5f 0030 	movs.w	r0, r0, rrx
 8000384:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000388:	f104 0401 	add.w	r4, r4, #1
 800038c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000390:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8000394:	f080 809a 	bcs.w	80004cc <__adddf3+0x240>
 8000398:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 800039c:	bf08      	it	eq
 800039e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003a2:	f150 0000 	adcs.w	r0, r0, #0
 80003a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003aa:	ea41 0105 	orr.w	r1, r1, r5
 80003ae:	bd30      	pop	{r4, r5, pc}
 80003b0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003b4:	4140      	adcs	r0, r0
 80003b6:	eb41 0101 	adc.w	r1, r1, r1
 80003ba:	3c01      	subs	r4, #1
 80003bc:	bf28      	it	cs
 80003be:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80003c2:	d2e9      	bcs.n	8000398 <__adddf3+0x10c>
 80003c4:	f091 0f00 	teq	r1, #0
 80003c8:	bf04      	itt	eq
 80003ca:	4601      	moveq	r1, r0
 80003cc:	2000      	moveq	r0, #0
 80003ce:	fab1 f381 	clz	r3, r1
 80003d2:	bf08      	it	eq
 80003d4:	3320      	addeq	r3, #32
 80003d6:	f1a3 030b 	sub.w	r3, r3, #11
 80003da:	f1b3 0220 	subs.w	r2, r3, #32
 80003de:	da0c      	bge.n	80003fa <__adddf3+0x16e>
 80003e0:	320c      	adds	r2, #12
 80003e2:	dd08      	ble.n	80003f6 <__adddf3+0x16a>
 80003e4:	f102 0c14 	add.w	ip, r2, #20
 80003e8:	f1c2 020c 	rsb	r2, r2, #12
 80003ec:	fa01 f00c 	lsl.w	r0, r1, ip
 80003f0:	fa21 f102 	lsr.w	r1, r1, r2
 80003f4:	e00c      	b.n	8000410 <__adddf3+0x184>
 80003f6:	f102 0214 	add.w	r2, r2, #20
 80003fa:	bfd8      	it	le
 80003fc:	f1c2 0c20 	rsble	ip, r2, #32
 8000400:	fa01 f102 	lsl.w	r1, r1, r2
 8000404:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000408:	bfdc      	itt	le
 800040a:	ea41 010c 	orrle.w	r1, r1, ip
 800040e:	4090      	lslle	r0, r2
 8000410:	1ae4      	subs	r4, r4, r3
 8000412:	bfa2      	ittt	ge
 8000414:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000418:	4329      	orrge	r1, r5
 800041a:	bd30      	popge	{r4, r5, pc}
 800041c:	ea6f 0404 	mvn.w	r4, r4
 8000420:	3c1f      	subs	r4, #31
 8000422:	da1c      	bge.n	800045e <__adddf3+0x1d2>
 8000424:	340c      	adds	r4, #12
 8000426:	dc0e      	bgt.n	8000446 <__adddf3+0x1ba>
 8000428:	f104 0414 	add.w	r4, r4, #20
 800042c:	f1c4 0220 	rsb	r2, r4, #32
 8000430:	fa20 f004 	lsr.w	r0, r0, r4
 8000434:	fa01 f302 	lsl.w	r3, r1, r2
 8000438:	ea40 0003 	orr.w	r0, r0, r3
 800043c:	fa21 f304 	lsr.w	r3, r1, r4
 8000440:	ea45 0103 	orr.w	r1, r5, r3
 8000444:	bd30      	pop	{r4, r5, pc}
 8000446:	f1c4 040c 	rsb	r4, r4, #12
 800044a:	f1c4 0220 	rsb	r2, r4, #32
 800044e:	fa20 f002 	lsr.w	r0, r0, r2
 8000452:	fa01 f304 	lsl.w	r3, r1, r4
 8000456:	ea40 0003 	orr.w	r0, r0, r3
 800045a:	4629      	mov	r1, r5
 800045c:	bd30      	pop	{r4, r5, pc}
 800045e:	fa21 f004 	lsr.w	r0, r1, r4
 8000462:	4629      	mov	r1, r5
 8000464:	bd30      	pop	{r4, r5, pc}
 8000466:	f094 0f00 	teq	r4, #0
 800046a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800046e:	bf06      	itte	eq
 8000470:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000474:	3401      	addeq	r4, #1
 8000476:	3d01      	subne	r5, #1
 8000478:	e74e      	b.n	8000318 <__adddf3+0x8c>
 800047a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800047e:	bf18      	it	ne
 8000480:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000484:	d029      	beq.n	80004da <__adddf3+0x24e>
 8000486:	ea94 0f05 	teq	r4, r5
 800048a:	bf08      	it	eq
 800048c:	ea90 0f02 	teqeq	r0, r2
 8000490:	d005      	beq.n	800049e <__adddf3+0x212>
 8000492:	ea54 0c00 	orrs.w	ip, r4, r0
 8000496:	bf04      	itt	eq
 8000498:	4619      	moveq	r1, r3
 800049a:	4610      	moveq	r0, r2
 800049c:	bd30      	pop	{r4, r5, pc}
 800049e:	ea91 0f03 	teq	r1, r3
 80004a2:	bf1e      	ittt	ne
 80004a4:	2100      	movne	r1, #0
 80004a6:	2000      	movne	r0, #0
 80004a8:	bd30      	popne	{r4, r5, pc}
 80004aa:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ae:	d105      	bne.n	80004bc <__adddf3+0x230>
 80004b0:	0040      	lsls	r0, r0, #1
 80004b2:	4149      	adcs	r1, r1
 80004b4:	bf28      	it	cs
 80004b6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004ba:	bd30      	pop	{r4, r5, pc}
 80004bc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80004c0:	bf3c      	itt	cc
 80004c2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80004c6:	bd30      	popcc	{r4, r5, pc}
 80004c8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80004cc:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80004d0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80004d4:	f04f 0000 	mov.w	r0, #0
 80004d8:	bd30      	pop	{r4, r5, pc}
 80004da:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004de:	bf1a      	itte	ne
 80004e0:	4619      	movne	r1, r3
 80004e2:	4610      	movne	r0, r2
 80004e4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80004e8:	bf1c      	itt	ne
 80004ea:	460b      	movne	r3, r1
 80004ec:	4602      	movne	r2, r0
 80004ee:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80004f2:	bf06      	itte	eq
 80004f4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80004f8:	ea91 0f03 	teqeq	r1, r3
 80004fc:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000500:	bd30      	pop	{r4, r5, pc}
 8000502:	bf00      	nop

08000504 <__aeabi_ui2d>:
 8000504:	f090 0f00 	teq	r0, #0
 8000508:	bf04      	itt	eq
 800050a:	2100      	moveq	r1, #0
 800050c:	4770      	bxeq	lr
 800050e:	b530      	push	{r4, r5, lr}
 8000510:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000514:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000518:	f04f 0500 	mov.w	r5, #0
 800051c:	f04f 0100 	mov.w	r1, #0
 8000520:	e750      	b.n	80003c4 <__adddf3+0x138>
 8000522:	bf00      	nop

08000524 <__aeabi_i2d>:
 8000524:	f090 0f00 	teq	r0, #0
 8000528:	bf04      	itt	eq
 800052a:	2100      	moveq	r1, #0
 800052c:	4770      	bxeq	lr
 800052e:	b530      	push	{r4, r5, lr}
 8000530:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000534:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000538:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800053c:	bf48      	it	mi
 800053e:	4240      	negmi	r0, r0
 8000540:	f04f 0100 	mov.w	r1, #0
 8000544:	e73e      	b.n	80003c4 <__adddf3+0x138>
 8000546:	bf00      	nop

08000548 <__aeabi_f2d>:
 8000548:	0042      	lsls	r2, r0, #1
 800054a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800054e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000552:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000556:	bf1f      	itttt	ne
 8000558:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800055c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000560:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000564:	4770      	bxne	lr
 8000566:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800056a:	bf08      	it	eq
 800056c:	4770      	bxeq	lr
 800056e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000572:	bf04      	itt	eq
 8000574:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000578:	4770      	bxeq	lr
 800057a:	b530      	push	{r4, r5, lr}
 800057c:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000580:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000584:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000588:	e71c      	b.n	80003c4 <__adddf3+0x138>
 800058a:	bf00      	nop

0800058c <__aeabi_ul2d>:
 800058c:	ea50 0201 	orrs.w	r2, r0, r1
 8000590:	bf08      	it	eq
 8000592:	4770      	bxeq	lr
 8000594:	b530      	push	{r4, r5, lr}
 8000596:	f04f 0500 	mov.w	r5, #0
 800059a:	e00a      	b.n	80005b2 <__aeabi_l2d+0x16>

0800059c <__aeabi_l2d>:
 800059c:	ea50 0201 	orrs.w	r2, r0, r1
 80005a0:	bf08      	it	eq
 80005a2:	4770      	bxeq	lr
 80005a4:	b530      	push	{r4, r5, lr}
 80005a6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005aa:	d502      	bpl.n	80005b2 <__aeabi_l2d+0x16>
 80005ac:	4240      	negs	r0, r0
 80005ae:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005b2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005b6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005ba:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005be:	f43f aed8 	beq.w	8000372 <__adddf3+0xe6>
 80005c2:	f04f 0203 	mov.w	r2, #3
 80005c6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005ca:	bf18      	it	ne
 80005cc:	3203      	addne	r2, #3
 80005ce:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005d2:	bf18      	it	ne
 80005d4:	3203      	addne	r2, #3
 80005d6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005da:	f1c2 0320 	rsb	r3, r2, #32
 80005de:	fa00 fc03 	lsl.w	ip, r0, r3
 80005e2:	fa20 f002 	lsr.w	r0, r0, r2
 80005e6:	fa01 fe03 	lsl.w	lr, r1, r3
 80005ea:	ea40 000e 	orr.w	r0, r0, lr
 80005ee:	fa21 f102 	lsr.w	r1, r1, r2
 80005f2:	4414      	add	r4, r2
 80005f4:	e6bd      	b.n	8000372 <__adddf3+0xe6>
 80005f6:	bf00      	nop

080005f8 <__aeabi_dmul>:
 80005f8:	b570      	push	{r4, r5, r6, lr}
 80005fa:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80005fe:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000602:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000606:	bf1d      	ittte	ne
 8000608:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800060c:	ea94 0f0c 	teqne	r4, ip
 8000610:	ea95 0f0c 	teqne	r5, ip
 8000614:	f000 f8de 	bleq	80007d4 <__aeabi_dmul+0x1dc>
 8000618:	442c      	add	r4, r5
 800061a:	ea81 0603 	eor.w	r6, r1, r3
 800061e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000622:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000626:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800062a:	bf18      	it	ne
 800062c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000630:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000634:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000638:	d038      	beq.n	80006ac <__aeabi_dmul+0xb4>
 800063a:	fba0 ce02 	umull	ip, lr, r0, r2
 800063e:	f04f 0500 	mov.w	r5, #0
 8000642:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000646:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800064a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800064e:	f04f 0600 	mov.w	r6, #0
 8000652:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000656:	f09c 0f00 	teq	ip, #0
 800065a:	bf18      	it	ne
 800065c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000660:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000664:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000668:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 800066c:	d204      	bcs.n	8000678 <__aeabi_dmul+0x80>
 800066e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000672:	416d      	adcs	r5, r5
 8000674:	eb46 0606 	adc.w	r6, r6, r6
 8000678:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800067c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000680:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000684:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000688:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800068c:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000690:	bf88      	it	hi
 8000692:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000696:	d81e      	bhi.n	80006d6 <__aeabi_dmul+0xde>
 8000698:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 800069c:	bf08      	it	eq
 800069e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006a2:	f150 0000 	adcs.w	r0, r0, #0
 80006a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006aa:	bd70      	pop	{r4, r5, r6, pc}
 80006ac:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006b0:	ea46 0101 	orr.w	r1, r6, r1
 80006b4:	ea40 0002 	orr.w	r0, r0, r2
 80006b8:	ea81 0103 	eor.w	r1, r1, r3
 80006bc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006c0:	bfc2      	ittt	gt
 80006c2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006c6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006ca:	bd70      	popgt	{r4, r5, r6, pc}
 80006cc:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80006d0:	f04f 0e00 	mov.w	lr, #0
 80006d4:	3c01      	subs	r4, #1
 80006d6:	f300 80ab 	bgt.w	8000830 <__aeabi_dmul+0x238>
 80006da:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80006de:	bfde      	ittt	le
 80006e0:	2000      	movle	r0, #0
 80006e2:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 80006e6:	bd70      	pople	{r4, r5, r6, pc}
 80006e8:	f1c4 0400 	rsb	r4, r4, #0
 80006ec:	3c20      	subs	r4, #32
 80006ee:	da35      	bge.n	800075c <__aeabi_dmul+0x164>
 80006f0:	340c      	adds	r4, #12
 80006f2:	dc1b      	bgt.n	800072c <__aeabi_dmul+0x134>
 80006f4:	f104 0414 	add.w	r4, r4, #20
 80006f8:	f1c4 0520 	rsb	r5, r4, #32
 80006fc:	fa00 f305 	lsl.w	r3, r0, r5
 8000700:	fa20 f004 	lsr.w	r0, r0, r4
 8000704:	fa01 f205 	lsl.w	r2, r1, r5
 8000708:	ea40 0002 	orr.w	r0, r0, r2
 800070c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000710:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000714:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000718:	fa21 f604 	lsr.w	r6, r1, r4
 800071c:	eb42 0106 	adc.w	r1, r2, r6
 8000720:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000724:	bf08      	it	eq
 8000726:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800072a:	bd70      	pop	{r4, r5, r6, pc}
 800072c:	f1c4 040c 	rsb	r4, r4, #12
 8000730:	f1c4 0520 	rsb	r5, r4, #32
 8000734:	fa00 f304 	lsl.w	r3, r0, r4
 8000738:	fa20 f005 	lsr.w	r0, r0, r5
 800073c:	fa01 f204 	lsl.w	r2, r1, r4
 8000740:	ea40 0002 	orr.w	r0, r0, r2
 8000744:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000748:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800074c:	f141 0100 	adc.w	r1, r1, #0
 8000750:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000754:	bf08      	it	eq
 8000756:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800075a:	bd70      	pop	{r4, r5, r6, pc}
 800075c:	f1c4 0520 	rsb	r5, r4, #32
 8000760:	fa00 f205 	lsl.w	r2, r0, r5
 8000764:	ea4e 0e02 	orr.w	lr, lr, r2
 8000768:	fa20 f304 	lsr.w	r3, r0, r4
 800076c:	fa01 f205 	lsl.w	r2, r1, r5
 8000770:	ea43 0302 	orr.w	r3, r3, r2
 8000774:	fa21 f004 	lsr.w	r0, r1, r4
 8000778:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800077c:	fa21 f204 	lsr.w	r2, r1, r4
 8000780:	ea20 0002 	bic.w	r0, r0, r2
 8000784:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000788:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800078c:	bf08      	it	eq
 800078e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000792:	bd70      	pop	{r4, r5, r6, pc}
 8000794:	f094 0f00 	teq	r4, #0
 8000798:	d10f      	bne.n	80007ba <__aeabi_dmul+0x1c2>
 800079a:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 800079e:	0040      	lsls	r0, r0, #1
 80007a0:	eb41 0101 	adc.w	r1, r1, r1
 80007a4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007a8:	bf08      	it	eq
 80007aa:	3c01      	subeq	r4, #1
 80007ac:	d0f7      	beq.n	800079e <__aeabi_dmul+0x1a6>
 80007ae:	ea41 0106 	orr.w	r1, r1, r6
 80007b2:	f095 0f00 	teq	r5, #0
 80007b6:	bf18      	it	ne
 80007b8:	4770      	bxne	lr
 80007ba:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007be:	0052      	lsls	r2, r2, #1
 80007c0:	eb43 0303 	adc.w	r3, r3, r3
 80007c4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80007c8:	bf08      	it	eq
 80007ca:	3d01      	subeq	r5, #1
 80007cc:	d0f7      	beq.n	80007be <__aeabi_dmul+0x1c6>
 80007ce:	ea43 0306 	orr.w	r3, r3, r6
 80007d2:	4770      	bx	lr
 80007d4:	ea94 0f0c 	teq	r4, ip
 80007d8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007dc:	bf18      	it	ne
 80007de:	ea95 0f0c 	teqne	r5, ip
 80007e2:	d00c      	beq.n	80007fe <__aeabi_dmul+0x206>
 80007e4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007e8:	bf18      	it	ne
 80007ea:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007ee:	d1d1      	bne.n	8000794 <__aeabi_dmul+0x19c>
 80007f0:	ea81 0103 	eor.w	r1, r1, r3
 80007f4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80007f8:	f04f 0000 	mov.w	r0, #0
 80007fc:	bd70      	pop	{r4, r5, r6, pc}
 80007fe:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000802:	bf06      	itte	eq
 8000804:	4610      	moveq	r0, r2
 8000806:	4619      	moveq	r1, r3
 8000808:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800080c:	d019      	beq.n	8000842 <__aeabi_dmul+0x24a>
 800080e:	ea94 0f0c 	teq	r4, ip
 8000812:	d102      	bne.n	800081a <__aeabi_dmul+0x222>
 8000814:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000818:	d113      	bne.n	8000842 <__aeabi_dmul+0x24a>
 800081a:	ea95 0f0c 	teq	r5, ip
 800081e:	d105      	bne.n	800082c <__aeabi_dmul+0x234>
 8000820:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000824:	bf1c      	itt	ne
 8000826:	4610      	movne	r0, r2
 8000828:	4619      	movne	r1, r3
 800082a:	d10a      	bne.n	8000842 <__aeabi_dmul+0x24a>
 800082c:	ea81 0103 	eor.w	r1, r1, r3
 8000830:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000834:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000838:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800083c:	f04f 0000 	mov.w	r0, #0
 8000840:	bd70      	pop	{r4, r5, r6, pc}
 8000842:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000846:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800084a:	bd70      	pop	{r4, r5, r6, pc}

0800084c <__aeabi_ddiv>:
 800084c:	b570      	push	{r4, r5, r6, lr}
 800084e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000852:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000856:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800085a:	bf1d      	ittte	ne
 800085c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000860:	ea94 0f0c 	teqne	r4, ip
 8000864:	ea95 0f0c 	teqne	r5, ip
 8000868:	f000 f8a7 	bleq	80009ba <__aeabi_ddiv+0x16e>
 800086c:	eba4 0405 	sub.w	r4, r4, r5
 8000870:	ea81 0e03 	eor.w	lr, r1, r3
 8000874:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000878:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800087c:	f000 8088 	beq.w	8000990 <__aeabi_ddiv+0x144>
 8000880:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000884:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8000888:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800088c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000890:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000894:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000898:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 800089c:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008a0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008a4:	429d      	cmp	r5, r3
 80008a6:	bf08      	it	eq
 80008a8:	4296      	cmpeq	r6, r2
 80008aa:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008ae:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008b2:	d202      	bcs.n	80008ba <__aeabi_ddiv+0x6e>
 80008b4:	085b      	lsrs	r3, r3, #1
 80008b6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ba:	1ab6      	subs	r6, r6, r2
 80008bc:	eb65 0503 	sbc.w	r5, r5, r3
 80008c0:	085b      	lsrs	r3, r3, #1
 80008c2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008c6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80008ca:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80008ce:	ebb6 0e02 	subs.w	lr, r6, r2
 80008d2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008d6:	bf22      	ittt	cs
 80008d8:	1ab6      	subcs	r6, r6, r2
 80008da:	4675      	movcs	r5, lr
 80008dc:	ea40 000c 	orrcs.w	r0, r0, ip
 80008e0:	085b      	lsrs	r3, r3, #1
 80008e2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008e6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008ea:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008ee:	bf22      	ittt	cs
 80008f0:	1ab6      	subcs	r6, r6, r2
 80008f2:	4675      	movcs	r5, lr
 80008f4:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80008f8:	085b      	lsrs	r3, r3, #1
 80008fa:	ea4f 0232 	mov.w	r2, r2, rrx
 80008fe:	ebb6 0e02 	subs.w	lr, r6, r2
 8000902:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000906:	bf22      	ittt	cs
 8000908:	1ab6      	subcs	r6, r6, r2
 800090a:	4675      	movcs	r5, lr
 800090c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000910:	085b      	lsrs	r3, r3, #1
 8000912:	ea4f 0232 	mov.w	r2, r2, rrx
 8000916:	ebb6 0e02 	subs.w	lr, r6, r2
 800091a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800091e:	bf22      	ittt	cs
 8000920:	1ab6      	subcs	r6, r6, r2
 8000922:	4675      	movcs	r5, lr
 8000924:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000928:	ea55 0e06 	orrs.w	lr, r5, r6
 800092c:	d018      	beq.n	8000960 <__aeabi_ddiv+0x114>
 800092e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000932:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000936:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800093a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800093e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000942:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000946:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800094a:	d1c0      	bne.n	80008ce <__aeabi_ddiv+0x82>
 800094c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000950:	d10b      	bne.n	800096a <__aeabi_ddiv+0x11e>
 8000952:	ea41 0100 	orr.w	r1, r1, r0
 8000956:	f04f 0000 	mov.w	r0, #0
 800095a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800095e:	e7b6      	b.n	80008ce <__aeabi_ddiv+0x82>
 8000960:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000964:	bf04      	itt	eq
 8000966:	4301      	orreq	r1, r0
 8000968:	2000      	moveq	r0, #0
 800096a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 800096e:	bf88      	it	hi
 8000970:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000974:	f63f aeaf 	bhi.w	80006d6 <__aeabi_dmul+0xde>
 8000978:	ebb5 0c03 	subs.w	ip, r5, r3
 800097c:	bf04      	itt	eq
 800097e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000982:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000986:	f150 0000 	adcs.w	r0, r0, #0
 800098a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800098e:	bd70      	pop	{r4, r5, r6, pc}
 8000990:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 8000994:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000998:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 800099c:	bfc2      	ittt	gt
 800099e:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009a2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009a6:	bd70      	popgt	{r4, r5, r6, pc}
 80009a8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009ac:	f04f 0e00 	mov.w	lr, #0
 80009b0:	3c01      	subs	r4, #1
 80009b2:	e690      	b.n	80006d6 <__aeabi_dmul+0xde>
 80009b4:	ea45 0e06 	orr.w	lr, r5, r6
 80009b8:	e68d      	b.n	80006d6 <__aeabi_dmul+0xde>
 80009ba:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009be:	ea94 0f0c 	teq	r4, ip
 80009c2:	bf08      	it	eq
 80009c4:	ea95 0f0c 	teqeq	r5, ip
 80009c8:	f43f af3b 	beq.w	8000842 <__aeabi_dmul+0x24a>
 80009cc:	ea94 0f0c 	teq	r4, ip
 80009d0:	d10a      	bne.n	80009e8 <__aeabi_ddiv+0x19c>
 80009d2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009d6:	f47f af34 	bne.w	8000842 <__aeabi_dmul+0x24a>
 80009da:	ea95 0f0c 	teq	r5, ip
 80009de:	f47f af25 	bne.w	800082c <__aeabi_dmul+0x234>
 80009e2:	4610      	mov	r0, r2
 80009e4:	4619      	mov	r1, r3
 80009e6:	e72c      	b.n	8000842 <__aeabi_dmul+0x24a>
 80009e8:	ea95 0f0c 	teq	r5, ip
 80009ec:	d106      	bne.n	80009fc <__aeabi_ddiv+0x1b0>
 80009ee:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80009f2:	f43f aefd 	beq.w	80007f0 <__aeabi_dmul+0x1f8>
 80009f6:	4610      	mov	r0, r2
 80009f8:	4619      	mov	r1, r3
 80009fa:	e722      	b.n	8000842 <__aeabi_dmul+0x24a>
 80009fc:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a00:	bf18      	it	ne
 8000a02:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a06:	f47f aec5 	bne.w	8000794 <__aeabi_dmul+0x19c>
 8000a0a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a0e:	f47f af0d 	bne.w	800082c <__aeabi_dmul+0x234>
 8000a12:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a16:	f47f aeeb 	bne.w	80007f0 <__aeabi_dmul+0x1f8>
 8000a1a:	e712      	b.n	8000842 <__aeabi_dmul+0x24a>

08000a1c <__gedf2>:
 8000a1c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a20:	e006      	b.n	8000a30 <__cmpdf2+0x4>
 8000a22:	bf00      	nop

08000a24 <__ledf2>:
 8000a24:	f04f 0c01 	mov.w	ip, #1
 8000a28:	e002      	b.n	8000a30 <__cmpdf2+0x4>
 8000a2a:	bf00      	nop

08000a2c <__cmpdf2>:
 8000a2c:	f04f 0c01 	mov.w	ip, #1
 8000a30:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a34:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a38:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a3c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a40:	bf18      	it	ne
 8000a42:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a46:	d01b      	beq.n	8000a80 <__cmpdf2+0x54>
 8000a48:	b001      	add	sp, #4
 8000a4a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a4e:	bf0c      	ite	eq
 8000a50:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a54:	ea91 0f03 	teqne	r1, r3
 8000a58:	bf02      	ittt	eq
 8000a5a:	ea90 0f02 	teqeq	r0, r2
 8000a5e:	2000      	moveq	r0, #0
 8000a60:	4770      	bxeq	lr
 8000a62:	f110 0f00 	cmn.w	r0, #0
 8000a66:	ea91 0f03 	teq	r1, r3
 8000a6a:	bf58      	it	pl
 8000a6c:	4299      	cmppl	r1, r3
 8000a6e:	bf08      	it	eq
 8000a70:	4290      	cmpeq	r0, r2
 8000a72:	bf2c      	ite	cs
 8000a74:	17d8      	asrcs	r0, r3, #31
 8000a76:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a7a:	f040 0001 	orr.w	r0, r0, #1
 8000a7e:	4770      	bx	lr
 8000a80:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a84:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a88:	d102      	bne.n	8000a90 <__cmpdf2+0x64>
 8000a8a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a8e:	d107      	bne.n	8000aa0 <__cmpdf2+0x74>
 8000a90:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a94:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a98:	d1d6      	bne.n	8000a48 <__cmpdf2+0x1c>
 8000a9a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000a9e:	d0d3      	beq.n	8000a48 <__cmpdf2+0x1c>
 8000aa0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000aa4:	4770      	bx	lr
 8000aa6:	bf00      	nop

08000aa8 <__aeabi_cdrcmple>:
 8000aa8:	4684      	mov	ip, r0
 8000aaa:	4610      	mov	r0, r2
 8000aac:	4662      	mov	r2, ip
 8000aae:	468c      	mov	ip, r1
 8000ab0:	4619      	mov	r1, r3
 8000ab2:	4663      	mov	r3, ip
 8000ab4:	e000      	b.n	8000ab8 <__aeabi_cdcmpeq>
 8000ab6:	bf00      	nop

08000ab8 <__aeabi_cdcmpeq>:
 8000ab8:	b501      	push	{r0, lr}
 8000aba:	f7ff ffb7 	bl	8000a2c <__cmpdf2>
 8000abe:	2800      	cmp	r0, #0
 8000ac0:	bf48      	it	mi
 8000ac2:	f110 0f00 	cmnmi.w	r0, #0
 8000ac6:	bd01      	pop	{r0, pc}

08000ac8 <__aeabi_dcmpeq>:
 8000ac8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000acc:	f7ff fff4 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000ad0:	bf0c      	ite	eq
 8000ad2:	2001      	moveq	r0, #1
 8000ad4:	2000      	movne	r0, #0
 8000ad6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000ada:	bf00      	nop

08000adc <__aeabi_dcmplt>:
 8000adc:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000ae0:	f7ff ffea 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000ae4:	bf34      	ite	cc
 8000ae6:	2001      	movcc	r0, #1
 8000ae8:	2000      	movcs	r0, #0
 8000aea:	f85d fb08 	ldr.w	pc, [sp], #8
 8000aee:	bf00      	nop

08000af0 <__aeabi_dcmple>:
 8000af0:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000af4:	f7ff ffe0 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000af8:	bf94      	ite	ls
 8000afa:	2001      	movls	r0, #1
 8000afc:	2000      	movhi	r0, #0
 8000afe:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b02:	bf00      	nop

08000b04 <__aeabi_dcmpge>:
 8000b04:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b08:	f7ff ffce 	bl	8000aa8 <__aeabi_cdrcmple>
 8000b0c:	bf94      	ite	ls
 8000b0e:	2001      	movls	r0, #1
 8000b10:	2000      	movhi	r0, #0
 8000b12:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b16:	bf00      	nop

08000b18 <__aeabi_dcmpgt>:
 8000b18:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b1c:	f7ff ffc4 	bl	8000aa8 <__aeabi_cdrcmple>
 8000b20:	bf34      	ite	cc
 8000b22:	2001      	movcc	r0, #1
 8000b24:	2000      	movcs	r0, #0
 8000b26:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b2a:	bf00      	nop

08000b2c <__aeabi_dcmpun>:
 8000b2c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b30:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b34:	d102      	bne.n	8000b3c <__aeabi_dcmpun+0x10>
 8000b36:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b3a:	d10a      	bne.n	8000b52 <__aeabi_dcmpun+0x26>
 8000b3c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b40:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b44:	d102      	bne.n	8000b4c <__aeabi_dcmpun+0x20>
 8000b46:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b4a:	d102      	bne.n	8000b52 <__aeabi_dcmpun+0x26>
 8000b4c:	f04f 0000 	mov.w	r0, #0
 8000b50:	4770      	bx	lr
 8000b52:	f04f 0001 	mov.w	r0, #1
 8000b56:	4770      	bx	lr

08000b58 <__aeabi_d2iz>:
 8000b58:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b5c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000b60:	d215      	bcs.n	8000b8e <__aeabi_d2iz+0x36>
 8000b62:	d511      	bpl.n	8000b88 <__aeabi_d2iz+0x30>
 8000b64:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000b68:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b6c:	d912      	bls.n	8000b94 <__aeabi_d2iz+0x3c>
 8000b6e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b72:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000b76:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b7a:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000b7e:	fa23 f002 	lsr.w	r0, r3, r2
 8000b82:	bf18      	it	ne
 8000b84:	4240      	negne	r0, r0
 8000b86:	4770      	bx	lr
 8000b88:	f04f 0000 	mov.w	r0, #0
 8000b8c:	4770      	bx	lr
 8000b8e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000b92:	d105      	bne.n	8000ba0 <__aeabi_d2iz+0x48>
 8000b94:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000b98:	bf08      	it	eq
 8000b9a:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000b9e:	4770      	bx	lr
 8000ba0:	f04f 0000 	mov.w	r0, #0
 8000ba4:	4770      	bx	lr
 8000ba6:	bf00      	nop

08000ba8 <I2C1_GPIOInits>:
 * PB6-> SCL
 * PB7 -> SDA
 */

void I2C1_GPIOInits(void)
{
 8000ba8:	b580      	push	{r7, lr}
 8000baa:	b084      	sub	sp, #16
 8000bac:	af00      	add	r7, sp, #0
	GPIO_Handle_t I2CPins;

	I2CPins.pGPIOx = GPIOB;
 8000bae:	4b0e      	ldr	r3, [pc, #56]	; (8000be8 <I2C1_GPIOInits+0x40>)
 8000bb0:	607b      	str	r3, [r7, #4]
	I2CPins.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_ALTFN;
 8000bb2:	2302      	movs	r3, #2
 8000bb4:	727b      	strb	r3, [r7, #9]
	I2CPins.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_OD;
 8000bb6:	2301      	movs	r3, #1
 8000bb8:	733b      	strb	r3, [r7, #12]
	I2CPins.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_PIN_PU;
 8000bba:	2301      	movs	r3, #1
 8000bbc:	72fb      	strb	r3, [r7, #11]
	I2CPins.GPIO_PinConfig.GPIO_PinAltFunMode = 4;
 8000bbe:	2304      	movs	r3, #4
 8000bc0:	737b      	strb	r3, [r7, #13]
	I2CPins. GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 8000bc2:	2302      	movs	r3, #2
 8000bc4:	72bb      	strb	r3, [r7, #10]

	//scl
	I2CPins.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_6;
 8000bc6:	2306      	movs	r3, #6
 8000bc8:	723b      	strb	r3, [r7, #8]
	GPIO_Init(&I2CPins);
 8000bca:	1d3b      	adds	r3, r7, #4
 8000bcc:	4618      	mov	r0, r3
 8000bce:	f000 f9c9 	bl	8000f64 <GPIO_Init>


	//sda
	I2CPins.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_7;
 8000bd2:	2307      	movs	r3, #7
 8000bd4:	723b      	strb	r3, [r7, #8]
	GPIO_Init(&I2CPins);
 8000bd6:	1d3b      	adds	r3, r7, #4
 8000bd8:	4618      	mov	r0, r3
 8000bda:	f000 f9c3 	bl	8000f64 <GPIO_Init>


}
 8000bde:	bf00      	nop
 8000be0:	3710      	adds	r7, #16
 8000be2:	46bd      	mov	sp, r7
 8000be4:	bd80      	pop	{r7, pc}
 8000be6:	bf00      	nop
 8000be8:	40020400 	.word	0x40020400

08000bec <I2C1_Inits>:

void I2C1_Inits(void)
{
 8000bec:	b580      	push	{r7, lr}
 8000bee:	af00      	add	r7, sp, #0
	I2C1Handle.pI2Cx = I2C1;
 8000bf0:	4b09      	ldr	r3, [pc, #36]	; (8000c18 <I2C1_Inits+0x2c>)
 8000bf2:	4a0a      	ldr	r2, [pc, #40]	; (8000c1c <I2C1_Inits+0x30>)
 8000bf4:	601a      	str	r2, [r3, #0]
	I2C1Handle.I2C_Config.I2C_AckControl = I2C_ACK_ENABLE;
 8000bf6:	4b08      	ldr	r3, [pc, #32]	; (8000c18 <I2C1_Inits+0x2c>)
 8000bf8:	2201      	movs	r2, #1
 8000bfa:	725a      	strb	r2, [r3, #9]
	I2C1Handle.I2C_Config.I2C_DeviceAddress = MY_ADDR;
 8000bfc:	4b06      	ldr	r3, [pc, #24]	; (8000c18 <I2C1_Inits+0x2c>)
 8000bfe:	2261      	movs	r2, #97	; 0x61
 8000c00:	721a      	strb	r2, [r3, #8]
	I2C1Handle.I2C_Config.I2C_FMDutyCycle = I2C_FM_DUTY_2;
 8000c02:	4b05      	ldr	r3, [pc, #20]	; (8000c18 <I2C1_Inits+0x2c>)
 8000c04:	2200      	movs	r2, #0
 8000c06:	729a      	strb	r2, [r3, #10]
	I2C1Handle.I2C_Config.I2C_SCLSpeed = I2C_SCL_SPEED_SM;
 8000c08:	4b03      	ldr	r3, [pc, #12]	; (8000c18 <I2C1_Inits+0x2c>)
 8000c0a:	4a05      	ldr	r2, [pc, #20]	; (8000c20 <I2C1_Inits+0x34>)
 8000c0c:	605a      	str	r2, [r3, #4]

	I2C_Init(&I2C1Handle);
 8000c0e:	4802      	ldr	r0, [pc, #8]	; (8000c18 <I2C1_Inits+0x2c>)
 8000c10:	f000 fc00 	bl	8001414 <I2C_Init>

}
 8000c14:	bf00      	nop
 8000c16:	bd80      	pop	{r7, pc}
 8000c18:	20000204 	.word	0x20000204
 8000c1c:	40005400 	.word	0x40005400
 8000c20:	000186a0 	.word	0x000186a0

08000c24 <GPIO_ButtonInit>:

void GPIO_ButtonInit(void)
{
 8000c24:	b580      	push	{r7, lr}
 8000c26:	b084      	sub	sp, #16
 8000c28:	af00      	add	r7, sp, #0
	GPIO_Handle_t GPIOBtn;

	//this is btn gpio configuration
	GPIOBtn.pGPIOx = GPIOA;
 8000c2a:	4b09      	ldr	r3, [pc, #36]	; (8000c50 <GPIO_ButtonInit+0x2c>)
 8000c2c:	607b      	str	r3, [r7, #4]
	GPIOBtn.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_0;
 8000c2e:	2300      	movs	r3, #0
 8000c30:	723b      	strb	r3, [r7, #8]
	GPIOBtn.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_IN;
 8000c32:	2300      	movs	r3, #0
 8000c34:	727b      	strb	r3, [r7, #9]
	GPIOBtn.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 8000c36:	2302      	movs	r3, #2
 8000c38:	72bb      	strb	r3, [r7, #10]
	GPIOBtn.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 8000c3a:	2300      	movs	r3, #0
 8000c3c:	72fb      	strb	r3, [r7, #11]

	GPIO_Init(&GPIOBtn);
 8000c3e:	1d3b      	adds	r3, r7, #4
 8000c40:	4618      	mov	r0, r3
 8000c42:	f000 f98f 	bl	8000f64 <GPIO_Init>

}
 8000c46:	bf00      	nop
 8000c48:	3710      	adds	r7, #16
 8000c4a:	46bd      	mov	sp, r7
 8000c4c:	bd80      	pop	{r7, pc}
 8000c4e:	bf00      	nop
 8000c50:	40020000 	.word	0x40020000

08000c54 <led_gpio_inits>:
void led_gpio_inits(){
 8000c54:	b580      	push	{r7, lr}
 8000c56:	b084      	sub	sp, #16
 8000c58:	af00      	add	r7, sp, #0
	GPIO_Handle_t gpio;
	gpio.pGPIOx = GPIOD;
 8000c5a:	4b13      	ldr	r3, [pc, #76]	; (8000ca8 <led_gpio_inits+0x54>)
 8000c5c:	607b      	str	r3, [r7, #4]
	gpio.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 8000c5e:	2301      	movs	r3, #1
 8000c60:	727b      	strb	r3, [r7, #9]
	gpio.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 8000c62:	2300      	movs	r3, #0
 8000c64:	733b      	strb	r3, [r7, #12]
	gpio.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 8000c66:	2300      	movs	r3, #0
 8000c68:	72fb      	strb	r3, [r7, #11]
	gpio.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 8000c6a:	2302      	movs	r3, #2
 8000c6c:	72bb      	strb	r3, [r7, #10]
	gpio.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_12;
 8000c6e:	230c      	movs	r3, #12
 8000c70:	723b      	strb	r3, [r7, #8]

	GPIO_Init(&gpio);
 8000c72:	1d3b      	adds	r3, r7, #4
 8000c74:	4618      	mov	r0, r3
 8000c76:	f000 f975 	bl	8000f64 <GPIO_Init>
	gpio.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_13;
 8000c7a:	230d      	movs	r3, #13
 8000c7c:	723b      	strb	r3, [r7, #8]

	GPIO_Init(&gpio);
 8000c7e:	1d3b      	adds	r3, r7, #4
 8000c80:	4618      	mov	r0, r3
 8000c82:	f000 f96f 	bl	8000f64 <GPIO_Init>
	gpio.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_14;
 8000c86:	230e      	movs	r3, #14
 8000c88:	723b      	strb	r3, [r7, #8]

	GPIO_Init(&gpio);
 8000c8a:	1d3b      	adds	r3, r7, #4
 8000c8c:	4618      	mov	r0, r3
 8000c8e:	f000 f969 	bl	8000f64 <GPIO_Init>
	gpio.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_15;
 8000c92:	230f      	movs	r3, #15
 8000c94:	723b      	strb	r3, [r7, #8]

	GPIO_Init(&gpio);
 8000c96:	1d3b      	adds	r3, r7, #4
 8000c98:	4618      	mov	r0, r3
 8000c9a:	f000 f963 	bl	8000f64 <GPIO_Init>

}
 8000c9e:	bf00      	nop
 8000ca0:	3710      	adds	r7, #16
 8000ca2:	46bd      	mov	sp, r7
 8000ca4:	bd80      	pop	{r7, pc}
 8000ca6:	bf00      	nop
 8000ca8:	40020c00 	.word	0x40020c00

08000cac <main>:



int main(void)
{
 8000cac:	b580      	push	{r7, lr}
 8000cae:	b084      	sub	sp, #16
 8000cb0:	af02      	add	r7, sp, #8

	uint8_t commandcode;

	uint8_t len=7;
 8000cb2:	2307      	movs	r3, #7
 8000cb4:	70fb      	strb	r3, [r7, #3]

	initialise_monitor_handles();
 8000cb6:	f003 fd63 	bl	8004780 <initialise_monitor_handles>

	printf("Application is running\n");
 8000cba:	481c      	ldr	r0, [pc, #112]	; (8000d2c <main+0x80>)
 8000cbc:	f001 fb70 	bl	80023a0 <puts>

	//Led Configurations
	led_gpio_inits();
 8000cc0:	f7ff ffc8 	bl	8000c54 <led_gpio_inits>

	GPIO_ButtonInit();
 8000cc4:	f7ff ffae 	bl	8000c24 <GPIO_ButtonInit>

	//i2c pin inits
	I2C1_GPIOInits();
 8000cc8:	f7ff ff6e 	bl	8000ba8 <I2C1_GPIOInits>

	//i2c peripheral configuration
	I2C1_Inits();
 8000ccc:	f7ff ff8e 	bl	8000bec <I2C1_Inits>

	//enable the i2c peripheral
	I2C_PeripheralControl(I2C1,ENABLE);
 8000cd0:	2101      	movs	r1, #1
 8000cd2:	4817      	ldr	r0, [pc, #92]	; (8000d30 <main+0x84>)
 8000cd4:	f000 fb29 	bl	800132a <I2C_PeripheralControl>

	//ack bit is made 1 after PE=1
	I2C_ManageAcking(I2C1,I2C_ACK_ENABLE);
 8000cd8:	2101      	movs	r1, #1
 8000cda:	4815      	ldr	r0, [pc, #84]	; (8000d30 <main+0x84>)
 8000cdc:	f000 fd55 	bl	800178a <I2C_ManageAcking>

		//to avoid button de-bouncing related issues 200ms of delay
		//		delay();


		commandcode = 0x05;
 8000ce0:	2305      	movs	r3, #5
 8000ce2:	70bb      	strb	r3, [r7, #2]
		I2C_MasterSendData(&I2C1Handle,&commandcode,1,SLAVE_ADDR,I2C_ENABLE_SR);
 8000ce4:	1cb9      	adds	r1, r7, #2
 8000ce6:	2301      	movs	r3, #1
 8000ce8:	9300      	str	r3, [sp, #0]
 8000cea:	2368      	movs	r3, #104	; 0x68
 8000cec:	2201      	movs	r2, #1
 8000cee:	4811      	ldr	r0, [pc, #68]	; (8000d34 <main+0x88>)
 8000cf0:	f000 fc56 	bl	80015a0 <I2C_MasterSendData>


		I2C_MasterReceiveData(&I2C1Handle,rcv_buf,len,SLAVE_ADDR,I2C_DISABLE_SR);
 8000cf4:	78fa      	ldrb	r2, [r7, #3]
 8000cf6:	2300      	movs	r3, #0
 8000cf8:	9300      	str	r3, [sp, #0]
 8000cfa:	2368      	movs	r3, #104	; 0x68
 8000cfc:	490e      	ldr	r1, [pc, #56]	; (8000d38 <main+0x8c>)
 8000cfe:	480d      	ldr	r0, [pc, #52]	; (8000d34 <main+0x88>)
 8000d00:	f000 fcb1 	bl	8001666 <I2C_MasterReceiveData>

		for (int i=0;i<len;i++){
 8000d04:	2300      	movs	r3, #0
 8000d06:	607b      	str	r3, [r7, #4]
 8000d08:	e00b      	b.n	8000d22 <main+0x76>
			printf("byte %d is : %d\n",i,rcv_buf[i]);
 8000d0a:	4a0b      	ldr	r2, [pc, #44]	; (8000d38 <main+0x8c>)
 8000d0c:	687b      	ldr	r3, [r7, #4]
 8000d0e:	4413      	add	r3, r2
 8000d10:	781b      	ldrb	r3, [r3, #0]
 8000d12:	461a      	mov	r2, r3
 8000d14:	6879      	ldr	r1, [r7, #4]
 8000d16:	4809      	ldr	r0, [pc, #36]	; (8000d3c <main+0x90>)
 8000d18:	f001 fadc 	bl	80022d4 <iprintf>
		for (int i=0;i<len;i++){
 8000d1c:	687b      	ldr	r3, [r7, #4]
 8000d1e:	3301      	adds	r3, #1
 8000d20:	607b      	str	r3, [r7, #4]
 8000d22:	78fb      	ldrb	r3, [r7, #3]
 8000d24:	687a      	ldr	r2, [r7, #4]
 8000d26:	429a      	cmp	r2, r3
 8000d28:	dbef      	blt.n	8000d0a <main+0x5e>
		commandcode = 0x05;
 8000d2a:	e7d9      	b.n	8000ce0 <main+0x34>
 8000d2c:	080048f0 	.word	0x080048f0
 8000d30:	40005400 	.word	0x40005400
 8000d34:	20000204 	.word	0x20000204
 8000d38:	2000022c 	.word	0x2000022c
 8000d3c:	08004908 	.word	0x08004908

08000d40 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000d40:	480d      	ldr	r0, [pc, #52]	; (8000d78 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000d42:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000d44:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000d48:	480c      	ldr	r0, [pc, #48]	; (8000d7c <LoopForever+0x6>)
  ldr r1, =_edata
 8000d4a:	490d      	ldr	r1, [pc, #52]	; (8000d80 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000d4c:	4a0d      	ldr	r2, [pc, #52]	; (8000d84 <LoopForever+0xe>)
  movs r3, #0
 8000d4e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000d50:	e002      	b.n	8000d58 <LoopCopyDataInit>

08000d52 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000d52:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000d54:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000d56:	3304      	adds	r3, #4

08000d58 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000d58:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000d5a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000d5c:	d3f9      	bcc.n	8000d52 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000d5e:	4a0a      	ldr	r2, [pc, #40]	; (8000d88 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000d60:	4c0a      	ldr	r4, [pc, #40]	; (8000d8c <LoopForever+0x16>)
  movs r3, #0
 8000d62:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000d64:	e001      	b.n	8000d6a <LoopFillZerobss>

08000d66 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000d66:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000d68:	3204      	adds	r2, #4

08000d6a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000d6a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000d6c:	d3fb      	bcc.n	8000d66 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000d6e:	f001 fc49 	bl	8002604 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000d72:	f7ff ff9b 	bl	8000cac <main>

08000d76 <LoopForever>:

LoopForever:
  b LoopForever
 8000d76:	e7fe      	b.n	8000d76 <LoopForever>
  ldr   r0, =_estack
 8000d78:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000d7c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000d80:	200001e8 	.word	0x200001e8
  ldr r2, =_sidata
 8000d84:	08004cb8 	.word	0x08004cb8
  ldr r2, =_sbss
 8000d88:	200001e8 	.word	0x200001e8
  ldr r4, =_ebss
 8000d8c:	20000434 	.word	0x20000434

08000d90 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000d90:	e7fe      	b.n	8000d90 <ADC_IRQHandler>
	...

08000d94 <GPIO_PeriClockControl>:
 *
 * @Note              -  none

 */
void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t EnorDi)
{
 8000d94:	b480      	push	{r7}
 8000d96:	b083      	sub	sp, #12
 8000d98:	af00      	add	r7, sp, #0
 8000d9a:	6078      	str	r0, [r7, #4]
 8000d9c:	460b      	mov	r3, r1
 8000d9e:	70fb      	strb	r3, [r7, #3]
	if(EnorDi == ENABLE)
 8000da0:	78fb      	ldrb	r3, [r7, #3]
 8000da2:	2b01      	cmp	r3, #1
 8000da4:	d162      	bne.n	8000e6c <GPIO_PeriClockControl+0xd8>
	{
		if(pGPIOx == GPIOA)
 8000da6:	687b      	ldr	r3, [r7, #4]
 8000da8:	4a64      	ldr	r2, [pc, #400]	; (8000f3c <GPIO_PeriClockControl+0x1a8>)
 8000daa:	4293      	cmp	r3, r2
 8000dac:	d106      	bne.n	8000dbc <GPIO_PeriClockControl+0x28>
		{
			GPIOA_PCLK_EN();
 8000dae:	4b64      	ldr	r3, [pc, #400]	; (8000f40 <GPIO_PeriClockControl+0x1ac>)
 8000db0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000db2:	4a63      	ldr	r2, [pc, #396]	; (8000f40 <GPIO_PeriClockControl+0x1ac>)
 8000db4:	f043 0301 	orr.w	r3, r3, #1
 8000db8:	6313      	str	r3, [r2, #48]	; 0x30
		{
			GPIOI_PCLK_DI();
		}
	}

}
 8000dba:	e0b9      	b.n	8000f30 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOB)
 8000dbc:	687b      	ldr	r3, [r7, #4]
 8000dbe:	4a61      	ldr	r2, [pc, #388]	; (8000f44 <GPIO_PeriClockControl+0x1b0>)
 8000dc0:	4293      	cmp	r3, r2
 8000dc2:	d106      	bne.n	8000dd2 <GPIO_PeriClockControl+0x3e>
			GPIOB_PCLK_EN();
 8000dc4:	4b5e      	ldr	r3, [pc, #376]	; (8000f40 <GPIO_PeriClockControl+0x1ac>)
 8000dc6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000dc8:	4a5d      	ldr	r2, [pc, #372]	; (8000f40 <GPIO_PeriClockControl+0x1ac>)
 8000dca:	f043 0302 	orr.w	r3, r3, #2
 8000dce:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000dd0:	e0ae      	b.n	8000f30 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOC)
 8000dd2:	687b      	ldr	r3, [r7, #4]
 8000dd4:	4a5c      	ldr	r2, [pc, #368]	; (8000f48 <GPIO_PeriClockControl+0x1b4>)
 8000dd6:	4293      	cmp	r3, r2
 8000dd8:	d106      	bne.n	8000de8 <GPIO_PeriClockControl+0x54>
			GPIOC_PCLK_EN();
 8000dda:	4b59      	ldr	r3, [pc, #356]	; (8000f40 <GPIO_PeriClockControl+0x1ac>)
 8000ddc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000dde:	4a58      	ldr	r2, [pc, #352]	; (8000f40 <GPIO_PeriClockControl+0x1ac>)
 8000de0:	f043 0304 	orr.w	r3, r3, #4
 8000de4:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000de6:	e0a3      	b.n	8000f30 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOD)
 8000de8:	687b      	ldr	r3, [r7, #4]
 8000dea:	4a58      	ldr	r2, [pc, #352]	; (8000f4c <GPIO_PeriClockControl+0x1b8>)
 8000dec:	4293      	cmp	r3, r2
 8000dee:	d106      	bne.n	8000dfe <GPIO_PeriClockControl+0x6a>
			GPIOD_PCLK_EN();
 8000df0:	4b53      	ldr	r3, [pc, #332]	; (8000f40 <GPIO_PeriClockControl+0x1ac>)
 8000df2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000df4:	4a52      	ldr	r2, [pc, #328]	; (8000f40 <GPIO_PeriClockControl+0x1ac>)
 8000df6:	f043 0308 	orr.w	r3, r3, #8
 8000dfa:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000dfc:	e098      	b.n	8000f30 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOE)
 8000dfe:	687b      	ldr	r3, [r7, #4]
 8000e00:	4a53      	ldr	r2, [pc, #332]	; (8000f50 <GPIO_PeriClockControl+0x1bc>)
 8000e02:	4293      	cmp	r3, r2
 8000e04:	d106      	bne.n	8000e14 <GPIO_PeriClockControl+0x80>
			GPIOE_PCLK_EN();
 8000e06:	4b4e      	ldr	r3, [pc, #312]	; (8000f40 <GPIO_PeriClockControl+0x1ac>)
 8000e08:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000e0a:	4a4d      	ldr	r2, [pc, #308]	; (8000f40 <GPIO_PeriClockControl+0x1ac>)
 8000e0c:	f043 0310 	orr.w	r3, r3, #16
 8000e10:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000e12:	e08d      	b.n	8000f30 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOF)
 8000e14:	687b      	ldr	r3, [r7, #4]
 8000e16:	4a4f      	ldr	r2, [pc, #316]	; (8000f54 <GPIO_PeriClockControl+0x1c0>)
 8000e18:	4293      	cmp	r3, r2
 8000e1a:	d106      	bne.n	8000e2a <GPIO_PeriClockControl+0x96>
			GPIOF_PCLK_EN();
 8000e1c:	4b48      	ldr	r3, [pc, #288]	; (8000f40 <GPIO_PeriClockControl+0x1ac>)
 8000e1e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000e20:	4a47      	ldr	r2, [pc, #284]	; (8000f40 <GPIO_PeriClockControl+0x1ac>)
 8000e22:	f043 0320 	orr.w	r3, r3, #32
 8000e26:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000e28:	e082      	b.n	8000f30 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOG)
 8000e2a:	687b      	ldr	r3, [r7, #4]
 8000e2c:	4a4a      	ldr	r2, [pc, #296]	; (8000f58 <GPIO_PeriClockControl+0x1c4>)
 8000e2e:	4293      	cmp	r3, r2
 8000e30:	d106      	bne.n	8000e40 <GPIO_PeriClockControl+0xac>
			GPIOG_PCLK_EN();
 8000e32:	4b43      	ldr	r3, [pc, #268]	; (8000f40 <GPIO_PeriClockControl+0x1ac>)
 8000e34:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000e36:	4a42      	ldr	r2, [pc, #264]	; (8000f40 <GPIO_PeriClockControl+0x1ac>)
 8000e38:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000e3c:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000e3e:	e077      	b.n	8000f30 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOH)
 8000e40:	687b      	ldr	r3, [r7, #4]
 8000e42:	4a46      	ldr	r2, [pc, #280]	; (8000f5c <GPIO_PeriClockControl+0x1c8>)
 8000e44:	4293      	cmp	r3, r2
 8000e46:	d106      	bne.n	8000e56 <GPIO_PeriClockControl+0xc2>
			GPIOH_PCLK_EN();
 8000e48:	4b3d      	ldr	r3, [pc, #244]	; (8000f40 <GPIO_PeriClockControl+0x1ac>)
 8000e4a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000e4c:	4a3c      	ldr	r2, [pc, #240]	; (8000f40 <GPIO_PeriClockControl+0x1ac>)
 8000e4e:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000e52:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000e54:	e06c      	b.n	8000f30 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOI)
 8000e56:	687b      	ldr	r3, [r7, #4]
 8000e58:	4a41      	ldr	r2, [pc, #260]	; (8000f60 <GPIO_PeriClockControl+0x1cc>)
 8000e5a:	4293      	cmp	r3, r2
 8000e5c:	d168      	bne.n	8000f30 <GPIO_PeriClockControl+0x19c>
			GPIOI_PCLK_EN();
 8000e5e:	4b38      	ldr	r3, [pc, #224]	; (8000f40 <GPIO_PeriClockControl+0x1ac>)
 8000e60:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000e62:	4a37      	ldr	r2, [pc, #220]	; (8000f40 <GPIO_PeriClockControl+0x1ac>)
 8000e64:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8000e68:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000e6a:	e061      	b.n	8000f30 <GPIO_PeriClockControl+0x19c>
		if(pGPIOx == GPIOA)
 8000e6c:	687b      	ldr	r3, [r7, #4]
 8000e6e:	4a33      	ldr	r2, [pc, #204]	; (8000f3c <GPIO_PeriClockControl+0x1a8>)
 8000e70:	4293      	cmp	r3, r2
 8000e72:	d106      	bne.n	8000e82 <GPIO_PeriClockControl+0xee>
			GPIOA_PCLK_DI();
 8000e74:	4b32      	ldr	r3, [pc, #200]	; (8000f40 <GPIO_PeriClockControl+0x1ac>)
 8000e76:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000e78:	4a31      	ldr	r2, [pc, #196]	; (8000f40 <GPIO_PeriClockControl+0x1ac>)
 8000e7a:	f023 0301 	bic.w	r3, r3, #1
 8000e7e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000e80:	e056      	b.n	8000f30 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOB)
 8000e82:	687b      	ldr	r3, [r7, #4]
 8000e84:	4a2f      	ldr	r2, [pc, #188]	; (8000f44 <GPIO_PeriClockControl+0x1b0>)
 8000e86:	4293      	cmp	r3, r2
 8000e88:	d106      	bne.n	8000e98 <GPIO_PeriClockControl+0x104>
			GPIOB_PCLK_DI();
 8000e8a:	4b2d      	ldr	r3, [pc, #180]	; (8000f40 <GPIO_PeriClockControl+0x1ac>)
 8000e8c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000e8e:	4a2c      	ldr	r2, [pc, #176]	; (8000f40 <GPIO_PeriClockControl+0x1ac>)
 8000e90:	f023 0302 	bic.w	r3, r3, #2
 8000e94:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000e96:	e04b      	b.n	8000f30 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOC)
 8000e98:	687b      	ldr	r3, [r7, #4]
 8000e9a:	4a2b      	ldr	r2, [pc, #172]	; (8000f48 <GPIO_PeriClockControl+0x1b4>)
 8000e9c:	4293      	cmp	r3, r2
 8000e9e:	d106      	bne.n	8000eae <GPIO_PeriClockControl+0x11a>
			GPIOC_PCLK_DI();
 8000ea0:	4b27      	ldr	r3, [pc, #156]	; (8000f40 <GPIO_PeriClockControl+0x1ac>)
 8000ea2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000ea4:	4a26      	ldr	r2, [pc, #152]	; (8000f40 <GPIO_PeriClockControl+0x1ac>)
 8000ea6:	f023 0304 	bic.w	r3, r3, #4
 8000eaa:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000eac:	e040      	b.n	8000f30 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOD)
 8000eae:	687b      	ldr	r3, [r7, #4]
 8000eb0:	4a26      	ldr	r2, [pc, #152]	; (8000f4c <GPIO_PeriClockControl+0x1b8>)
 8000eb2:	4293      	cmp	r3, r2
 8000eb4:	d106      	bne.n	8000ec4 <GPIO_PeriClockControl+0x130>
			GPIOD_PCLK_DI();
 8000eb6:	4b22      	ldr	r3, [pc, #136]	; (8000f40 <GPIO_PeriClockControl+0x1ac>)
 8000eb8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000eba:	4a21      	ldr	r2, [pc, #132]	; (8000f40 <GPIO_PeriClockControl+0x1ac>)
 8000ebc:	f023 0308 	bic.w	r3, r3, #8
 8000ec0:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000ec2:	e035      	b.n	8000f30 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOE)
 8000ec4:	687b      	ldr	r3, [r7, #4]
 8000ec6:	4a22      	ldr	r2, [pc, #136]	; (8000f50 <GPIO_PeriClockControl+0x1bc>)
 8000ec8:	4293      	cmp	r3, r2
 8000eca:	d106      	bne.n	8000eda <GPIO_PeriClockControl+0x146>
			GPIOE_PCLK_DI();
 8000ecc:	4b1c      	ldr	r3, [pc, #112]	; (8000f40 <GPIO_PeriClockControl+0x1ac>)
 8000ece:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000ed0:	4a1b      	ldr	r2, [pc, #108]	; (8000f40 <GPIO_PeriClockControl+0x1ac>)
 8000ed2:	f023 0310 	bic.w	r3, r3, #16
 8000ed6:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000ed8:	e02a      	b.n	8000f30 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOF)
 8000eda:	687b      	ldr	r3, [r7, #4]
 8000edc:	4a1d      	ldr	r2, [pc, #116]	; (8000f54 <GPIO_PeriClockControl+0x1c0>)
 8000ede:	4293      	cmp	r3, r2
 8000ee0:	d106      	bne.n	8000ef0 <GPIO_PeriClockControl+0x15c>
			GPIOF_PCLK_DI();
 8000ee2:	4b17      	ldr	r3, [pc, #92]	; (8000f40 <GPIO_PeriClockControl+0x1ac>)
 8000ee4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000ee6:	4a16      	ldr	r2, [pc, #88]	; (8000f40 <GPIO_PeriClockControl+0x1ac>)
 8000ee8:	f023 0320 	bic.w	r3, r3, #32
 8000eec:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000eee:	e01f      	b.n	8000f30 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOG)
 8000ef0:	687b      	ldr	r3, [r7, #4]
 8000ef2:	4a19      	ldr	r2, [pc, #100]	; (8000f58 <GPIO_PeriClockControl+0x1c4>)
 8000ef4:	4293      	cmp	r3, r2
 8000ef6:	d106      	bne.n	8000f06 <GPIO_PeriClockControl+0x172>
			GPIOG_PCLK_DI();
 8000ef8:	4b11      	ldr	r3, [pc, #68]	; (8000f40 <GPIO_PeriClockControl+0x1ac>)
 8000efa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000efc:	4a10      	ldr	r2, [pc, #64]	; (8000f40 <GPIO_PeriClockControl+0x1ac>)
 8000efe:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8000f02:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000f04:	e014      	b.n	8000f30 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOH)
 8000f06:	687b      	ldr	r3, [r7, #4]
 8000f08:	4a14      	ldr	r2, [pc, #80]	; (8000f5c <GPIO_PeriClockControl+0x1c8>)
 8000f0a:	4293      	cmp	r3, r2
 8000f0c:	d106      	bne.n	8000f1c <GPIO_PeriClockControl+0x188>
			GPIOH_PCLK_DI();
 8000f0e:	4b0c      	ldr	r3, [pc, #48]	; (8000f40 <GPIO_PeriClockControl+0x1ac>)
 8000f10:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000f12:	4a0b      	ldr	r2, [pc, #44]	; (8000f40 <GPIO_PeriClockControl+0x1ac>)
 8000f14:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8000f18:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000f1a:	e009      	b.n	8000f30 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOI)
 8000f1c:	687b      	ldr	r3, [r7, #4]
 8000f1e:	4a10      	ldr	r2, [pc, #64]	; (8000f60 <GPIO_PeriClockControl+0x1cc>)
 8000f20:	4293      	cmp	r3, r2
 8000f22:	d105      	bne.n	8000f30 <GPIO_PeriClockControl+0x19c>
			GPIOI_PCLK_DI();
 8000f24:	4b06      	ldr	r3, [pc, #24]	; (8000f40 <GPIO_PeriClockControl+0x1ac>)
 8000f26:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000f28:	4a05      	ldr	r2, [pc, #20]	; (8000f40 <GPIO_PeriClockControl+0x1ac>)
 8000f2a:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8000f2e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000f30:	bf00      	nop
 8000f32:	370c      	adds	r7, #12
 8000f34:	46bd      	mov	sp, r7
 8000f36:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f3a:	4770      	bx	lr
 8000f3c:	40020000 	.word	0x40020000
 8000f40:	40023800 	.word	0x40023800
 8000f44:	40020400 	.word	0x40020400
 8000f48:	40020800 	.word	0x40020800
 8000f4c:	40020c00 	.word	0x40020c00
 8000f50:	40021000 	.word	0x40021000
 8000f54:	40021400 	.word	0x40021400
 8000f58:	40021800 	.word	0x40021800
 8000f5c:	40021c00 	.word	0x40021c00
 8000f60:	40022000 	.word	0x40022000

08000f64 <GPIO_Init>:
 *
 * @Note              -

 */
void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{
 8000f64:	b580      	push	{r7, lr}
 8000f66:	b086      	sub	sp, #24
 8000f68:	af00      	add	r7, sp, #0
 8000f6a:	6078      	str	r0, [r7, #4]
	uint32_t temp=0; //temp. register
 8000f6c:	2300      	movs	r3, #0
 8000f6e:	613b      	str	r3, [r7, #16]

	//enable the peripheral clock

	GPIO_PeriClockControl(pGPIOHandle->pGPIOx, ENABLE);
 8000f70:	687b      	ldr	r3, [r7, #4]
 8000f72:	681b      	ldr	r3, [r3, #0]
 8000f74:	2101      	movs	r1, #1
 8000f76:	4618      	mov	r0, r3
 8000f78:	f7ff ff0c 	bl	8000d94 <GPIO_PeriClockControl>

	//1 . configure the mode of gpio pin

	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG)
 8000f7c:	687b      	ldr	r3, [r7, #4]
 8000f7e:	795b      	ldrb	r3, [r3, #5]
 8000f80:	2b03      	cmp	r3, #3
 8000f82:	d820      	bhi.n	8000fc6 <GPIO_Init+0x62>
	{
		//the non interrupt mode
		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber ) );
 8000f84:	687b      	ldr	r3, [r7, #4]
 8000f86:	795b      	ldrb	r3, [r3, #5]
 8000f88:	461a      	mov	r2, r3
 8000f8a:	687b      	ldr	r3, [r7, #4]
 8000f8c:	791b      	ldrb	r3, [r3, #4]
 8000f8e:	005b      	lsls	r3, r3, #1
 8000f90:	fa02 f303 	lsl.w	r3, r2, r3
 8000f94:	613b      	str	r3, [r7, #16]
		pGPIOHandle->pGPIOx->MODER &= ~( 0x3 << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)); //clearing
 8000f96:	687b      	ldr	r3, [r7, #4]
 8000f98:	681b      	ldr	r3, [r3, #0]
 8000f9a:	681a      	ldr	r2, [r3, #0]
 8000f9c:	687b      	ldr	r3, [r7, #4]
 8000f9e:	791b      	ldrb	r3, [r3, #4]
 8000fa0:	005b      	lsls	r3, r3, #1
 8000fa2:	2103      	movs	r1, #3
 8000fa4:	fa01 f303 	lsl.w	r3, r1, r3
 8000fa8:	43db      	mvns	r3, r3
 8000faa:	4619      	mov	r1, r3
 8000fac:	687b      	ldr	r3, [r7, #4]
 8000fae:	681b      	ldr	r3, [r3, #0]
 8000fb0:	400a      	ands	r2, r1
 8000fb2:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= temp; //setting
 8000fb4:	687b      	ldr	r3, [r7, #4]
 8000fb6:	681b      	ldr	r3, [r3, #0]
 8000fb8:	6819      	ldr	r1, [r3, #0]
 8000fba:	687b      	ldr	r3, [r7, #4]
 8000fbc:	681b      	ldr	r3, [r3, #0]
 8000fbe:	693a      	ldr	r2, [r7, #16]
 8000fc0:	430a      	orrs	r2, r1
 8000fc2:	601a      	str	r2, [r3, #0]
 8000fc4:	e07e      	b.n	80010c4 <GPIO_Init+0x160>

	}else
	{
		//this part will code later . ( interrupt mode)
		if((pGPIOHandle->GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_IT_FT)){
 8000fc6:	687b      	ldr	r3, [r7, #4]
 8000fc8:	2204      	movs	r2, #4
 8000fca:	715a      	strb	r2, [r3, #5]
			//1. Configure the FTSR
			EXTI->FTSR |= (1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000fcc:	4b89      	ldr	r3, [pc, #548]	; (80011f4 <GPIO_Init+0x290>)
 8000fce:	68db      	ldr	r3, [r3, #12]
 8000fd0:	687a      	ldr	r2, [r7, #4]
 8000fd2:	7912      	ldrb	r2, [r2, #4]
 8000fd4:	4611      	mov	r1, r2
 8000fd6:	2201      	movs	r2, #1
 8000fd8:	408a      	lsls	r2, r1
 8000fda:	4611      	mov	r1, r2
 8000fdc:	4a85      	ldr	r2, [pc, #532]	; (80011f4 <GPIO_Init+0x290>)
 8000fde:	430b      	orrs	r3, r1
 8000fe0:	60d3      	str	r3, [r2, #12]
			//And, clear the RTSR Bit, just to be sure
			EXTI->RTSR &= ~(1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000fe2:	4b84      	ldr	r3, [pc, #528]	; (80011f4 <GPIO_Init+0x290>)
 8000fe4:	689b      	ldr	r3, [r3, #8]
 8000fe6:	687a      	ldr	r2, [r7, #4]
 8000fe8:	7912      	ldrb	r2, [r2, #4]
 8000fea:	4611      	mov	r1, r2
 8000fec:	2201      	movs	r2, #1
 8000fee:	408a      	lsls	r2, r1
 8000ff0:	43d2      	mvns	r2, r2
 8000ff2:	4611      	mov	r1, r2
 8000ff4:	4a7f      	ldr	r2, [pc, #508]	; (80011f4 <GPIO_Init+0x290>)
 8000ff6:	400b      	ands	r3, r1
 8000ff8:	6093      	str	r3, [r2, #8]

			EXTI->FTSR |= (1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
		}

		//2. Configure the SYSCFG_EXTICR (Weird configuration, Look it up if in doubt)
		uint8_t temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber/4;
 8000ffa:	687b      	ldr	r3, [r7, #4]
 8000ffc:	791b      	ldrb	r3, [r3, #4]
 8000ffe:	089b      	lsrs	r3, r3, #2
 8001000:	75fb      	strb	r3, [r7, #23]
		uint8_t temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber%4;
 8001002:	687b      	ldr	r3, [r7, #4]
 8001004:	791b      	ldrb	r3, [r3, #4]
 8001006:	f003 0303 	and.w	r3, r3, #3
 800100a:	75bb      	strb	r3, [r7, #22]
		uint8_t portcode = GPIO_BASEADDR_TO_CODE(pGPIOHandle->pGPIOx);
 800100c:	687b      	ldr	r3, [r7, #4]
 800100e:	681b      	ldr	r3, [r3, #0]
 8001010:	4a79      	ldr	r2, [pc, #484]	; (80011f8 <GPIO_Init+0x294>)
 8001012:	4293      	cmp	r3, r2
 8001014:	d039      	beq.n	800108a <GPIO_Init+0x126>
 8001016:	687b      	ldr	r3, [r7, #4]
 8001018:	681b      	ldr	r3, [r3, #0]
 800101a:	4a78      	ldr	r2, [pc, #480]	; (80011fc <GPIO_Init+0x298>)
 800101c:	4293      	cmp	r3, r2
 800101e:	d032      	beq.n	8001086 <GPIO_Init+0x122>
 8001020:	687b      	ldr	r3, [r7, #4]
 8001022:	681b      	ldr	r3, [r3, #0]
 8001024:	4a76      	ldr	r2, [pc, #472]	; (8001200 <GPIO_Init+0x29c>)
 8001026:	4293      	cmp	r3, r2
 8001028:	d02b      	beq.n	8001082 <GPIO_Init+0x11e>
 800102a:	687b      	ldr	r3, [r7, #4]
 800102c:	681b      	ldr	r3, [r3, #0]
 800102e:	4a75      	ldr	r2, [pc, #468]	; (8001204 <GPIO_Init+0x2a0>)
 8001030:	4293      	cmp	r3, r2
 8001032:	d024      	beq.n	800107e <GPIO_Init+0x11a>
 8001034:	687b      	ldr	r3, [r7, #4]
 8001036:	681b      	ldr	r3, [r3, #0]
 8001038:	4a73      	ldr	r2, [pc, #460]	; (8001208 <GPIO_Init+0x2a4>)
 800103a:	4293      	cmp	r3, r2
 800103c:	d01d      	beq.n	800107a <GPIO_Init+0x116>
 800103e:	687b      	ldr	r3, [r7, #4]
 8001040:	681b      	ldr	r3, [r3, #0]
 8001042:	4a72      	ldr	r2, [pc, #456]	; (800120c <GPIO_Init+0x2a8>)
 8001044:	4293      	cmp	r3, r2
 8001046:	d016      	beq.n	8001076 <GPIO_Init+0x112>
 8001048:	687b      	ldr	r3, [r7, #4]
 800104a:	681b      	ldr	r3, [r3, #0]
 800104c:	4a70      	ldr	r2, [pc, #448]	; (8001210 <GPIO_Init+0x2ac>)
 800104e:	4293      	cmp	r3, r2
 8001050:	d00f      	beq.n	8001072 <GPIO_Init+0x10e>
 8001052:	687b      	ldr	r3, [r7, #4]
 8001054:	681b      	ldr	r3, [r3, #0]
 8001056:	4a6f      	ldr	r2, [pc, #444]	; (8001214 <GPIO_Init+0x2b0>)
 8001058:	4293      	cmp	r3, r2
 800105a:	d008      	beq.n	800106e <GPIO_Init+0x10a>
 800105c:	687b      	ldr	r3, [r7, #4]
 800105e:	681b      	ldr	r3, [r3, #0]
 8001060:	4a6d      	ldr	r2, [pc, #436]	; (8001218 <GPIO_Init+0x2b4>)
 8001062:	4293      	cmp	r3, r2
 8001064:	d101      	bne.n	800106a <GPIO_Init+0x106>
 8001066:	2308      	movs	r3, #8
 8001068:	e010      	b.n	800108c <GPIO_Init+0x128>
 800106a:	2300      	movs	r3, #0
 800106c:	e00e      	b.n	800108c <GPIO_Init+0x128>
 800106e:	2307      	movs	r3, #7
 8001070:	e00c      	b.n	800108c <GPIO_Init+0x128>
 8001072:	2306      	movs	r3, #6
 8001074:	e00a      	b.n	800108c <GPIO_Init+0x128>
 8001076:	2305      	movs	r3, #5
 8001078:	e008      	b.n	800108c <GPIO_Init+0x128>
 800107a:	2304      	movs	r3, #4
 800107c:	e006      	b.n	800108c <GPIO_Init+0x128>
 800107e:	2303      	movs	r3, #3
 8001080:	e004      	b.n	800108c <GPIO_Init+0x128>
 8001082:	2302      	movs	r3, #2
 8001084:	e002      	b.n	800108c <GPIO_Init+0x128>
 8001086:	2301      	movs	r3, #1
 8001088:	e000      	b.n	800108c <GPIO_Init+0x128>
 800108a:	2300      	movs	r3, #0
 800108c:	73fb      	strb	r3, [r7, #15]
		SYSCFG_PCLK_EN();
 800108e:	4b63      	ldr	r3, [pc, #396]	; (800121c <GPIO_Init+0x2b8>)
 8001090:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001092:	4a62      	ldr	r2, [pc, #392]	; (800121c <GPIO_Init+0x2b8>)
 8001094:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8001098:	6453      	str	r3, [r2, #68]	; 0x44
		SYSCFG->EXTICR[temp1] = portcode<<(temp2*4);
 800109a:	7bfa      	ldrb	r2, [r7, #15]
 800109c:	7dbb      	ldrb	r3, [r7, #22]
 800109e:	009b      	lsls	r3, r3, #2
 80010a0:	fa02 f103 	lsl.w	r1, r2, r3
 80010a4:	4a5e      	ldr	r2, [pc, #376]	; (8001220 <GPIO_Init+0x2bc>)
 80010a6:	7dfb      	ldrb	r3, [r7, #23]
 80010a8:	3302      	adds	r3, #2
 80010aa:	f842 1023 	str.w	r1, [r2, r3, lsl #2]


		//3. Enable the EXTI Interrupt delivery using the interrupt mask register (Essentially,un-mask the thing )
		EXTI->IMR |= 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber;
 80010ae:	4b51      	ldr	r3, [pc, #324]	; (80011f4 <GPIO_Init+0x290>)
 80010b0:	681b      	ldr	r3, [r3, #0]
 80010b2:	687a      	ldr	r2, [r7, #4]
 80010b4:	7912      	ldrb	r2, [r2, #4]
 80010b6:	4611      	mov	r1, r2
 80010b8:	2201      	movs	r2, #1
 80010ba:	408a      	lsls	r2, r1
 80010bc:	4611      	mov	r1, r2
 80010be:	4a4d      	ldr	r2, [pc, #308]	; (80011f4 <GPIO_Init+0x290>)
 80010c0:	430b      	orrs	r3, r1
 80010c2:	6013      	str	r3, [r2, #0]

	}

	//2. configure the speed
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << ( 2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber) );
 80010c4:	687b      	ldr	r3, [r7, #4]
 80010c6:	799b      	ldrb	r3, [r3, #6]
 80010c8:	461a      	mov	r2, r3
 80010ca:	687b      	ldr	r3, [r7, #4]
 80010cc:	791b      	ldrb	r3, [r3, #4]
 80010ce:	005b      	lsls	r3, r3, #1
 80010d0:	fa02 f303 	lsl.w	r3, r2, r3
 80010d4:	613b      	str	r3, [r7, #16]
	pGPIOHandle->pGPIOx->OSPEEDR &= ~( 0x3 << ( 2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)); //clearing
 80010d6:	687b      	ldr	r3, [r7, #4]
 80010d8:	681b      	ldr	r3, [r3, #0]
 80010da:	689a      	ldr	r2, [r3, #8]
 80010dc:	687b      	ldr	r3, [r7, #4]
 80010de:	791b      	ldrb	r3, [r3, #4]
 80010e0:	005b      	lsls	r3, r3, #1
 80010e2:	2103      	movs	r1, #3
 80010e4:	fa01 f303 	lsl.w	r3, r1, r3
 80010e8:	43db      	mvns	r3, r3
 80010ea:	4619      	mov	r1, r3
 80010ec:	687b      	ldr	r3, [r7, #4]
 80010ee:	681b      	ldr	r3, [r3, #0]
 80010f0:	400a      	ands	r2, r1
 80010f2:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 80010f4:	687b      	ldr	r3, [r7, #4]
 80010f6:	681b      	ldr	r3, [r3, #0]
 80010f8:	6899      	ldr	r1, [r3, #8]
 80010fa:	687b      	ldr	r3, [r7, #4]
 80010fc:	681b      	ldr	r3, [r3, #0]
 80010fe:	693a      	ldr	r2, [r7, #16]
 8001100:	430a      	orrs	r2, r1
 8001102:	609a      	str	r2, [r3, #8]

	//3. configure the pupd settings
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << ( 2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber) );
 8001104:	687b      	ldr	r3, [r7, #4]
 8001106:	79db      	ldrb	r3, [r3, #7]
 8001108:	461a      	mov	r2, r3
 800110a:	687b      	ldr	r3, [r7, #4]
 800110c:	791b      	ldrb	r3, [r3, #4]
 800110e:	005b      	lsls	r3, r3, #1
 8001110:	fa02 f303 	lsl.w	r3, r2, r3
 8001114:	613b      	str	r3, [r7, #16]
	pGPIOHandle->pGPIOx->PUPDR &= ~( 0x3 << ( 2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)); //clearing
 8001116:	687b      	ldr	r3, [r7, #4]
 8001118:	681b      	ldr	r3, [r3, #0]
 800111a:	68da      	ldr	r2, [r3, #12]
 800111c:	687b      	ldr	r3, [r7, #4]
 800111e:	791b      	ldrb	r3, [r3, #4]
 8001120:	005b      	lsls	r3, r3, #1
 8001122:	2103      	movs	r1, #3
 8001124:	fa01 f303 	lsl.w	r3, r1, r3
 8001128:	43db      	mvns	r3, r3
 800112a:	4619      	mov	r1, r3
 800112c:	687b      	ldr	r3, [r7, #4]
 800112e:	681b      	ldr	r3, [r3, #0]
 8001130:	400a      	ands	r2, r1
 8001132:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 8001134:	687b      	ldr	r3, [r7, #4]
 8001136:	681b      	ldr	r3, [r3, #0]
 8001138:	68d9      	ldr	r1, [r3, #12]
 800113a:	687b      	ldr	r3, [r7, #4]
 800113c:	681b      	ldr	r3, [r3, #0]
 800113e:	693a      	ldr	r2, [r7, #16]
 8001140:	430a      	orrs	r2, r1
 8001142:	60da      	str	r2, [r3, #12]


	//4. configure the optype
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber );
 8001144:	687b      	ldr	r3, [r7, #4]
 8001146:	7a1b      	ldrb	r3, [r3, #8]
 8001148:	461a      	mov	r2, r3
 800114a:	687b      	ldr	r3, [r7, #4]
 800114c:	791b      	ldrb	r3, [r3, #4]
 800114e:	fa02 f303 	lsl.w	r3, r2, r3
 8001152:	613b      	str	r3, [r7, #16]
	pGPIOHandle->pGPIOx->OTYPER &= ~( 0x1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); //clearing
 8001154:	687b      	ldr	r3, [r7, #4]
 8001156:	681b      	ldr	r3, [r3, #0]
 8001158:	685a      	ldr	r2, [r3, #4]
 800115a:	687b      	ldr	r3, [r7, #4]
 800115c:	791b      	ldrb	r3, [r3, #4]
 800115e:	4619      	mov	r1, r3
 8001160:	2301      	movs	r3, #1
 8001162:	408b      	lsls	r3, r1
 8001164:	43db      	mvns	r3, r3
 8001166:	4619      	mov	r1, r3
 8001168:	687b      	ldr	r3, [r7, #4]
 800116a:	681b      	ldr	r3, [r3, #0]
 800116c:	400a      	ands	r2, r1
 800116e:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 8001170:	687b      	ldr	r3, [r7, #4]
 8001172:	681b      	ldr	r3, [r3, #0]
 8001174:	6859      	ldr	r1, [r3, #4]
 8001176:	687b      	ldr	r3, [r7, #4]
 8001178:	681b      	ldr	r3, [r3, #0]
 800117a:	693a      	ldr	r2, [r7, #16]
 800117c:	430a      	orrs	r2, r1
 800117e:	605a      	str	r2, [r3, #4]

	//5. configure the alt functionality
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFN)
 8001180:	687b      	ldr	r3, [r7, #4]
 8001182:	795b      	ldrb	r3, [r3, #5]
 8001184:	2b02      	cmp	r3, #2
 8001186:	d131      	bne.n	80011ec <GPIO_Init+0x288>
	{
		//configure the alt function registers.
		uint8_t temp1, temp2;

		temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 8;
 8001188:	687b      	ldr	r3, [r7, #4]
 800118a:	791b      	ldrb	r3, [r3, #4]
 800118c:	08db      	lsrs	r3, r3, #3
 800118e:	73bb      	strb	r3, [r7, #14]
		temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber  % 8;
 8001190:	687b      	ldr	r3, [r7, #4]
 8001192:	791b      	ldrb	r3, [r3, #4]
 8001194:	f003 0307 	and.w	r3, r3, #7
 8001198:	737b      	strb	r3, [r7, #13]
		pGPIOHandle->pGPIOx->AFR[temp1] &= ~(0xF << ( 4 * temp2 ) ); //clearing
 800119a:	687b      	ldr	r3, [r7, #4]
 800119c:	681b      	ldr	r3, [r3, #0]
 800119e:	7bba      	ldrb	r2, [r7, #14]
 80011a0:	3208      	adds	r2, #8
 80011a2:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80011a6:	7b7b      	ldrb	r3, [r7, #13]
 80011a8:	009b      	lsls	r3, r3, #2
 80011aa:	220f      	movs	r2, #15
 80011ac:	fa02 f303 	lsl.w	r3, r2, r3
 80011b0:	43db      	mvns	r3, r3
 80011b2:	4618      	mov	r0, r3
 80011b4:	687b      	ldr	r3, [r7, #4]
 80011b6:	681b      	ldr	r3, [r3, #0]
 80011b8:	7bba      	ldrb	r2, [r7, #14]
 80011ba:	4001      	ands	r1, r0
 80011bc:	3208      	adds	r2, #8
 80011be:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandle->pGPIOx->AFR[temp1] |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << ( 4 * temp2 ) );
 80011c2:	687b      	ldr	r3, [r7, #4]
 80011c4:	681b      	ldr	r3, [r3, #0]
 80011c6:	7bba      	ldrb	r2, [r7, #14]
 80011c8:	3208      	adds	r2, #8
 80011ca:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80011ce:	687b      	ldr	r3, [r7, #4]
 80011d0:	7a5b      	ldrb	r3, [r3, #9]
 80011d2:	461a      	mov	r2, r3
 80011d4:	7b7b      	ldrb	r3, [r7, #13]
 80011d6:	009b      	lsls	r3, r3, #2
 80011d8:	fa02 f303 	lsl.w	r3, r2, r3
 80011dc:	4618      	mov	r0, r3
 80011de:	687b      	ldr	r3, [r7, #4]
 80011e0:	681b      	ldr	r3, [r3, #0]
 80011e2:	7bba      	ldrb	r2, [r7, #14]
 80011e4:	4301      	orrs	r1, r0
 80011e6:	3208      	adds	r2, #8
 80011e8:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	}

}
 80011ec:	bf00      	nop
 80011ee:	3718      	adds	r7, #24
 80011f0:	46bd      	mov	sp, r7
 80011f2:	bd80      	pop	{r7, pc}
 80011f4:	40013c00 	.word	0x40013c00
 80011f8:	40020000 	.word	0x40020000
 80011fc:	40020400 	.word	0x40020400
 8001200:	40020800 	.word	0x40020800
 8001204:	40020c00 	.word	0x40020c00
 8001208:	40021000 	.word	0x40021000
 800120c:	40021400 	.word	0x40021400
 8001210:	40021800 	.word	0x40021800
 8001214:	40021c00 	.word	0x40021c00
 8001218:	40022000 	.word	0x40022000
 800121c:	40023800 	.word	0x40023800
 8001220:	40013800 	.word	0x40013800

08001224 <I2C_GenerateStartCondition>:

static void I2C_MasterHandleRXNEInterrupt(I2C_Handle_t *pI2CHandle);
static void I2C_MasterHandleTXEInterrupt(I2C_Handle_t *pI2CHandle);

static void I2C_GenerateStartCondition(I2C_RegDef_t *pI2Cx)
{
 8001224:	b480      	push	{r7}
 8001226:	b083      	sub	sp, #12
 8001228:	af00      	add	r7, sp, #0
 800122a:	6078      	str	r0, [r7, #4]
	pI2Cx->CR1 |= (1 << I2C_CR1_START);
 800122c:	687b      	ldr	r3, [r7, #4]
 800122e:	681b      	ldr	r3, [r3, #0]
 8001230:	f443 7280 	orr.w	r2, r3, #256	; 0x100
 8001234:	687b      	ldr	r3, [r7, #4]
 8001236:	601a      	str	r2, [r3, #0]
}
 8001238:	bf00      	nop
 800123a:	370c      	adds	r7, #12
 800123c:	46bd      	mov	sp, r7
 800123e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001242:	4770      	bx	lr

08001244 <I2C_ExecuteAddressPhaseWrite>:

static void I2C_ExecuteAddressPhaseWrite(I2C_RegDef_t *pI2Cx, uint8_t SlaveAddr)
{
 8001244:	b480      	push	{r7}
 8001246:	b083      	sub	sp, #12
 8001248:	af00      	add	r7, sp, #0
 800124a:	6078      	str	r0, [r7, #4]
 800124c:	460b      	mov	r3, r1
 800124e:	70fb      	strb	r3, [r7, #3]
	SlaveAddr = SlaveAddr << 1;
 8001250:	78fb      	ldrb	r3, [r7, #3]
 8001252:	005b      	lsls	r3, r3, #1
 8001254:	70fb      	strb	r3, [r7, #3]
	SlaveAddr &= ~(1); // SlaveAddr is Slave address + r/nw bit=0
 8001256:	78fb      	ldrb	r3, [r7, #3]
 8001258:	f023 0301 	bic.w	r3, r3, #1
 800125c:	70fb      	strb	r3, [r7, #3]
	pI2Cx->DR = SlaveAddr;
 800125e:	78fa      	ldrb	r2, [r7, #3]
 8001260:	687b      	ldr	r3, [r7, #4]
 8001262:	611a      	str	r2, [r3, #16]
}
 8001264:	bf00      	nop
 8001266:	370c      	adds	r7, #12
 8001268:	46bd      	mov	sp, r7
 800126a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800126e:	4770      	bx	lr

08001270 <I2C_ExecuteAddressPhaseRead>:

static void I2C_ExecuteAddressPhaseRead(I2C_RegDef_t *pI2Cx, uint8_t SlaveAddr)
{
 8001270:	b480      	push	{r7}
 8001272:	b083      	sub	sp, #12
 8001274:	af00      	add	r7, sp, #0
 8001276:	6078      	str	r0, [r7, #4]
 8001278:	460b      	mov	r3, r1
 800127a:	70fb      	strb	r3, [r7, #3]
	SlaveAddr = SlaveAddr << 1;
 800127c:	78fb      	ldrb	r3, [r7, #3]
 800127e:	005b      	lsls	r3, r3, #1
 8001280:	70fb      	strb	r3, [r7, #3]
	SlaveAddr |= 1; // SlaveAddr is Slave address + r/nw bit=1
 8001282:	78fb      	ldrb	r3, [r7, #3]
 8001284:	f043 0301 	orr.w	r3, r3, #1
 8001288:	70fb      	strb	r3, [r7, #3]
	pI2Cx->DR = SlaveAddr;
 800128a:	78fa      	ldrb	r2, [r7, #3]
 800128c:	687b      	ldr	r3, [r7, #4]
 800128e:	611a      	str	r2, [r3, #16]
}
 8001290:	bf00      	nop
 8001292:	370c      	adds	r7, #12
 8001294:	46bd      	mov	sp, r7
 8001296:	f85d 7b04 	ldr.w	r7, [sp], #4
 800129a:	4770      	bx	lr

0800129c <I2C_ClearADDRFlag>:

static void I2C_ClearADDRFlag(I2C_Handle_t *pI2CHandle)
{
 800129c:	b580      	push	{r7, lr}
 800129e:	b084      	sub	sp, #16
 80012a0:	af00      	add	r7, sp, #0
 80012a2:	6078      	str	r0, [r7, #4]
	uint32_t dummy_read;
	// check for device mode
	if (pI2CHandle->pI2Cx->SR2 & (1 << I2C_SR2_MSL))
 80012a4:	687b      	ldr	r3, [r7, #4]
 80012a6:	681b      	ldr	r3, [r3, #0]
 80012a8:	699b      	ldr	r3, [r3, #24]
 80012aa:	f003 0301 	and.w	r3, r3, #1
 80012ae:	2b00      	cmp	r3, #0
 80012b0:	d01f      	beq.n	80012f2 <I2C_ClearADDRFlag+0x56>
	{
		// device is in master mode
		if (pI2CHandle->TxRxState == I2C_BUSY_IN_RX)
 80012b2:	687b      	ldr	r3, [r7, #4]
 80012b4:	7f1b      	ldrb	r3, [r3, #28]
 80012b6:	2b01      	cmp	r3, #1
 80012b8:	d112      	bne.n	80012e0 <I2C_ClearADDRFlag+0x44>
		{
			if (pI2CHandle->RxSize == 1)
 80012ba:	687b      	ldr	r3, [r7, #4]
 80012bc:	6a1b      	ldr	r3, [r3, #32]
 80012be:	2b01      	cmp	r3, #1
 80012c0:	d11f      	bne.n	8001302 <I2C_ClearADDRFlag+0x66>
			{
				// first disable the ack
				I2C_ManageAcking(pI2CHandle->pI2Cx, DISABLE);
 80012c2:	687b      	ldr	r3, [r7, #4]
 80012c4:	681b      	ldr	r3, [r3, #0]
 80012c6:	2100      	movs	r1, #0
 80012c8:	4618      	mov	r0, r3
 80012ca:	f000 fa5e 	bl	800178a <I2C_ManageAcking>

				// clear the ADDR flag ( read SR1 , read SR2)
				dummy_read = pI2CHandle->pI2Cx->SR1;
 80012ce:	687b      	ldr	r3, [r7, #4]
 80012d0:	681b      	ldr	r3, [r3, #0]
 80012d2:	695b      	ldr	r3, [r3, #20]
 80012d4:	60fb      	str	r3, [r7, #12]
				dummy_read = pI2CHandle->pI2Cx->SR2;
 80012d6:	687b      	ldr	r3, [r7, #4]
 80012d8:	681b      	ldr	r3, [r3, #0]
 80012da:	699b      	ldr	r3, [r3, #24]
 80012dc:	60fb      	str	r3, [r7, #12]
		// clear the ADDR flag ( read SR1 , read SR2)
		dummy_read = pI2CHandle->pI2Cx->SR1;
		dummy_read = pI2CHandle->pI2Cx->SR2;
		(void)dummy_read;
	}
}
 80012de:	e010      	b.n	8001302 <I2C_ClearADDRFlag+0x66>
			dummy_read = pI2CHandle->pI2Cx->SR1;
 80012e0:	687b      	ldr	r3, [r7, #4]
 80012e2:	681b      	ldr	r3, [r3, #0]
 80012e4:	695b      	ldr	r3, [r3, #20]
 80012e6:	60fb      	str	r3, [r7, #12]
			dummy_read = pI2CHandle->pI2Cx->SR2;
 80012e8:	687b      	ldr	r3, [r7, #4]
 80012ea:	681b      	ldr	r3, [r3, #0]
 80012ec:	699b      	ldr	r3, [r3, #24]
 80012ee:	60fb      	str	r3, [r7, #12]
}
 80012f0:	e007      	b.n	8001302 <I2C_ClearADDRFlag+0x66>
		dummy_read = pI2CHandle->pI2Cx->SR1;
 80012f2:	687b      	ldr	r3, [r7, #4]
 80012f4:	681b      	ldr	r3, [r3, #0]
 80012f6:	695b      	ldr	r3, [r3, #20]
 80012f8:	60fb      	str	r3, [r7, #12]
		dummy_read = pI2CHandle->pI2Cx->SR2;
 80012fa:	687b      	ldr	r3, [r7, #4]
 80012fc:	681b      	ldr	r3, [r3, #0]
 80012fe:	699b      	ldr	r3, [r3, #24]
 8001300:	60fb      	str	r3, [r7, #12]
}
 8001302:	bf00      	nop
 8001304:	3710      	adds	r7, #16
 8001306:	46bd      	mov	sp, r7
 8001308:	bd80      	pop	{r7, pc}

0800130a <I2C_GenerateStopCondition>:

void I2C_GenerateStopCondition(I2C_RegDef_t *pI2Cx)
{
 800130a:	b480      	push	{r7}
 800130c:	b083      	sub	sp, #12
 800130e:	af00      	add	r7, sp, #0
 8001310:	6078      	str	r0, [r7, #4]
	pI2Cx->CR1 |= (1 << I2C_CR1_STOP);
 8001312:	687b      	ldr	r3, [r7, #4]
 8001314:	681b      	ldr	r3, [r3, #0]
 8001316:	f443 7200 	orr.w	r2, r3, #512	; 0x200
 800131a:	687b      	ldr	r3, [r7, #4]
 800131c:	601a      	str	r2, [r3, #0]
}
 800131e:	bf00      	nop
 8001320:	370c      	adds	r7, #12
 8001322:	46bd      	mov	sp, r7
 8001324:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001328:	4770      	bx	lr

0800132a <I2C_PeripheralControl>:
 *
 * @Note              -

 */
void I2C_PeripheralControl(I2C_RegDef_t *pI2Cx, uint8_t EnOrDi)
{
 800132a:	b480      	push	{r7}
 800132c:	b083      	sub	sp, #12
 800132e:	af00      	add	r7, sp, #0
 8001330:	6078      	str	r0, [r7, #4]
 8001332:	460b      	mov	r3, r1
 8001334:	70fb      	strb	r3, [r7, #3]
	if (EnOrDi == ENABLE)
 8001336:	78fb      	ldrb	r3, [r7, #3]
 8001338:	2b01      	cmp	r3, #1
 800133a:	d106      	bne.n	800134a <I2C_PeripheralControl+0x20>
	{
		pI2Cx->CR1 |= (1 << I2C_CR1_PE);
 800133c:	687b      	ldr	r3, [r7, #4]
 800133e:	681b      	ldr	r3, [r3, #0]
 8001340:	f043 0201 	orr.w	r2, r3, #1
 8001344:	687b      	ldr	r3, [r7, #4]
 8001346:	601a      	str	r2, [r3, #0]
	}
	else
	{
		pI2Cx->CR1 &= ~(1 << 0);
	}
}
 8001348:	e005      	b.n	8001356 <I2C_PeripheralControl+0x2c>
		pI2Cx->CR1 &= ~(1 << 0);
 800134a:	687b      	ldr	r3, [r7, #4]
 800134c:	681b      	ldr	r3, [r3, #0]
 800134e:	f023 0201 	bic.w	r2, r3, #1
 8001352:	687b      	ldr	r3, [r7, #4]
 8001354:	601a      	str	r2, [r3, #0]
}
 8001356:	bf00      	nop
 8001358:	370c      	adds	r7, #12
 800135a:	46bd      	mov	sp, r7
 800135c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001360:	4770      	bx	lr
	...

08001364 <I2C_PeriClockControl>:
 *
 * @Note              -

 */
void I2C_PeriClockControl(I2C_RegDef_t *pI2Cx, uint8_t EnorDi)
{
 8001364:	b480      	push	{r7}
 8001366:	b083      	sub	sp, #12
 8001368:	af00      	add	r7, sp, #0
 800136a:	6078      	str	r0, [r7, #4]
 800136c:	460b      	mov	r3, r1
 800136e:	70fb      	strb	r3, [r7, #3]
	if (EnorDi == ENABLE)
 8001370:	78fb      	ldrb	r3, [r7, #3]
 8001372:	2b01      	cmp	r3, #1
 8001374:	d120      	bne.n	80013b8 <I2C_PeriClockControl+0x54>
	{
		if (pI2Cx == I2C1)
 8001376:	687b      	ldr	r3, [r7, #4]
 8001378:	4a22      	ldr	r2, [pc, #136]	; (8001404 <I2C_PeriClockControl+0xa0>)
 800137a:	4293      	cmp	r3, r2
 800137c:	d106      	bne.n	800138c <I2C_PeriClockControl+0x28>
		{
			I2C1_PCLK_EN();
 800137e:	4b22      	ldr	r3, [pc, #136]	; (8001408 <I2C_PeriClockControl+0xa4>)
 8001380:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001382:	4a21      	ldr	r2, [pc, #132]	; (8001408 <I2C_PeriClockControl+0xa4>)
 8001384:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8001388:	6413      	str	r3, [r2, #64]	; 0x40
		else if (pI2Cx == I2C3)
		{
			I2C3_PCLK_DI();
		}
	}
}
 800138a:	e035      	b.n	80013f8 <I2C_PeriClockControl+0x94>
		else if (pI2Cx == I2C2)
 800138c:	687b      	ldr	r3, [r7, #4]
 800138e:	4a1f      	ldr	r2, [pc, #124]	; (800140c <I2C_PeriClockControl+0xa8>)
 8001390:	4293      	cmp	r3, r2
 8001392:	d106      	bne.n	80013a2 <I2C_PeriClockControl+0x3e>
			I2C2_PCLK_EN();
 8001394:	4b1c      	ldr	r3, [pc, #112]	; (8001408 <I2C_PeriClockControl+0xa4>)
 8001396:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001398:	4a1b      	ldr	r2, [pc, #108]	; (8001408 <I2C_PeriClockControl+0xa4>)
 800139a:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 800139e:	6413      	str	r3, [r2, #64]	; 0x40
}
 80013a0:	e02a      	b.n	80013f8 <I2C_PeriClockControl+0x94>
		else if (pI2Cx == I2C3)
 80013a2:	687b      	ldr	r3, [r7, #4]
 80013a4:	4a1a      	ldr	r2, [pc, #104]	; (8001410 <I2C_PeriClockControl+0xac>)
 80013a6:	4293      	cmp	r3, r2
 80013a8:	d126      	bne.n	80013f8 <I2C_PeriClockControl+0x94>
			I2C3_PCLK_EN();
 80013aa:	4b17      	ldr	r3, [pc, #92]	; (8001408 <I2C_PeriClockControl+0xa4>)
 80013ac:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80013ae:	4a16      	ldr	r2, [pc, #88]	; (8001408 <I2C_PeriClockControl+0xa4>)
 80013b0:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 80013b4:	6413      	str	r3, [r2, #64]	; 0x40
}
 80013b6:	e01f      	b.n	80013f8 <I2C_PeriClockControl+0x94>
		if (pI2Cx == I2C1)
 80013b8:	687b      	ldr	r3, [r7, #4]
 80013ba:	4a12      	ldr	r2, [pc, #72]	; (8001404 <I2C_PeriClockControl+0xa0>)
 80013bc:	4293      	cmp	r3, r2
 80013be:	d106      	bne.n	80013ce <I2C_PeriClockControl+0x6a>
			I2C1_PCLK_DI();
 80013c0:	4b11      	ldr	r3, [pc, #68]	; (8001408 <I2C_PeriClockControl+0xa4>)
 80013c2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80013c4:	4a10      	ldr	r2, [pc, #64]	; (8001408 <I2C_PeriClockControl+0xa4>)
 80013c6:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 80013ca:	6413      	str	r3, [r2, #64]	; 0x40
}
 80013cc:	e014      	b.n	80013f8 <I2C_PeriClockControl+0x94>
		else if (pI2Cx == I2C2)
 80013ce:	687b      	ldr	r3, [r7, #4]
 80013d0:	4a0e      	ldr	r2, [pc, #56]	; (800140c <I2C_PeriClockControl+0xa8>)
 80013d2:	4293      	cmp	r3, r2
 80013d4:	d106      	bne.n	80013e4 <I2C_PeriClockControl+0x80>
			I2C2_PCLK_DI();
 80013d6:	4b0c      	ldr	r3, [pc, #48]	; (8001408 <I2C_PeriClockControl+0xa4>)
 80013d8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80013da:	4a0b      	ldr	r2, [pc, #44]	; (8001408 <I2C_PeriClockControl+0xa4>)
 80013dc:	f423 0380 	bic.w	r3, r3, #4194304	; 0x400000
 80013e0:	6413      	str	r3, [r2, #64]	; 0x40
}
 80013e2:	e009      	b.n	80013f8 <I2C_PeriClockControl+0x94>
		else if (pI2Cx == I2C3)
 80013e4:	687b      	ldr	r3, [r7, #4]
 80013e6:	4a0a      	ldr	r2, [pc, #40]	; (8001410 <I2C_PeriClockControl+0xac>)
 80013e8:	4293      	cmp	r3, r2
 80013ea:	d105      	bne.n	80013f8 <I2C_PeriClockControl+0x94>
			I2C3_PCLK_DI();
 80013ec:	4b06      	ldr	r3, [pc, #24]	; (8001408 <I2C_PeriClockControl+0xa4>)
 80013ee:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80013f0:	4a05      	ldr	r2, [pc, #20]	; (8001408 <I2C_PeriClockControl+0xa4>)
 80013f2:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 80013f6:	6413      	str	r3, [r2, #64]	; 0x40
}
 80013f8:	bf00      	nop
 80013fa:	370c      	adds	r7, #12
 80013fc:	46bd      	mov	sp, r7
 80013fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001402:	4770      	bx	lr
 8001404:	40005400 	.word	0x40005400
 8001408:	40023800 	.word	0x40023800
 800140c:	40005800 	.word	0x40005800
 8001410:	40005c00 	.word	0x40005c00

08001414 <I2C_Init>:
 *
 * @Note              -

 */
void I2C_Init(I2C_Handle_t *pI2CHandle)
{
 8001414:	b580      	push	{r7, lr}
 8001416:	b084      	sub	sp, #16
 8001418:	af00      	add	r7, sp, #0
 800141a:	6078      	str	r0, [r7, #4]
	uint32_t tempreg = 0;
 800141c:	2300      	movs	r3, #0
 800141e:	60fb      	str	r3, [r7, #12]

	// enable the clock for the i2cx peripheral
	I2C_PeriClockControl(pI2CHandle->pI2Cx, ENABLE);
 8001420:	687b      	ldr	r3, [r7, #4]
 8001422:	681b      	ldr	r3, [r3, #0]
 8001424:	2101      	movs	r1, #1
 8001426:	4618      	mov	r0, r3
 8001428:	f7ff ff9c 	bl	8001364 <I2C_PeriClockControl>

	// ack control bit
	tempreg |= pI2CHandle->I2C_Config.I2C_AckControl << 10;
 800142c:	687b      	ldr	r3, [r7, #4]
 800142e:	7a5b      	ldrb	r3, [r3, #9]
 8001430:	029b      	lsls	r3, r3, #10
 8001432:	461a      	mov	r2, r3
 8001434:	68fb      	ldr	r3, [r7, #12]
 8001436:	4313      	orrs	r3, r2
 8001438:	60fb      	str	r3, [r7, #12]
	pI2CHandle->pI2Cx->CR1 = tempreg;
 800143a:	687b      	ldr	r3, [r7, #4]
 800143c:	681b      	ldr	r3, [r3, #0]
 800143e:	68fa      	ldr	r2, [r7, #12]
 8001440:	601a      	str	r2, [r3, #0]

	// configure the FREQ field of CR2
	tempreg = 0;
 8001442:	2300      	movs	r3, #0
 8001444:	60fb      	str	r3, [r7, #12]
	tempreg |= RCC_GetPCLK1Value() / 1000000U;
 8001446:	f000 f9bd 	bl	80017c4 <RCC_GetPCLK1Value>
 800144a:	4603      	mov	r3, r0
 800144c:	4a47      	ldr	r2, [pc, #284]	; (800156c <I2C_Init+0x158>)
 800144e:	fba2 2303 	umull	r2, r3, r2, r3
 8001452:	0c9b      	lsrs	r3, r3, #18
 8001454:	68fa      	ldr	r2, [r7, #12]
 8001456:	4313      	orrs	r3, r2
 8001458:	60fb      	str	r3, [r7, #12]
	pI2CHandle->pI2Cx->CR2 = (tempreg & 0x3F);
 800145a:	687b      	ldr	r3, [r7, #4]
 800145c:	681b      	ldr	r3, [r3, #0]
 800145e:	68fa      	ldr	r2, [r7, #12]
 8001460:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 8001464:	605a      	str	r2, [r3, #4]

	// program the device own address
	tempreg = 0;
 8001466:	2300      	movs	r3, #0
 8001468:	60fb      	str	r3, [r7, #12]
	tempreg |= pI2CHandle->I2C_Config.I2C_DeviceAddress << 1;
 800146a:	687b      	ldr	r3, [r7, #4]
 800146c:	7a1b      	ldrb	r3, [r3, #8]
 800146e:	005b      	lsls	r3, r3, #1
 8001470:	461a      	mov	r2, r3
 8001472:	68fb      	ldr	r3, [r7, #12]
 8001474:	4313      	orrs	r3, r2
 8001476:	60fb      	str	r3, [r7, #12]
	tempreg |= (1 << 14);
 8001478:	68fb      	ldr	r3, [r7, #12]
 800147a:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800147e:	60fb      	str	r3, [r7, #12]
	pI2CHandle->pI2Cx->OAR1 = tempreg;
 8001480:	687b      	ldr	r3, [r7, #4]
 8001482:	681b      	ldr	r3, [r3, #0]
 8001484:	68fa      	ldr	r2, [r7, #12]
 8001486:	609a      	str	r2, [r3, #8]

	// CCR calculations
	uint16_t ccr_value = 0;
 8001488:	2300      	movs	r3, #0
 800148a:	817b      	strh	r3, [r7, #10]
	tempreg = 0;
 800148c:	2300      	movs	r3, #0
 800148e:	60fb      	str	r3, [r7, #12]
	if (pI2CHandle->I2C_Config.I2C_SCLSpeed <= I2C_SCL_SPEED_SM)
 8001490:	687b      	ldr	r3, [r7, #4]
 8001492:	685b      	ldr	r3, [r3, #4]
 8001494:	4a36      	ldr	r2, [pc, #216]	; (8001570 <I2C_Init+0x15c>)
 8001496:	4293      	cmp	r3, r2
 8001498:	d80f      	bhi.n	80014ba <I2C_Init+0xa6>
	{
		// mode is standard mode
		ccr_value = (RCC_GetPCLK1Value() / (2 * pI2CHandle->I2C_Config.I2C_SCLSpeed));
 800149a:	f000 f993 	bl	80017c4 <RCC_GetPCLK1Value>
 800149e:	4602      	mov	r2, r0
 80014a0:	687b      	ldr	r3, [r7, #4]
 80014a2:	685b      	ldr	r3, [r3, #4]
 80014a4:	005b      	lsls	r3, r3, #1
 80014a6:	fbb2 f3f3 	udiv	r3, r2, r3
 80014aa:	817b      	strh	r3, [r7, #10]
		tempreg |= (ccr_value & 0xFFF);
 80014ac:	897b      	ldrh	r3, [r7, #10]
 80014ae:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80014b2:	68fa      	ldr	r2, [r7, #12]
 80014b4:	4313      	orrs	r3, r2
 80014b6:	60fb      	str	r3, [r7, #12]
 80014b8:	e02d      	b.n	8001516 <I2C_Init+0x102>
	}
	else
	{
		// mode is fast mode
		tempreg |= (1 << 15);
 80014ba:	68fb      	ldr	r3, [r7, #12]
 80014bc:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80014c0:	60fb      	str	r3, [r7, #12]
		tempreg |= (pI2CHandle->I2C_Config.I2C_FMDutyCycle << 14);
 80014c2:	687b      	ldr	r3, [r7, #4]
 80014c4:	7a9b      	ldrb	r3, [r3, #10]
 80014c6:	039b      	lsls	r3, r3, #14
 80014c8:	461a      	mov	r2, r3
 80014ca:	68fb      	ldr	r3, [r7, #12]
 80014cc:	4313      	orrs	r3, r2
 80014ce:	60fb      	str	r3, [r7, #12]
		if (pI2CHandle->I2C_Config.I2C_FMDutyCycle == I2C_FM_DUTY_2)
 80014d0:	687b      	ldr	r3, [r7, #4]
 80014d2:	7a9b      	ldrb	r3, [r3, #10]
 80014d4:	2b00      	cmp	r3, #0
 80014d6:	d10b      	bne.n	80014f0 <I2C_Init+0xdc>
		{
			ccr_value = (RCC_GetPCLK1Value() / (3 * pI2CHandle->I2C_Config.I2C_SCLSpeed));
 80014d8:	f000 f974 	bl	80017c4 <RCC_GetPCLK1Value>
 80014dc:	4601      	mov	r1, r0
 80014de:	687b      	ldr	r3, [r7, #4]
 80014e0:	685a      	ldr	r2, [r3, #4]
 80014e2:	4613      	mov	r3, r2
 80014e4:	005b      	lsls	r3, r3, #1
 80014e6:	4413      	add	r3, r2
 80014e8:	fbb1 f3f3 	udiv	r3, r1, r3
 80014ec:	817b      	strh	r3, [r7, #10]
 80014ee:	e00c      	b.n	800150a <I2C_Init+0xf6>
		}
		else
		{
			ccr_value = (RCC_GetPCLK1Value() / (25 * pI2CHandle->I2C_Config.I2C_SCLSpeed));
 80014f0:	f000 f968 	bl	80017c4 <RCC_GetPCLK1Value>
 80014f4:	4601      	mov	r1, r0
 80014f6:	687b      	ldr	r3, [r7, #4]
 80014f8:	685a      	ldr	r2, [r3, #4]
 80014fa:	4613      	mov	r3, r2
 80014fc:	009b      	lsls	r3, r3, #2
 80014fe:	4413      	add	r3, r2
 8001500:	009a      	lsls	r2, r3, #2
 8001502:	4413      	add	r3, r2
 8001504:	fbb1 f3f3 	udiv	r3, r1, r3
 8001508:	817b      	strh	r3, [r7, #10]
		}
		tempreg |= (ccr_value & 0xFFF);
 800150a:	897b      	ldrh	r3, [r7, #10]
 800150c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8001510:	68fa      	ldr	r2, [r7, #12]
 8001512:	4313      	orrs	r3, r2
 8001514:	60fb      	str	r3, [r7, #12]
	}
	pI2CHandle->pI2Cx->CCR = tempreg;
 8001516:	687b      	ldr	r3, [r7, #4]
 8001518:	681b      	ldr	r3, [r3, #0]
 800151a:	68fa      	ldr	r2, [r7, #12]
 800151c:	61da      	str	r2, [r3, #28]

	// TRISE Configuration
	if (pI2CHandle->I2C_Config.I2C_SCLSpeed <= I2C_SCL_SPEED_SM)
 800151e:	687b      	ldr	r3, [r7, #4]
 8001520:	685b      	ldr	r3, [r3, #4]
 8001522:	4a13      	ldr	r2, [pc, #76]	; (8001570 <I2C_Init+0x15c>)
 8001524:	4293      	cmp	r3, r2
 8001526:	d809      	bhi.n	800153c <I2C_Init+0x128>
	{
		// mode is standard mode

		tempreg = (RCC_GetPCLK1Value() / 1000000U) + 1;
 8001528:	f000 f94c 	bl	80017c4 <RCC_GetPCLK1Value>
 800152c:	4603      	mov	r3, r0
 800152e:	4a0f      	ldr	r2, [pc, #60]	; (800156c <I2C_Init+0x158>)
 8001530:	fba2 2303 	umull	r2, r3, r2, r3
 8001534:	0c9b      	lsrs	r3, r3, #18
 8001536:	3301      	adds	r3, #1
 8001538:	60fb      	str	r3, [r7, #12]
 800153a:	e00d      	b.n	8001558 <I2C_Init+0x144>
	}
	else
	{
		// mode is fast mode
		tempreg = ((RCC_GetPCLK1Value() * 300) / 1000000000U) + 1;
 800153c:	f000 f942 	bl	80017c4 <RCC_GetPCLK1Value>
 8001540:	4603      	mov	r3, r0
 8001542:	f44f 7296 	mov.w	r2, #300	; 0x12c
 8001546:	fb02 f303 	mul.w	r3, r2, r3
 800154a:	0a5b      	lsrs	r3, r3, #9
 800154c:	4a09      	ldr	r2, [pc, #36]	; (8001574 <I2C_Init+0x160>)
 800154e:	fba2 2303 	umull	r2, r3, r2, r3
 8001552:	09db      	lsrs	r3, r3, #7
 8001554:	3301      	adds	r3, #1
 8001556:	60fb      	str	r3, [r7, #12]
	}

	pI2CHandle->pI2Cx->TRISE = (tempreg & 0x3F);
 8001558:	687b      	ldr	r3, [r7, #4]
 800155a:	681b      	ldr	r3, [r3, #0]
 800155c:	68fa      	ldr	r2, [r7, #12]
 800155e:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 8001562:	621a      	str	r2, [r3, #32]
}
 8001564:	bf00      	nop
 8001566:	3710      	adds	r7, #16
 8001568:	46bd      	mov	sp, r7
 800156a:	bd80      	pop	{r7, pc}
 800156c:	431bde83 	.word	0x431bde83
 8001570:	000186a0 	.word	0x000186a0
 8001574:	00044b83 	.word	0x00044b83

08001578 <I2C_GetFlagStatus>:
void I2C_DeInit(I2C_RegDef_t *pI2Cx)
{
}

uint8_t I2C_GetFlagStatus(I2C_RegDef_t *pI2Cx, uint32_t FlagName)
{
 8001578:	b480      	push	{r7}
 800157a:	b083      	sub	sp, #12
 800157c:	af00      	add	r7, sp, #0
 800157e:	6078      	str	r0, [r7, #4]
 8001580:	6039      	str	r1, [r7, #0]
	if (pI2Cx->SR1 & FlagName)
 8001582:	687b      	ldr	r3, [r7, #4]
 8001584:	695a      	ldr	r2, [r3, #20]
 8001586:	683b      	ldr	r3, [r7, #0]
 8001588:	4013      	ands	r3, r2
 800158a:	2b00      	cmp	r3, #0
 800158c:	d001      	beq.n	8001592 <I2C_GetFlagStatus+0x1a>
	{
		return FLAG_SET;
 800158e:	2301      	movs	r3, #1
 8001590:	e000      	b.n	8001594 <I2C_GetFlagStatus+0x1c>
	}
	return FLAG_RESET;
 8001592:	2300      	movs	r3, #0
}
 8001594:	4618      	mov	r0, r3
 8001596:	370c      	adds	r7, #12
 8001598:	46bd      	mov	sp, r7
 800159a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800159e:	4770      	bx	lr

080015a0 <I2C_MasterSendData>:

void I2C_MasterSendData(I2C_Handle_t *pI2CHandle, uint8_t *pTxbuffer, uint32_t Len, uint8_t SlaveAddr, uint8_t Sr)
{
 80015a0:	b580      	push	{r7, lr}
 80015a2:	b084      	sub	sp, #16
 80015a4:	af00      	add	r7, sp, #0
 80015a6:	60f8      	str	r0, [r7, #12]
 80015a8:	60b9      	str	r1, [r7, #8]
 80015aa:	607a      	str	r2, [r7, #4]
 80015ac:	70fb      	strb	r3, [r7, #3]
	// 1. Generate the START condition
	I2C_GenerateStartCondition(pI2CHandle->pI2Cx);
 80015ae:	68fb      	ldr	r3, [r7, #12]
 80015b0:	681b      	ldr	r3, [r3, #0]
 80015b2:	4618      	mov	r0, r3
 80015b4:	f7ff fe36 	bl	8001224 <I2C_GenerateStartCondition>

	// 2. confirm that start generation is completed by checking the SB flag in the SR1
	//    Note: Until SB is cleared SCL will be stretched (pulled to LOW)
	while (!I2C_GetFlagStatus(pI2CHandle->pI2Cx, I2C_FLAG_SB))
 80015b8:	bf00      	nop
 80015ba:	68fb      	ldr	r3, [r7, #12]
 80015bc:	681b      	ldr	r3, [r3, #0]
 80015be:	2101      	movs	r1, #1
 80015c0:	4618      	mov	r0, r3
 80015c2:	f7ff ffd9 	bl	8001578 <I2C_GetFlagStatus>
 80015c6:	4603      	mov	r3, r0
 80015c8:	2b00      	cmp	r3, #0
 80015ca:	d0f6      	beq.n	80015ba <I2C_MasterSendData+0x1a>
		;

	// 3. Send the address of the slave with r/nw bit set to w(0) (total 8 bits )
	I2C_ExecuteAddressPhaseWrite(pI2CHandle->pI2Cx, SlaveAddr);
 80015cc:	68fb      	ldr	r3, [r7, #12]
 80015ce:	681b      	ldr	r3, [r3, #0]
 80015d0:	78fa      	ldrb	r2, [r7, #3]
 80015d2:	4611      	mov	r1, r2
 80015d4:	4618      	mov	r0, r3
 80015d6:	f7ff fe35 	bl	8001244 <I2C_ExecuteAddressPhaseWrite>

	// 4. Confirm that address phase is completed by checking the ADDR flag in teh SR1
	while (!I2C_GetFlagStatus(pI2CHandle->pI2Cx, I2C_FLAG_ADDR))
 80015da:	bf00      	nop
 80015dc:	68fb      	ldr	r3, [r7, #12]
 80015de:	681b      	ldr	r3, [r3, #0]
 80015e0:	2102      	movs	r1, #2
 80015e2:	4618      	mov	r0, r3
 80015e4:	f7ff ffc8 	bl	8001578 <I2C_GetFlagStatus>
 80015e8:	4603      	mov	r3, r0
 80015ea:	2b00      	cmp	r3, #0
 80015ec:	d0f6      	beq.n	80015dc <I2C_MasterSendData+0x3c>
		;

	// 5. clear the ADDR flag according to its software sequence
	//    Note: Until ADDR is cleared SCL will be stretched (pulled to LOW)
	I2C_ClearADDRFlag(pI2CHandle);
 80015ee:	68f8      	ldr	r0, [r7, #12]
 80015f0:	f7ff fe54 	bl	800129c <I2C_ClearADDRFlag>

	// 6. send the data until len becomes 0

	while (Len > 0)
 80015f4:	e014      	b.n	8001620 <I2C_MasterSendData+0x80>
	{
		while (!I2C_GetFlagStatus(pI2CHandle->pI2Cx, I2C_FLAG_TXE))
 80015f6:	bf00      	nop
 80015f8:	68fb      	ldr	r3, [r7, #12]
 80015fa:	681b      	ldr	r3, [r3, #0]
 80015fc:	2180      	movs	r1, #128	; 0x80
 80015fe:	4618      	mov	r0, r3
 8001600:	f7ff ffba 	bl	8001578 <I2C_GetFlagStatus>
 8001604:	4603      	mov	r3, r0
 8001606:	2b00      	cmp	r3, #0
 8001608:	d0f6      	beq.n	80015f8 <I2C_MasterSendData+0x58>
			; // Wait till TXE is set
		pI2CHandle->pI2Cx->DR = *pTxbuffer;
 800160a:	68bb      	ldr	r3, [r7, #8]
 800160c:	781a      	ldrb	r2, [r3, #0]
 800160e:	68fb      	ldr	r3, [r7, #12]
 8001610:	681b      	ldr	r3, [r3, #0]
 8001612:	611a      	str	r2, [r3, #16]
		pTxbuffer++;
 8001614:	68bb      	ldr	r3, [r7, #8]
 8001616:	3301      	adds	r3, #1
 8001618:	60bb      	str	r3, [r7, #8]
		Len--;
 800161a:	687b      	ldr	r3, [r7, #4]
 800161c:	3b01      	subs	r3, #1
 800161e:	607b      	str	r3, [r7, #4]
	while (Len > 0)
 8001620:	687b      	ldr	r3, [r7, #4]
 8001622:	2b00      	cmp	r3, #0
 8001624:	d1e7      	bne.n	80015f6 <I2C_MasterSendData+0x56>

	// 7. when Len becomes zero wait for TXE=1 and BTF=1 before generating the STOP condition
	//    Note: TXE=1 , BTF=1 , means that both SR and DR are empty and next transmission should begin
	//    when BTF=1 SCL will be stretched (pulled to LOW)

	while (!I2C_GetFlagStatus(pI2CHandle->pI2Cx, I2C_FLAG_TXE))
 8001626:	bf00      	nop
 8001628:	68fb      	ldr	r3, [r7, #12]
 800162a:	681b      	ldr	r3, [r3, #0]
 800162c:	2180      	movs	r1, #128	; 0x80
 800162e:	4618      	mov	r0, r3
 8001630:	f7ff ffa2 	bl	8001578 <I2C_GetFlagStatus>
 8001634:	4603      	mov	r3, r0
 8001636:	2b00      	cmp	r3, #0
 8001638:	d0f6      	beq.n	8001628 <I2C_MasterSendData+0x88>
		;

	while (!I2C_GetFlagStatus(pI2CHandle->pI2Cx, I2C_FLAG_BTF))
 800163a:	bf00      	nop
 800163c:	68fb      	ldr	r3, [r7, #12]
 800163e:	681b      	ldr	r3, [r3, #0]
 8001640:	2104      	movs	r1, #4
 8001642:	4618      	mov	r0, r3
 8001644:	f7ff ff98 	bl	8001578 <I2C_GetFlagStatus>
 8001648:	4603      	mov	r3, r0
 800164a:	2b00      	cmp	r3, #0
 800164c:	d0f6      	beq.n	800163c <I2C_MasterSendData+0x9c>
		;

	// 8. Generate STOP condition and master need not to wait for the completion of stop condition. Note: generating STOP, automatically clears the BTF
	if (Sr == I2C_DISABLE_SR)
 800164e:	7e3b      	ldrb	r3, [r7, #24]
 8001650:	2b00      	cmp	r3, #0
 8001652:	d104      	bne.n	800165e <I2C_MasterSendData+0xbe>
		I2C_GenerateStopCondition(pI2CHandle->pI2Cx);
 8001654:	68fb      	ldr	r3, [r7, #12]
 8001656:	681b      	ldr	r3, [r3, #0]
 8001658:	4618      	mov	r0, r3
 800165a:	f7ff fe56 	bl	800130a <I2C_GenerateStopCondition>
}
 800165e:	bf00      	nop
 8001660:	3710      	adds	r7, #16
 8001662:	46bd      	mov	sp, r7
 8001664:	bd80      	pop	{r7, pc}

08001666 <I2C_MasterReceiveData>:

void I2C_MasterReceiveData(I2C_Handle_t *pI2CHandle, uint8_t *pRxBuffer, uint8_t Len, uint8_t SlaveAddr, uint8_t Sr)
{
 8001666:	b580      	push	{r7, lr}
 8001668:	b086      	sub	sp, #24
 800166a:	af00      	add	r7, sp, #0
 800166c:	60f8      	str	r0, [r7, #12]
 800166e:	60b9      	str	r1, [r7, #8]
 8001670:	4611      	mov	r1, r2
 8001672:	461a      	mov	r2, r3
 8001674:	460b      	mov	r3, r1
 8001676:	71fb      	strb	r3, [r7, #7]
 8001678:	4613      	mov	r3, r2
 800167a:	71bb      	strb	r3, [r7, #6]
	// 1. Generate the START condition
	I2C_GenerateStartCondition(pI2CHandle->pI2Cx);
 800167c:	68fb      	ldr	r3, [r7, #12]
 800167e:	681b      	ldr	r3, [r3, #0]
 8001680:	4618      	mov	r0, r3
 8001682:	f7ff fdcf 	bl	8001224 <I2C_GenerateStartCondition>

	// 2. confirm that start generation is completed by checking the SB flag in the SR1
	//    Note: Until SB is cleared SCL will be stretched (pulled to LOW)
	while (!I2C_GetFlagStatus(pI2CHandle->pI2Cx, I2C_FLAG_SB))
 8001686:	bf00      	nop
 8001688:	68fb      	ldr	r3, [r7, #12]
 800168a:	681b      	ldr	r3, [r3, #0]
 800168c:	2101      	movs	r1, #1
 800168e:	4618      	mov	r0, r3
 8001690:	f7ff ff72 	bl	8001578 <I2C_GetFlagStatus>
 8001694:	4603      	mov	r3, r0
 8001696:	2b00      	cmp	r3, #0
 8001698:	d0f6      	beq.n	8001688 <I2C_MasterReceiveData+0x22>
		;

	// 3. Send the address of the slave with r/nw bit set to R(1) (total 8 bits )
	I2C_ExecuteAddressPhaseRead(pI2CHandle->pI2Cx, SlaveAddr);
 800169a:	68fb      	ldr	r3, [r7, #12]
 800169c:	681b      	ldr	r3, [r3, #0]
 800169e:	79ba      	ldrb	r2, [r7, #6]
 80016a0:	4611      	mov	r1, r2
 80016a2:	4618      	mov	r0, r3
 80016a4:	f7ff fde4 	bl	8001270 <I2C_ExecuteAddressPhaseRead>

	// 4. wait until address phase is completed by checking the ADDR flag in teh SR1
	while (!I2C_GetFlagStatus(pI2CHandle->pI2Cx, I2C_FLAG_ADDR))
 80016a8:	bf00      	nop
 80016aa:	68fb      	ldr	r3, [r7, #12]
 80016ac:	681b      	ldr	r3, [r3, #0]
 80016ae:	2102      	movs	r1, #2
 80016b0:	4618      	mov	r0, r3
 80016b2:	f7ff ff61 	bl	8001578 <I2C_GetFlagStatus>
 80016b6:	4603      	mov	r3, r0
 80016b8:	2b00      	cmp	r3, #0
 80016ba:	d0f6      	beq.n	80016aa <I2C_MasterReceiveData+0x44>
		;

	// procedure to read only 1 byte from slave
	if (Len == 1)
 80016bc:	79fb      	ldrb	r3, [r7, #7]
 80016be:	2b01      	cmp	r3, #1
 80016c0:	d121      	bne.n	8001706 <I2C_MasterReceiveData+0xa0>
	{
		// Disable Acking
		I2C_ManageAcking(pI2CHandle->pI2Cx, I2C_ACK_DISABLE);
 80016c2:	68fb      	ldr	r3, [r7, #12]
 80016c4:	681b      	ldr	r3, [r3, #0]
 80016c6:	2100      	movs	r1, #0
 80016c8:	4618      	mov	r0, r3
 80016ca:	f000 f85e 	bl	800178a <I2C_ManageAcking>

		// clear the ADDR flag
		I2C_ClearADDRFlag(pI2CHandle);
 80016ce:	68f8      	ldr	r0, [r7, #12]
 80016d0:	f7ff fde4 	bl	800129c <I2C_ClearADDRFlag>

		// wait until  RXNE becomes 1
		while (!I2C_GetFlagStatus(pI2CHandle->pI2Cx, I2C_FLAG_RXNE))
 80016d4:	bf00      	nop
 80016d6:	68fb      	ldr	r3, [r7, #12]
 80016d8:	681b      	ldr	r3, [r3, #0]
 80016da:	2140      	movs	r1, #64	; 0x40
 80016dc:	4618      	mov	r0, r3
 80016de:	f7ff ff4b 	bl	8001578 <I2C_GetFlagStatus>
 80016e2:	4603      	mov	r3, r0
 80016e4:	2b00      	cmp	r3, #0
 80016e6:	d0f6      	beq.n	80016d6 <I2C_MasterReceiveData+0x70>
			;

		// generate STOP condition
		if (Sr == I2C_DISABLE_SR)
 80016e8:	f897 3020 	ldrb.w	r3, [r7, #32]
 80016ec:	2b00      	cmp	r3, #0
 80016ee:	d104      	bne.n	80016fa <I2C_MasterReceiveData+0x94>
			I2C_GenerateStopCondition(pI2CHandle->pI2Cx);
 80016f0:	68fb      	ldr	r3, [r7, #12]
 80016f2:	681b      	ldr	r3, [r3, #0]
 80016f4:	4618      	mov	r0, r3
 80016f6:	f7ff fe08 	bl	800130a <I2C_GenerateStopCondition>

		// read data in to buffer
		*pRxBuffer = pI2CHandle->pI2Cx->DR;
 80016fa:	68fb      	ldr	r3, [r7, #12]
 80016fc:	681b      	ldr	r3, [r3, #0]
 80016fe:	691b      	ldr	r3, [r3, #16]
 8001700:	b2da      	uxtb	r2, r3
 8001702:	68bb      	ldr	r3, [r7, #8]
 8001704:	701a      	strb	r2, [r3, #0]
	}

	// procedure to read data from slave when Len > 1
	if (Len > 1)
 8001706:	79fb      	ldrb	r3, [r7, #7]
 8001708:	2b01      	cmp	r3, #1
 800170a:	d930      	bls.n	800176e <I2C_MasterReceiveData+0x108>
	{
		// clear the ADDR flag
		I2C_ClearADDRFlag(pI2CHandle);
 800170c:	68f8      	ldr	r0, [r7, #12]
 800170e:	f7ff fdc5 	bl	800129c <I2C_ClearADDRFlag>

		// read the data until Len becomes zero
		for (uint32_t i = Len; i > 0; i--)
 8001712:	79fb      	ldrb	r3, [r7, #7]
 8001714:	617b      	str	r3, [r7, #20]
 8001716:	e027      	b.n	8001768 <I2C_MasterReceiveData+0x102>
		{
			// wait until RXNE becomes 1
			while (!I2C_GetFlagStatus(pI2CHandle->pI2Cx, I2C_FLAG_RXNE))
 8001718:	bf00      	nop
 800171a:	68fb      	ldr	r3, [r7, #12]
 800171c:	681b      	ldr	r3, [r3, #0]
 800171e:	2140      	movs	r1, #64	; 0x40
 8001720:	4618      	mov	r0, r3
 8001722:	f7ff ff29 	bl	8001578 <I2C_GetFlagStatus>
 8001726:	4603      	mov	r3, r0
 8001728:	2b00      	cmp	r3, #0
 800172a:	d0f6      	beq.n	800171a <I2C_MasterReceiveData+0xb4>
				;

			if (i == 2) // if last 2 bytes are remaining
 800172c:	697b      	ldr	r3, [r7, #20]
 800172e:	2b02      	cmp	r3, #2
 8001730:	d10e      	bne.n	8001750 <I2C_MasterReceiveData+0xea>
			{
				// Disable Acking
				I2C_ManageAcking(pI2CHandle->pI2Cx, I2C_ACK_DISABLE);
 8001732:	68fb      	ldr	r3, [r7, #12]
 8001734:	681b      	ldr	r3, [r3, #0]
 8001736:	2100      	movs	r1, #0
 8001738:	4618      	mov	r0, r3
 800173a:	f000 f826 	bl	800178a <I2C_ManageAcking>

				// generate STOP condition
				if (Sr == I2C_DISABLE_SR)
 800173e:	f897 3020 	ldrb.w	r3, [r7, #32]
 8001742:	2b00      	cmp	r3, #0
 8001744:	d104      	bne.n	8001750 <I2C_MasterReceiveData+0xea>
					I2C_GenerateStopCondition(pI2CHandle->pI2Cx);
 8001746:	68fb      	ldr	r3, [r7, #12]
 8001748:	681b      	ldr	r3, [r3, #0]
 800174a:	4618      	mov	r0, r3
 800174c:	f7ff fddd 	bl	800130a <I2C_GenerateStopCondition>
			}

			// read the data from data register in to buffer
			*pRxBuffer = pI2CHandle->pI2Cx->DR;
 8001750:	68fb      	ldr	r3, [r7, #12]
 8001752:	681b      	ldr	r3, [r3, #0]
 8001754:	691b      	ldr	r3, [r3, #16]
 8001756:	b2da      	uxtb	r2, r3
 8001758:	68bb      	ldr	r3, [r7, #8]
 800175a:	701a      	strb	r2, [r3, #0]

			// increment the buffer address
			pRxBuffer++;
 800175c:	68bb      	ldr	r3, [r7, #8]
 800175e:	3301      	adds	r3, #1
 8001760:	60bb      	str	r3, [r7, #8]
		for (uint32_t i = Len; i > 0; i--)
 8001762:	697b      	ldr	r3, [r7, #20]
 8001764:	3b01      	subs	r3, #1
 8001766:	617b      	str	r3, [r7, #20]
 8001768:	697b      	ldr	r3, [r7, #20]
 800176a:	2b00      	cmp	r3, #0
 800176c:	d1d4      	bne.n	8001718 <I2C_MasterReceiveData+0xb2>
		}
	}

	// re-enable ACKing
	if (pI2CHandle->I2C_Config.I2C_AckControl == I2C_ACK_ENABLE)
 800176e:	68fb      	ldr	r3, [r7, #12]
 8001770:	7a5b      	ldrb	r3, [r3, #9]
 8001772:	2b01      	cmp	r3, #1
 8001774:	d105      	bne.n	8001782 <I2C_MasterReceiveData+0x11c>
	{
		I2C_ManageAcking(pI2CHandle->pI2Cx, I2C_ACK_ENABLE);
 8001776:	68fb      	ldr	r3, [r7, #12]
 8001778:	681b      	ldr	r3, [r3, #0]
 800177a:	2101      	movs	r1, #1
 800177c:	4618      	mov	r0, r3
 800177e:	f000 f804 	bl	800178a <I2C_ManageAcking>
	}
}
 8001782:	bf00      	nop
 8001784:	3718      	adds	r7, #24
 8001786:	46bd      	mov	sp, r7
 8001788:	bd80      	pop	{r7, pc}

0800178a <I2C_ManageAcking>:

void I2C_ManageAcking(I2C_RegDef_t *pI2Cx, uint8_t EnorDi)
{
 800178a:	b480      	push	{r7}
 800178c:	b083      	sub	sp, #12
 800178e:	af00      	add	r7, sp, #0
 8001790:	6078      	str	r0, [r7, #4]
 8001792:	460b      	mov	r3, r1
 8001794:	70fb      	strb	r3, [r7, #3]
	if (EnorDi == I2C_ACK_ENABLE)
 8001796:	78fb      	ldrb	r3, [r7, #3]
 8001798:	2b01      	cmp	r3, #1
 800179a:	d106      	bne.n	80017aa <I2C_ManageAcking+0x20>
	{
		// enable the ack
		pI2Cx->CR1 |= (1 << I2C_CR1_ACK);
 800179c:	687b      	ldr	r3, [r7, #4]
 800179e:	681b      	ldr	r3, [r3, #0]
 80017a0:	f443 6280 	orr.w	r2, r3, #1024	; 0x400
 80017a4:	687b      	ldr	r3, [r7, #4]
 80017a6:	601a      	str	r2, [r3, #0]
	else
	{
		// disable the ack
		pI2Cx->CR1 &= ~(1 << I2C_CR1_ACK);
	}
}
 80017a8:	e005      	b.n	80017b6 <I2C_ManageAcking+0x2c>
		pI2Cx->CR1 &= ~(1 << I2C_CR1_ACK);
 80017aa:	687b      	ldr	r3, [r7, #4]
 80017ac:	681b      	ldr	r3, [r3, #0]
 80017ae:	f423 6280 	bic.w	r2, r3, #1024	; 0x400
 80017b2:	687b      	ldr	r3, [r7, #4]
 80017b4:	601a      	str	r2, [r3, #0]
}
 80017b6:	bf00      	nop
 80017b8:	370c      	adds	r7, #12
 80017ba:	46bd      	mov	sp, r7
 80017bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80017c0:	4770      	bx	lr
	...

080017c4 <RCC_GetPCLK1Value>:
uint8_t APB1_PreScaler[4] = { 2, 4 , 8, 16};



uint32_t RCC_GetPCLK1Value(void)
{
 80017c4:	b580      	push	{r7, lr}
 80017c6:	b084      	sub	sp, #16
 80017c8:	af00      	add	r7, sp, #0
	uint32_t pclk1,SystemClk;

	uint8_t clksrc,temp,ahbp,apb1p;

	clksrc = ((RCC->CFGR >> 2) & 0x3);
 80017ca:	4b25      	ldr	r3, [pc, #148]	; (8001860 <RCC_GetPCLK1Value+0x9c>)
 80017cc:	689b      	ldr	r3, [r3, #8]
 80017ce:	089b      	lsrs	r3, r3, #2
 80017d0:	b2db      	uxtb	r3, r3
 80017d2:	f003 0303 	and.w	r3, r3, #3
 80017d6:	727b      	strb	r3, [r7, #9]

	if(clksrc == 0 )
 80017d8:	7a7b      	ldrb	r3, [r7, #9]
 80017da:	2b00      	cmp	r3, #0
 80017dc:	d102      	bne.n	80017e4 <RCC_GetPCLK1Value+0x20>
	{
		SystemClk = 16000000;
 80017de:	4b21      	ldr	r3, [pc, #132]	; (8001864 <RCC_GetPCLK1Value+0xa0>)
 80017e0:	60fb      	str	r3, [r7, #12]
 80017e2:	e00b      	b.n	80017fc <RCC_GetPCLK1Value+0x38>
	}else if(clksrc == 1)
 80017e4:	7a7b      	ldrb	r3, [r7, #9]
 80017e6:	2b01      	cmp	r3, #1
 80017e8:	d102      	bne.n	80017f0 <RCC_GetPCLK1Value+0x2c>
	{
		SystemClk = 8000000;
 80017ea:	4b1f      	ldr	r3, [pc, #124]	; (8001868 <RCC_GetPCLK1Value+0xa4>)
 80017ec:	60fb      	str	r3, [r7, #12]
 80017ee:	e005      	b.n	80017fc <RCC_GetPCLK1Value+0x38>
	}else if (clksrc == 2)
 80017f0:	7a7b      	ldrb	r3, [r7, #9]
 80017f2:	2b02      	cmp	r3, #2
 80017f4:	d102      	bne.n	80017fc <RCC_GetPCLK1Value+0x38>
	{
		SystemClk = RCC_GetPLLOutputClock();
 80017f6:	f000 f83d 	bl	8001874 <RCC_GetPLLOutputClock>
 80017fa:	60f8      	str	r0, [r7, #12]
	}

	//for ahb
	temp = ((RCC->CFGR >> 4 ) & 0xF);
 80017fc:	4b18      	ldr	r3, [pc, #96]	; (8001860 <RCC_GetPCLK1Value+0x9c>)
 80017fe:	689b      	ldr	r3, [r3, #8]
 8001800:	091b      	lsrs	r3, r3, #4
 8001802:	b2db      	uxtb	r3, r3
 8001804:	f003 030f 	and.w	r3, r3, #15
 8001808:	723b      	strb	r3, [r7, #8]

	if(temp < 8)
 800180a:	7a3b      	ldrb	r3, [r7, #8]
 800180c:	2b07      	cmp	r3, #7
 800180e:	d802      	bhi.n	8001816 <RCC_GetPCLK1Value+0x52>
	{
		ahbp = 1;
 8001810:	2301      	movs	r3, #1
 8001812:	72fb      	strb	r3, [r7, #11]
 8001814:	e005      	b.n	8001822 <RCC_GetPCLK1Value+0x5e>
	}else
	{
		ahbp = AHB_PreScaler[temp-8];
 8001816:	7a3b      	ldrb	r3, [r7, #8]
 8001818:	3b08      	subs	r3, #8
 800181a:	4a14      	ldr	r2, [pc, #80]	; (800186c <RCC_GetPCLK1Value+0xa8>)
 800181c:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8001820:	72fb      	strb	r3, [r7, #11]
	}



	//apb1
	temp = ((RCC->CFGR >> 10 ) & 0x7);
 8001822:	4b0f      	ldr	r3, [pc, #60]	; (8001860 <RCC_GetPCLK1Value+0x9c>)
 8001824:	689b      	ldr	r3, [r3, #8]
 8001826:	0a9b      	lsrs	r3, r3, #10
 8001828:	b2db      	uxtb	r3, r3
 800182a:	f003 0307 	and.w	r3, r3, #7
 800182e:	723b      	strb	r3, [r7, #8]

	if(temp < 4)
 8001830:	7a3b      	ldrb	r3, [r7, #8]
 8001832:	2b03      	cmp	r3, #3
 8001834:	d802      	bhi.n	800183c <RCC_GetPCLK1Value+0x78>
	{
		apb1p = 1;
 8001836:	2301      	movs	r3, #1
 8001838:	72bb      	strb	r3, [r7, #10]
 800183a:	e004      	b.n	8001846 <RCC_GetPCLK1Value+0x82>
	}else
	{
		apb1p = APB1_PreScaler[temp-4];
 800183c:	7a3b      	ldrb	r3, [r7, #8]
 800183e:	3b04      	subs	r3, #4
 8001840:	4a0b      	ldr	r2, [pc, #44]	; (8001870 <RCC_GetPCLK1Value+0xac>)
 8001842:	5cd3      	ldrb	r3, [r2, r3]
 8001844:	72bb      	strb	r3, [r7, #10]
	}

	pclk1 =  (SystemClk / ahbp) /apb1p;
 8001846:	7afb      	ldrb	r3, [r7, #11]
 8001848:	68fa      	ldr	r2, [r7, #12]
 800184a:	fbb2 f2f3 	udiv	r2, r2, r3
 800184e:	7abb      	ldrb	r3, [r7, #10]
 8001850:	fbb2 f3f3 	udiv	r3, r2, r3
 8001854:	607b      	str	r3, [r7, #4]

	return pclk1;
 8001856:	687b      	ldr	r3, [r7, #4]
}
 8001858:	4618      	mov	r0, r3
 800185a:	3710      	adds	r7, #16
 800185c:	46bd      	mov	sp, r7
 800185e:	bd80      	pop	{r7, pc}
 8001860:	40023800 	.word	0x40023800
 8001864:	00f42400 	.word	0x00f42400
 8001868:	007a1200 	.word	0x007a1200
 800186c:	20000000 	.word	0x20000000
 8001870:	20000010 	.word	0x20000010

08001874 <RCC_GetPLLOutputClock>:

	return pclk2;
}

uint32_t  RCC_GetPLLOutputClock()
{
 8001874:	b480      	push	{r7}
 8001876:	af00      	add	r7, sp, #0

	return 0;
 8001878:	2300      	movs	r3, #0
}
 800187a:	4618      	mov	r0, r3
 800187c:	46bd      	mov	sp, r7
 800187e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001882:	4770      	bx	lr

08001884 <__cvt>:
 8001884:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8001888:	ec55 4b10 	vmov	r4, r5, d0
 800188c:	2d00      	cmp	r5, #0
 800188e:	460e      	mov	r6, r1
 8001890:	4619      	mov	r1, r3
 8001892:	462b      	mov	r3, r5
 8001894:	bfbb      	ittet	lt
 8001896:	f105 4300 	addlt.w	r3, r5, #2147483648	; 0x80000000
 800189a:	461d      	movlt	r5, r3
 800189c:	2300      	movge	r3, #0
 800189e:	232d      	movlt	r3, #45	; 0x2d
 80018a0:	700b      	strb	r3, [r1, #0]
 80018a2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80018a4:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 80018a8:	4691      	mov	r9, r2
 80018aa:	f023 0820 	bic.w	r8, r3, #32
 80018ae:	bfbc      	itt	lt
 80018b0:	4622      	movlt	r2, r4
 80018b2:	4614      	movlt	r4, r2
 80018b4:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 80018b8:	d005      	beq.n	80018c6 <__cvt+0x42>
 80018ba:	f1b8 0f45 	cmp.w	r8, #69	; 0x45
 80018be:	d100      	bne.n	80018c2 <__cvt+0x3e>
 80018c0:	3601      	adds	r6, #1
 80018c2:	2102      	movs	r1, #2
 80018c4:	e000      	b.n	80018c8 <__cvt+0x44>
 80018c6:	2103      	movs	r1, #3
 80018c8:	ab03      	add	r3, sp, #12
 80018ca:	9301      	str	r3, [sp, #4]
 80018cc:	ab02      	add	r3, sp, #8
 80018ce:	9300      	str	r3, [sp, #0]
 80018d0:	ec45 4b10 	vmov	d0, r4, r5
 80018d4:	4653      	mov	r3, sl
 80018d6:	4632      	mov	r2, r6
 80018d8:	f000 ff46 	bl	8002768 <_dtoa_r>
 80018dc:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
 80018e0:	4607      	mov	r7, r0
 80018e2:	d102      	bne.n	80018ea <__cvt+0x66>
 80018e4:	f019 0f01 	tst.w	r9, #1
 80018e8:	d022      	beq.n	8001930 <__cvt+0xac>
 80018ea:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 80018ee:	eb07 0906 	add.w	r9, r7, r6
 80018f2:	d110      	bne.n	8001916 <__cvt+0x92>
 80018f4:	783b      	ldrb	r3, [r7, #0]
 80018f6:	2b30      	cmp	r3, #48	; 0x30
 80018f8:	d10a      	bne.n	8001910 <__cvt+0x8c>
 80018fa:	2200      	movs	r2, #0
 80018fc:	2300      	movs	r3, #0
 80018fe:	4620      	mov	r0, r4
 8001900:	4629      	mov	r1, r5
 8001902:	f7ff f8e1 	bl	8000ac8 <__aeabi_dcmpeq>
 8001906:	b918      	cbnz	r0, 8001910 <__cvt+0x8c>
 8001908:	f1c6 0601 	rsb	r6, r6, #1
 800190c:	f8ca 6000 	str.w	r6, [sl]
 8001910:	f8da 3000 	ldr.w	r3, [sl]
 8001914:	4499      	add	r9, r3
 8001916:	2200      	movs	r2, #0
 8001918:	2300      	movs	r3, #0
 800191a:	4620      	mov	r0, r4
 800191c:	4629      	mov	r1, r5
 800191e:	f7ff f8d3 	bl	8000ac8 <__aeabi_dcmpeq>
 8001922:	b108      	cbz	r0, 8001928 <__cvt+0xa4>
 8001924:	f8cd 900c 	str.w	r9, [sp, #12]
 8001928:	2230      	movs	r2, #48	; 0x30
 800192a:	9b03      	ldr	r3, [sp, #12]
 800192c:	454b      	cmp	r3, r9
 800192e:	d307      	bcc.n	8001940 <__cvt+0xbc>
 8001930:	9b03      	ldr	r3, [sp, #12]
 8001932:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8001934:	1bdb      	subs	r3, r3, r7
 8001936:	4638      	mov	r0, r7
 8001938:	6013      	str	r3, [r2, #0]
 800193a:	b004      	add	sp, #16
 800193c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001940:	1c59      	adds	r1, r3, #1
 8001942:	9103      	str	r1, [sp, #12]
 8001944:	701a      	strb	r2, [r3, #0]
 8001946:	e7f0      	b.n	800192a <__cvt+0xa6>

08001948 <__exponent>:
 8001948:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800194a:	4603      	mov	r3, r0
 800194c:	2900      	cmp	r1, #0
 800194e:	bfb8      	it	lt
 8001950:	4249      	neglt	r1, r1
 8001952:	f803 2b02 	strb.w	r2, [r3], #2
 8001956:	bfb4      	ite	lt
 8001958:	222d      	movlt	r2, #45	; 0x2d
 800195a:	222b      	movge	r2, #43	; 0x2b
 800195c:	2909      	cmp	r1, #9
 800195e:	7042      	strb	r2, [r0, #1]
 8001960:	dd2a      	ble.n	80019b8 <__exponent+0x70>
 8001962:	f10d 0207 	add.w	r2, sp, #7
 8001966:	4617      	mov	r7, r2
 8001968:	260a      	movs	r6, #10
 800196a:	4694      	mov	ip, r2
 800196c:	fb91 f5f6 	sdiv	r5, r1, r6
 8001970:	fb06 1415 	mls	r4, r6, r5, r1
 8001974:	3430      	adds	r4, #48	; 0x30
 8001976:	f80c 4c01 	strb.w	r4, [ip, #-1]
 800197a:	460c      	mov	r4, r1
 800197c:	2c63      	cmp	r4, #99	; 0x63
 800197e:	f102 32ff 	add.w	r2, r2, #4294967295
 8001982:	4629      	mov	r1, r5
 8001984:	dcf1      	bgt.n	800196a <__exponent+0x22>
 8001986:	3130      	adds	r1, #48	; 0x30
 8001988:	f1ac 0402 	sub.w	r4, ip, #2
 800198c:	f802 1c01 	strb.w	r1, [r2, #-1]
 8001990:	1c41      	adds	r1, r0, #1
 8001992:	4622      	mov	r2, r4
 8001994:	42ba      	cmp	r2, r7
 8001996:	d30a      	bcc.n	80019ae <__exponent+0x66>
 8001998:	f10d 0209 	add.w	r2, sp, #9
 800199c:	eba2 020c 	sub.w	r2, r2, ip
 80019a0:	42bc      	cmp	r4, r7
 80019a2:	bf88      	it	hi
 80019a4:	2200      	movhi	r2, #0
 80019a6:	4413      	add	r3, r2
 80019a8:	1a18      	subs	r0, r3, r0
 80019aa:	b003      	add	sp, #12
 80019ac:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80019ae:	f812 5b01 	ldrb.w	r5, [r2], #1
 80019b2:	f801 5f01 	strb.w	r5, [r1, #1]!
 80019b6:	e7ed      	b.n	8001994 <__exponent+0x4c>
 80019b8:	2330      	movs	r3, #48	; 0x30
 80019ba:	3130      	adds	r1, #48	; 0x30
 80019bc:	7083      	strb	r3, [r0, #2]
 80019be:	70c1      	strb	r1, [r0, #3]
 80019c0:	1d03      	adds	r3, r0, #4
 80019c2:	e7f1      	b.n	80019a8 <__exponent+0x60>

080019c4 <_printf_float>:
 80019c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80019c8:	ed2d 8b02 	vpush	{d8}
 80019cc:	b08d      	sub	sp, #52	; 0x34
 80019ce:	460c      	mov	r4, r1
 80019d0:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
 80019d4:	4616      	mov	r6, r2
 80019d6:	461f      	mov	r7, r3
 80019d8:	4605      	mov	r5, r0
 80019da:	f000 fdc9 	bl	8002570 <_localeconv_r>
 80019de:	f8d0 a000 	ldr.w	sl, [r0]
 80019e2:	4650      	mov	r0, sl
 80019e4:	f7fe fc44 	bl	8000270 <strlen>
 80019e8:	2300      	movs	r3, #0
 80019ea:	930a      	str	r3, [sp, #40]	; 0x28
 80019ec:	6823      	ldr	r3, [r4, #0]
 80019ee:	9305      	str	r3, [sp, #20]
 80019f0:	f8d8 3000 	ldr.w	r3, [r8]
 80019f4:	f894 b018 	ldrb.w	fp, [r4, #24]
 80019f8:	3307      	adds	r3, #7
 80019fa:	f023 0307 	bic.w	r3, r3, #7
 80019fe:	f103 0208 	add.w	r2, r3, #8
 8001a02:	f8c8 2000 	str.w	r2, [r8]
 8001a06:	e9d3 8900 	ldrd	r8, r9, [r3]
 8001a0a:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 8001a0e:	9307      	str	r3, [sp, #28]
 8001a10:	f8cd 8018 	str.w	r8, [sp, #24]
 8001a14:	ee08 0a10 	vmov	s16, r0
 8001a18:	e9c4 8912 	strd	r8, r9, [r4, #72]	; 0x48
 8001a1c:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8001a20:	4b9e      	ldr	r3, [pc, #632]	; (8001c9c <_printf_float+0x2d8>)
 8001a22:	f04f 32ff 	mov.w	r2, #4294967295
 8001a26:	f7ff f881 	bl	8000b2c <__aeabi_dcmpun>
 8001a2a:	bb88      	cbnz	r0, 8001a90 <_printf_float+0xcc>
 8001a2c:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8001a30:	4b9a      	ldr	r3, [pc, #616]	; (8001c9c <_printf_float+0x2d8>)
 8001a32:	f04f 32ff 	mov.w	r2, #4294967295
 8001a36:	f7ff f85b 	bl	8000af0 <__aeabi_dcmple>
 8001a3a:	bb48      	cbnz	r0, 8001a90 <_printf_float+0xcc>
 8001a3c:	2200      	movs	r2, #0
 8001a3e:	2300      	movs	r3, #0
 8001a40:	4640      	mov	r0, r8
 8001a42:	4649      	mov	r1, r9
 8001a44:	f7ff f84a 	bl	8000adc <__aeabi_dcmplt>
 8001a48:	b110      	cbz	r0, 8001a50 <_printf_float+0x8c>
 8001a4a:	232d      	movs	r3, #45	; 0x2d
 8001a4c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8001a50:	4a93      	ldr	r2, [pc, #588]	; (8001ca0 <_printf_float+0x2dc>)
 8001a52:	4b94      	ldr	r3, [pc, #592]	; (8001ca4 <_printf_float+0x2e0>)
 8001a54:	f1bb 0f47 	cmp.w	fp, #71	; 0x47
 8001a58:	bf94      	ite	ls
 8001a5a:	4690      	movls	r8, r2
 8001a5c:	4698      	movhi	r8, r3
 8001a5e:	2303      	movs	r3, #3
 8001a60:	6123      	str	r3, [r4, #16]
 8001a62:	9b05      	ldr	r3, [sp, #20]
 8001a64:	f023 0304 	bic.w	r3, r3, #4
 8001a68:	6023      	str	r3, [r4, #0]
 8001a6a:	f04f 0900 	mov.w	r9, #0
 8001a6e:	9700      	str	r7, [sp, #0]
 8001a70:	4633      	mov	r3, r6
 8001a72:	aa0b      	add	r2, sp, #44	; 0x2c
 8001a74:	4621      	mov	r1, r4
 8001a76:	4628      	mov	r0, r5
 8001a78:	f000 f9da 	bl	8001e30 <_printf_common>
 8001a7c:	3001      	adds	r0, #1
 8001a7e:	f040 8090 	bne.w	8001ba2 <_printf_float+0x1de>
 8001a82:	f04f 30ff 	mov.w	r0, #4294967295
 8001a86:	b00d      	add	sp, #52	; 0x34
 8001a88:	ecbd 8b02 	vpop	{d8}
 8001a8c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001a90:	4642      	mov	r2, r8
 8001a92:	464b      	mov	r3, r9
 8001a94:	4640      	mov	r0, r8
 8001a96:	4649      	mov	r1, r9
 8001a98:	f7ff f848 	bl	8000b2c <__aeabi_dcmpun>
 8001a9c:	b140      	cbz	r0, 8001ab0 <_printf_float+0xec>
 8001a9e:	464b      	mov	r3, r9
 8001aa0:	2b00      	cmp	r3, #0
 8001aa2:	bfbc      	itt	lt
 8001aa4:	232d      	movlt	r3, #45	; 0x2d
 8001aa6:	f884 3043 	strblt.w	r3, [r4, #67]	; 0x43
 8001aaa:	4a7f      	ldr	r2, [pc, #508]	; (8001ca8 <_printf_float+0x2e4>)
 8001aac:	4b7f      	ldr	r3, [pc, #508]	; (8001cac <_printf_float+0x2e8>)
 8001aae:	e7d1      	b.n	8001a54 <_printf_float+0x90>
 8001ab0:	6863      	ldr	r3, [r4, #4]
 8001ab2:	f00b 02df 	and.w	r2, fp, #223	; 0xdf
 8001ab6:	9206      	str	r2, [sp, #24]
 8001ab8:	1c5a      	adds	r2, r3, #1
 8001aba:	d13f      	bne.n	8001b3c <_printf_float+0x178>
 8001abc:	2306      	movs	r3, #6
 8001abe:	6063      	str	r3, [r4, #4]
 8001ac0:	9b05      	ldr	r3, [sp, #20]
 8001ac2:	6861      	ldr	r1, [r4, #4]
 8001ac4:	f443 6280 	orr.w	r2, r3, #1024	; 0x400
 8001ac8:	2300      	movs	r3, #0
 8001aca:	9303      	str	r3, [sp, #12]
 8001acc:	ab0a      	add	r3, sp, #40	; 0x28
 8001ace:	e9cd b301 	strd	fp, r3, [sp, #4]
 8001ad2:	ab09      	add	r3, sp, #36	; 0x24
 8001ad4:	ec49 8b10 	vmov	d0, r8, r9
 8001ad8:	9300      	str	r3, [sp, #0]
 8001ada:	6022      	str	r2, [r4, #0]
 8001adc:	f10d 0323 	add.w	r3, sp, #35	; 0x23
 8001ae0:	4628      	mov	r0, r5
 8001ae2:	f7ff fecf 	bl	8001884 <__cvt>
 8001ae6:	9b06      	ldr	r3, [sp, #24]
 8001ae8:	9909      	ldr	r1, [sp, #36]	; 0x24
 8001aea:	2b47      	cmp	r3, #71	; 0x47
 8001aec:	4680      	mov	r8, r0
 8001aee:	d108      	bne.n	8001b02 <_printf_float+0x13e>
 8001af0:	1cc8      	adds	r0, r1, #3
 8001af2:	db02      	blt.n	8001afa <_printf_float+0x136>
 8001af4:	6863      	ldr	r3, [r4, #4]
 8001af6:	4299      	cmp	r1, r3
 8001af8:	dd41      	ble.n	8001b7e <_printf_float+0x1ba>
 8001afa:	f1ab 0302 	sub.w	r3, fp, #2
 8001afe:	fa5f fb83 	uxtb.w	fp, r3
 8001b02:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 8001b06:	d820      	bhi.n	8001b4a <_printf_float+0x186>
 8001b08:	3901      	subs	r1, #1
 8001b0a:	465a      	mov	r2, fp
 8001b0c:	f104 0050 	add.w	r0, r4, #80	; 0x50
 8001b10:	9109      	str	r1, [sp, #36]	; 0x24
 8001b12:	f7ff ff19 	bl	8001948 <__exponent>
 8001b16:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8001b18:	1813      	adds	r3, r2, r0
 8001b1a:	2a01      	cmp	r2, #1
 8001b1c:	4681      	mov	r9, r0
 8001b1e:	6123      	str	r3, [r4, #16]
 8001b20:	dc02      	bgt.n	8001b28 <_printf_float+0x164>
 8001b22:	6822      	ldr	r2, [r4, #0]
 8001b24:	07d2      	lsls	r2, r2, #31
 8001b26:	d501      	bpl.n	8001b2c <_printf_float+0x168>
 8001b28:	3301      	adds	r3, #1
 8001b2a:	6123      	str	r3, [r4, #16]
 8001b2c:	f89d 3023 	ldrb.w	r3, [sp, #35]	; 0x23
 8001b30:	2b00      	cmp	r3, #0
 8001b32:	d09c      	beq.n	8001a6e <_printf_float+0xaa>
 8001b34:	232d      	movs	r3, #45	; 0x2d
 8001b36:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8001b3a:	e798      	b.n	8001a6e <_printf_float+0xaa>
 8001b3c:	9a06      	ldr	r2, [sp, #24]
 8001b3e:	2a47      	cmp	r2, #71	; 0x47
 8001b40:	d1be      	bne.n	8001ac0 <_printf_float+0xfc>
 8001b42:	2b00      	cmp	r3, #0
 8001b44:	d1bc      	bne.n	8001ac0 <_printf_float+0xfc>
 8001b46:	2301      	movs	r3, #1
 8001b48:	e7b9      	b.n	8001abe <_printf_float+0xfa>
 8001b4a:	f1bb 0f66 	cmp.w	fp, #102	; 0x66
 8001b4e:	d118      	bne.n	8001b82 <_printf_float+0x1be>
 8001b50:	2900      	cmp	r1, #0
 8001b52:	6863      	ldr	r3, [r4, #4]
 8001b54:	dd0b      	ble.n	8001b6e <_printf_float+0x1aa>
 8001b56:	6121      	str	r1, [r4, #16]
 8001b58:	b913      	cbnz	r3, 8001b60 <_printf_float+0x19c>
 8001b5a:	6822      	ldr	r2, [r4, #0]
 8001b5c:	07d0      	lsls	r0, r2, #31
 8001b5e:	d502      	bpl.n	8001b66 <_printf_float+0x1a2>
 8001b60:	3301      	adds	r3, #1
 8001b62:	440b      	add	r3, r1
 8001b64:	6123      	str	r3, [r4, #16]
 8001b66:	65a1      	str	r1, [r4, #88]	; 0x58
 8001b68:	f04f 0900 	mov.w	r9, #0
 8001b6c:	e7de      	b.n	8001b2c <_printf_float+0x168>
 8001b6e:	b913      	cbnz	r3, 8001b76 <_printf_float+0x1b2>
 8001b70:	6822      	ldr	r2, [r4, #0]
 8001b72:	07d2      	lsls	r2, r2, #31
 8001b74:	d501      	bpl.n	8001b7a <_printf_float+0x1b6>
 8001b76:	3302      	adds	r3, #2
 8001b78:	e7f4      	b.n	8001b64 <_printf_float+0x1a0>
 8001b7a:	2301      	movs	r3, #1
 8001b7c:	e7f2      	b.n	8001b64 <_printf_float+0x1a0>
 8001b7e:	f04f 0b67 	mov.w	fp, #103	; 0x67
 8001b82:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8001b84:	4299      	cmp	r1, r3
 8001b86:	db05      	blt.n	8001b94 <_printf_float+0x1d0>
 8001b88:	6823      	ldr	r3, [r4, #0]
 8001b8a:	6121      	str	r1, [r4, #16]
 8001b8c:	07d8      	lsls	r0, r3, #31
 8001b8e:	d5ea      	bpl.n	8001b66 <_printf_float+0x1a2>
 8001b90:	1c4b      	adds	r3, r1, #1
 8001b92:	e7e7      	b.n	8001b64 <_printf_float+0x1a0>
 8001b94:	2900      	cmp	r1, #0
 8001b96:	bfd4      	ite	le
 8001b98:	f1c1 0202 	rsble	r2, r1, #2
 8001b9c:	2201      	movgt	r2, #1
 8001b9e:	4413      	add	r3, r2
 8001ba0:	e7e0      	b.n	8001b64 <_printf_float+0x1a0>
 8001ba2:	6823      	ldr	r3, [r4, #0]
 8001ba4:	055a      	lsls	r2, r3, #21
 8001ba6:	d407      	bmi.n	8001bb8 <_printf_float+0x1f4>
 8001ba8:	6923      	ldr	r3, [r4, #16]
 8001baa:	4642      	mov	r2, r8
 8001bac:	4631      	mov	r1, r6
 8001bae:	4628      	mov	r0, r5
 8001bb0:	47b8      	blx	r7
 8001bb2:	3001      	adds	r0, #1
 8001bb4:	d12c      	bne.n	8001c10 <_printf_float+0x24c>
 8001bb6:	e764      	b.n	8001a82 <_printf_float+0xbe>
 8001bb8:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 8001bbc:	f240 80e0 	bls.w	8001d80 <_printf_float+0x3bc>
 8001bc0:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 8001bc4:	2200      	movs	r2, #0
 8001bc6:	2300      	movs	r3, #0
 8001bc8:	f7fe ff7e 	bl	8000ac8 <__aeabi_dcmpeq>
 8001bcc:	2800      	cmp	r0, #0
 8001bce:	d034      	beq.n	8001c3a <_printf_float+0x276>
 8001bd0:	4a37      	ldr	r2, [pc, #220]	; (8001cb0 <_printf_float+0x2ec>)
 8001bd2:	2301      	movs	r3, #1
 8001bd4:	4631      	mov	r1, r6
 8001bd6:	4628      	mov	r0, r5
 8001bd8:	47b8      	blx	r7
 8001bda:	3001      	adds	r0, #1
 8001bdc:	f43f af51 	beq.w	8001a82 <_printf_float+0xbe>
 8001be0:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8001be4:	429a      	cmp	r2, r3
 8001be6:	db02      	blt.n	8001bee <_printf_float+0x22a>
 8001be8:	6823      	ldr	r3, [r4, #0]
 8001bea:	07d8      	lsls	r0, r3, #31
 8001bec:	d510      	bpl.n	8001c10 <_printf_float+0x24c>
 8001bee:	ee18 3a10 	vmov	r3, s16
 8001bf2:	4652      	mov	r2, sl
 8001bf4:	4631      	mov	r1, r6
 8001bf6:	4628      	mov	r0, r5
 8001bf8:	47b8      	blx	r7
 8001bfa:	3001      	adds	r0, #1
 8001bfc:	f43f af41 	beq.w	8001a82 <_printf_float+0xbe>
 8001c00:	f04f 0800 	mov.w	r8, #0
 8001c04:	f104 091a 	add.w	r9, r4, #26
 8001c08:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8001c0a:	3b01      	subs	r3, #1
 8001c0c:	4543      	cmp	r3, r8
 8001c0e:	dc09      	bgt.n	8001c24 <_printf_float+0x260>
 8001c10:	6823      	ldr	r3, [r4, #0]
 8001c12:	079b      	lsls	r3, r3, #30
 8001c14:	f100 8107 	bmi.w	8001e26 <_printf_float+0x462>
 8001c18:	68e0      	ldr	r0, [r4, #12]
 8001c1a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8001c1c:	4298      	cmp	r0, r3
 8001c1e:	bfb8      	it	lt
 8001c20:	4618      	movlt	r0, r3
 8001c22:	e730      	b.n	8001a86 <_printf_float+0xc2>
 8001c24:	2301      	movs	r3, #1
 8001c26:	464a      	mov	r2, r9
 8001c28:	4631      	mov	r1, r6
 8001c2a:	4628      	mov	r0, r5
 8001c2c:	47b8      	blx	r7
 8001c2e:	3001      	adds	r0, #1
 8001c30:	f43f af27 	beq.w	8001a82 <_printf_float+0xbe>
 8001c34:	f108 0801 	add.w	r8, r8, #1
 8001c38:	e7e6      	b.n	8001c08 <_printf_float+0x244>
 8001c3a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8001c3c:	2b00      	cmp	r3, #0
 8001c3e:	dc39      	bgt.n	8001cb4 <_printf_float+0x2f0>
 8001c40:	4a1b      	ldr	r2, [pc, #108]	; (8001cb0 <_printf_float+0x2ec>)
 8001c42:	2301      	movs	r3, #1
 8001c44:	4631      	mov	r1, r6
 8001c46:	4628      	mov	r0, r5
 8001c48:	47b8      	blx	r7
 8001c4a:	3001      	adds	r0, #1
 8001c4c:	f43f af19 	beq.w	8001a82 <_printf_float+0xbe>
 8001c50:	e9dd 3209 	ldrd	r3, r2, [sp, #36]	; 0x24
 8001c54:	4313      	orrs	r3, r2
 8001c56:	d102      	bne.n	8001c5e <_printf_float+0x29a>
 8001c58:	6823      	ldr	r3, [r4, #0]
 8001c5a:	07d9      	lsls	r1, r3, #31
 8001c5c:	d5d8      	bpl.n	8001c10 <_printf_float+0x24c>
 8001c5e:	ee18 3a10 	vmov	r3, s16
 8001c62:	4652      	mov	r2, sl
 8001c64:	4631      	mov	r1, r6
 8001c66:	4628      	mov	r0, r5
 8001c68:	47b8      	blx	r7
 8001c6a:	3001      	adds	r0, #1
 8001c6c:	f43f af09 	beq.w	8001a82 <_printf_float+0xbe>
 8001c70:	f04f 0900 	mov.w	r9, #0
 8001c74:	f104 0a1a 	add.w	sl, r4, #26
 8001c78:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8001c7a:	425b      	negs	r3, r3
 8001c7c:	454b      	cmp	r3, r9
 8001c7e:	dc01      	bgt.n	8001c84 <_printf_float+0x2c0>
 8001c80:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8001c82:	e792      	b.n	8001baa <_printf_float+0x1e6>
 8001c84:	2301      	movs	r3, #1
 8001c86:	4652      	mov	r2, sl
 8001c88:	4631      	mov	r1, r6
 8001c8a:	4628      	mov	r0, r5
 8001c8c:	47b8      	blx	r7
 8001c8e:	3001      	adds	r0, #1
 8001c90:	f43f aef7 	beq.w	8001a82 <_printf_float+0xbe>
 8001c94:	f109 0901 	add.w	r9, r9, #1
 8001c98:	e7ee      	b.n	8001c78 <_printf_float+0x2b4>
 8001c9a:	bf00      	nop
 8001c9c:	7fefffff 	.word	0x7fefffff
 8001ca0:	08004924 	.word	0x08004924
 8001ca4:	08004928 	.word	0x08004928
 8001ca8:	0800492c 	.word	0x0800492c
 8001cac:	08004930 	.word	0x08004930
 8001cb0:	08004934 	.word	0x08004934
 8001cb4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8001cb6:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8001cb8:	429a      	cmp	r2, r3
 8001cba:	bfa8      	it	ge
 8001cbc:	461a      	movge	r2, r3
 8001cbe:	2a00      	cmp	r2, #0
 8001cc0:	4691      	mov	r9, r2
 8001cc2:	dc37      	bgt.n	8001d34 <_printf_float+0x370>
 8001cc4:	f04f 0b00 	mov.w	fp, #0
 8001cc8:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8001ccc:	f104 021a 	add.w	r2, r4, #26
 8001cd0:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8001cd2:	9305      	str	r3, [sp, #20]
 8001cd4:	eba3 0309 	sub.w	r3, r3, r9
 8001cd8:	455b      	cmp	r3, fp
 8001cda:	dc33      	bgt.n	8001d44 <_printf_float+0x380>
 8001cdc:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8001ce0:	429a      	cmp	r2, r3
 8001ce2:	db3b      	blt.n	8001d5c <_printf_float+0x398>
 8001ce4:	6823      	ldr	r3, [r4, #0]
 8001ce6:	07da      	lsls	r2, r3, #31
 8001ce8:	d438      	bmi.n	8001d5c <_printf_float+0x398>
 8001cea:	e9dd 3209 	ldrd	r3, r2, [sp, #36]	; 0x24
 8001cee:	eba2 0903 	sub.w	r9, r2, r3
 8001cf2:	9b05      	ldr	r3, [sp, #20]
 8001cf4:	1ad2      	subs	r2, r2, r3
 8001cf6:	4591      	cmp	r9, r2
 8001cf8:	bfa8      	it	ge
 8001cfa:	4691      	movge	r9, r2
 8001cfc:	f1b9 0f00 	cmp.w	r9, #0
 8001d00:	dc35      	bgt.n	8001d6e <_printf_float+0x3aa>
 8001d02:	f04f 0800 	mov.w	r8, #0
 8001d06:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8001d0a:	f104 0a1a 	add.w	sl, r4, #26
 8001d0e:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8001d12:	1a9b      	subs	r3, r3, r2
 8001d14:	eba3 0309 	sub.w	r3, r3, r9
 8001d18:	4543      	cmp	r3, r8
 8001d1a:	f77f af79 	ble.w	8001c10 <_printf_float+0x24c>
 8001d1e:	2301      	movs	r3, #1
 8001d20:	4652      	mov	r2, sl
 8001d22:	4631      	mov	r1, r6
 8001d24:	4628      	mov	r0, r5
 8001d26:	47b8      	blx	r7
 8001d28:	3001      	adds	r0, #1
 8001d2a:	f43f aeaa 	beq.w	8001a82 <_printf_float+0xbe>
 8001d2e:	f108 0801 	add.w	r8, r8, #1
 8001d32:	e7ec      	b.n	8001d0e <_printf_float+0x34a>
 8001d34:	4613      	mov	r3, r2
 8001d36:	4631      	mov	r1, r6
 8001d38:	4642      	mov	r2, r8
 8001d3a:	4628      	mov	r0, r5
 8001d3c:	47b8      	blx	r7
 8001d3e:	3001      	adds	r0, #1
 8001d40:	d1c0      	bne.n	8001cc4 <_printf_float+0x300>
 8001d42:	e69e      	b.n	8001a82 <_printf_float+0xbe>
 8001d44:	2301      	movs	r3, #1
 8001d46:	4631      	mov	r1, r6
 8001d48:	4628      	mov	r0, r5
 8001d4a:	9205      	str	r2, [sp, #20]
 8001d4c:	47b8      	blx	r7
 8001d4e:	3001      	adds	r0, #1
 8001d50:	f43f ae97 	beq.w	8001a82 <_printf_float+0xbe>
 8001d54:	9a05      	ldr	r2, [sp, #20]
 8001d56:	f10b 0b01 	add.w	fp, fp, #1
 8001d5a:	e7b9      	b.n	8001cd0 <_printf_float+0x30c>
 8001d5c:	ee18 3a10 	vmov	r3, s16
 8001d60:	4652      	mov	r2, sl
 8001d62:	4631      	mov	r1, r6
 8001d64:	4628      	mov	r0, r5
 8001d66:	47b8      	blx	r7
 8001d68:	3001      	adds	r0, #1
 8001d6a:	d1be      	bne.n	8001cea <_printf_float+0x326>
 8001d6c:	e689      	b.n	8001a82 <_printf_float+0xbe>
 8001d6e:	9a05      	ldr	r2, [sp, #20]
 8001d70:	464b      	mov	r3, r9
 8001d72:	4442      	add	r2, r8
 8001d74:	4631      	mov	r1, r6
 8001d76:	4628      	mov	r0, r5
 8001d78:	47b8      	blx	r7
 8001d7a:	3001      	adds	r0, #1
 8001d7c:	d1c1      	bne.n	8001d02 <_printf_float+0x33e>
 8001d7e:	e680      	b.n	8001a82 <_printf_float+0xbe>
 8001d80:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8001d82:	2a01      	cmp	r2, #1
 8001d84:	dc01      	bgt.n	8001d8a <_printf_float+0x3c6>
 8001d86:	07db      	lsls	r3, r3, #31
 8001d88:	d53a      	bpl.n	8001e00 <_printf_float+0x43c>
 8001d8a:	2301      	movs	r3, #1
 8001d8c:	4642      	mov	r2, r8
 8001d8e:	4631      	mov	r1, r6
 8001d90:	4628      	mov	r0, r5
 8001d92:	47b8      	blx	r7
 8001d94:	3001      	adds	r0, #1
 8001d96:	f43f ae74 	beq.w	8001a82 <_printf_float+0xbe>
 8001d9a:	ee18 3a10 	vmov	r3, s16
 8001d9e:	4652      	mov	r2, sl
 8001da0:	4631      	mov	r1, r6
 8001da2:	4628      	mov	r0, r5
 8001da4:	47b8      	blx	r7
 8001da6:	3001      	adds	r0, #1
 8001da8:	f43f ae6b 	beq.w	8001a82 <_printf_float+0xbe>
 8001dac:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 8001db0:	2200      	movs	r2, #0
 8001db2:	2300      	movs	r3, #0
 8001db4:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
 8001db8:	f7fe fe86 	bl	8000ac8 <__aeabi_dcmpeq>
 8001dbc:	b9d8      	cbnz	r0, 8001df6 <_printf_float+0x432>
 8001dbe:	f10a 33ff 	add.w	r3, sl, #4294967295
 8001dc2:	f108 0201 	add.w	r2, r8, #1
 8001dc6:	4631      	mov	r1, r6
 8001dc8:	4628      	mov	r0, r5
 8001dca:	47b8      	blx	r7
 8001dcc:	3001      	adds	r0, #1
 8001dce:	d10e      	bne.n	8001dee <_printf_float+0x42a>
 8001dd0:	e657      	b.n	8001a82 <_printf_float+0xbe>
 8001dd2:	2301      	movs	r3, #1
 8001dd4:	4652      	mov	r2, sl
 8001dd6:	4631      	mov	r1, r6
 8001dd8:	4628      	mov	r0, r5
 8001dda:	47b8      	blx	r7
 8001ddc:	3001      	adds	r0, #1
 8001dde:	f43f ae50 	beq.w	8001a82 <_printf_float+0xbe>
 8001de2:	f108 0801 	add.w	r8, r8, #1
 8001de6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8001de8:	3b01      	subs	r3, #1
 8001dea:	4543      	cmp	r3, r8
 8001dec:	dcf1      	bgt.n	8001dd2 <_printf_float+0x40e>
 8001dee:	464b      	mov	r3, r9
 8001df0:	f104 0250 	add.w	r2, r4, #80	; 0x50
 8001df4:	e6da      	b.n	8001bac <_printf_float+0x1e8>
 8001df6:	f04f 0800 	mov.w	r8, #0
 8001dfa:	f104 0a1a 	add.w	sl, r4, #26
 8001dfe:	e7f2      	b.n	8001de6 <_printf_float+0x422>
 8001e00:	2301      	movs	r3, #1
 8001e02:	4642      	mov	r2, r8
 8001e04:	e7df      	b.n	8001dc6 <_printf_float+0x402>
 8001e06:	2301      	movs	r3, #1
 8001e08:	464a      	mov	r2, r9
 8001e0a:	4631      	mov	r1, r6
 8001e0c:	4628      	mov	r0, r5
 8001e0e:	47b8      	blx	r7
 8001e10:	3001      	adds	r0, #1
 8001e12:	f43f ae36 	beq.w	8001a82 <_printf_float+0xbe>
 8001e16:	f108 0801 	add.w	r8, r8, #1
 8001e1a:	68e3      	ldr	r3, [r4, #12]
 8001e1c:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8001e1e:	1a5b      	subs	r3, r3, r1
 8001e20:	4543      	cmp	r3, r8
 8001e22:	dcf0      	bgt.n	8001e06 <_printf_float+0x442>
 8001e24:	e6f8      	b.n	8001c18 <_printf_float+0x254>
 8001e26:	f04f 0800 	mov.w	r8, #0
 8001e2a:	f104 0919 	add.w	r9, r4, #25
 8001e2e:	e7f4      	b.n	8001e1a <_printf_float+0x456>

08001e30 <_printf_common>:
 8001e30:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001e34:	4616      	mov	r6, r2
 8001e36:	4699      	mov	r9, r3
 8001e38:	688a      	ldr	r2, [r1, #8]
 8001e3a:	690b      	ldr	r3, [r1, #16]
 8001e3c:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8001e40:	4293      	cmp	r3, r2
 8001e42:	bfb8      	it	lt
 8001e44:	4613      	movlt	r3, r2
 8001e46:	6033      	str	r3, [r6, #0]
 8001e48:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8001e4c:	4607      	mov	r7, r0
 8001e4e:	460c      	mov	r4, r1
 8001e50:	b10a      	cbz	r2, 8001e56 <_printf_common+0x26>
 8001e52:	3301      	adds	r3, #1
 8001e54:	6033      	str	r3, [r6, #0]
 8001e56:	6823      	ldr	r3, [r4, #0]
 8001e58:	0699      	lsls	r1, r3, #26
 8001e5a:	bf42      	ittt	mi
 8001e5c:	6833      	ldrmi	r3, [r6, #0]
 8001e5e:	3302      	addmi	r3, #2
 8001e60:	6033      	strmi	r3, [r6, #0]
 8001e62:	6825      	ldr	r5, [r4, #0]
 8001e64:	f015 0506 	ands.w	r5, r5, #6
 8001e68:	d106      	bne.n	8001e78 <_printf_common+0x48>
 8001e6a:	f104 0a19 	add.w	sl, r4, #25
 8001e6e:	68e3      	ldr	r3, [r4, #12]
 8001e70:	6832      	ldr	r2, [r6, #0]
 8001e72:	1a9b      	subs	r3, r3, r2
 8001e74:	42ab      	cmp	r3, r5
 8001e76:	dc26      	bgt.n	8001ec6 <_printf_common+0x96>
 8001e78:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8001e7c:	1e13      	subs	r3, r2, #0
 8001e7e:	6822      	ldr	r2, [r4, #0]
 8001e80:	bf18      	it	ne
 8001e82:	2301      	movne	r3, #1
 8001e84:	0692      	lsls	r2, r2, #26
 8001e86:	d42b      	bmi.n	8001ee0 <_printf_common+0xb0>
 8001e88:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8001e8c:	4649      	mov	r1, r9
 8001e8e:	4638      	mov	r0, r7
 8001e90:	47c0      	blx	r8
 8001e92:	3001      	adds	r0, #1
 8001e94:	d01e      	beq.n	8001ed4 <_printf_common+0xa4>
 8001e96:	6823      	ldr	r3, [r4, #0]
 8001e98:	6922      	ldr	r2, [r4, #16]
 8001e9a:	f003 0306 	and.w	r3, r3, #6
 8001e9e:	2b04      	cmp	r3, #4
 8001ea0:	bf02      	ittt	eq
 8001ea2:	68e5      	ldreq	r5, [r4, #12]
 8001ea4:	6833      	ldreq	r3, [r6, #0]
 8001ea6:	1aed      	subeq	r5, r5, r3
 8001ea8:	68a3      	ldr	r3, [r4, #8]
 8001eaa:	bf0c      	ite	eq
 8001eac:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8001eb0:	2500      	movne	r5, #0
 8001eb2:	4293      	cmp	r3, r2
 8001eb4:	bfc4      	itt	gt
 8001eb6:	1a9b      	subgt	r3, r3, r2
 8001eb8:	18ed      	addgt	r5, r5, r3
 8001eba:	2600      	movs	r6, #0
 8001ebc:	341a      	adds	r4, #26
 8001ebe:	42b5      	cmp	r5, r6
 8001ec0:	d11a      	bne.n	8001ef8 <_printf_common+0xc8>
 8001ec2:	2000      	movs	r0, #0
 8001ec4:	e008      	b.n	8001ed8 <_printf_common+0xa8>
 8001ec6:	2301      	movs	r3, #1
 8001ec8:	4652      	mov	r2, sl
 8001eca:	4649      	mov	r1, r9
 8001ecc:	4638      	mov	r0, r7
 8001ece:	47c0      	blx	r8
 8001ed0:	3001      	adds	r0, #1
 8001ed2:	d103      	bne.n	8001edc <_printf_common+0xac>
 8001ed4:	f04f 30ff 	mov.w	r0, #4294967295
 8001ed8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001edc:	3501      	adds	r5, #1
 8001ede:	e7c6      	b.n	8001e6e <_printf_common+0x3e>
 8001ee0:	18e1      	adds	r1, r4, r3
 8001ee2:	1c5a      	adds	r2, r3, #1
 8001ee4:	2030      	movs	r0, #48	; 0x30
 8001ee6:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8001eea:	4422      	add	r2, r4
 8001eec:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8001ef0:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8001ef4:	3302      	adds	r3, #2
 8001ef6:	e7c7      	b.n	8001e88 <_printf_common+0x58>
 8001ef8:	2301      	movs	r3, #1
 8001efa:	4622      	mov	r2, r4
 8001efc:	4649      	mov	r1, r9
 8001efe:	4638      	mov	r0, r7
 8001f00:	47c0      	blx	r8
 8001f02:	3001      	adds	r0, #1
 8001f04:	d0e6      	beq.n	8001ed4 <_printf_common+0xa4>
 8001f06:	3601      	adds	r6, #1
 8001f08:	e7d9      	b.n	8001ebe <_printf_common+0x8e>
	...

08001f0c <_printf_i>:
 8001f0c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8001f10:	7e0f      	ldrb	r7, [r1, #24]
 8001f12:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8001f14:	2f78      	cmp	r7, #120	; 0x78
 8001f16:	4691      	mov	r9, r2
 8001f18:	4680      	mov	r8, r0
 8001f1a:	460c      	mov	r4, r1
 8001f1c:	469a      	mov	sl, r3
 8001f1e:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8001f22:	d807      	bhi.n	8001f34 <_printf_i+0x28>
 8001f24:	2f62      	cmp	r7, #98	; 0x62
 8001f26:	d80a      	bhi.n	8001f3e <_printf_i+0x32>
 8001f28:	2f00      	cmp	r7, #0
 8001f2a:	f000 80d4 	beq.w	80020d6 <_printf_i+0x1ca>
 8001f2e:	2f58      	cmp	r7, #88	; 0x58
 8001f30:	f000 80c0 	beq.w	80020b4 <_printf_i+0x1a8>
 8001f34:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8001f38:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8001f3c:	e03a      	b.n	8001fb4 <_printf_i+0xa8>
 8001f3e:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8001f42:	2b15      	cmp	r3, #21
 8001f44:	d8f6      	bhi.n	8001f34 <_printf_i+0x28>
 8001f46:	a101      	add	r1, pc, #4	; (adr r1, 8001f4c <_printf_i+0x40>)
 8001f48:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8001f4c:	08001fa5 	.word	0x08001fa5
 8001f50:	08001fb9 	.word	0x08001fb9
 8001f54:	08001f35 	.word	0x08001f35
 8001f58:	08001f35 	.word	0x08001f35
 8001f5c:	08001f35 	.word	0x08001f35
 8001f60:	08001f35 	.word	0x08001f35
 8001f64:	08001fb9 	.word	0x08001fb9
 8001f68:	08001f35 	.word	0x08001f35
 8001f6c:	08001f35 	.word	0x08001f35
 8001f70:	08001f35 	.word	0x08001f35
 8001f74:	08001f35 	.word	0x08001f35
 8001f78:	080020bd 	.word	0x080020bd
 8001f7c:	08001fe5 	.word	0x08001fe5
 8001f80:	08002077 	.word	0x08002077
 8001f84:	08001f35 	.word	0x08001f35
 8001f88:	08001f35 	.word	0x08001f35
 8001f8c:	080020df 	.word	0x080020df
 8001f90:	08001f35 	.word	0x08001f35
 8001f94:	08001fe5 	.word	0x08001fe5
 8001f98:	08001f35 	.word	0x08001f35
 8001f9c:	08001f35 	.word	0x08001f35
 8001fa0:	0800207f 	.word	0x0800207f
 8001fa4:	682b      	ldr	r3, [r5, #0]
 8001fa6:	1d1a      	adds	r2, r3, #4
 8001fa8:	681b      	ldr	r3, [r3, #0]
 8001faa:	602a      	str	r2, [r5, #0]
 8001fac:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8001fb0:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8001fb4:	2301      	movs	r3, #1
 8001fb6:	e09f      	b.n	80020f8 <_printf_i+0x1ec>
 8001fb8:	6820      	ldr	r0, [r4, #0]
 8001fba:	682b      	ldr	r3, [r5, #0]
 8001fbc:	0607      	lsls	r7, r0, #24
 8001fbe:	f103 0104 	add.w	r1, r3, #4
 8001fc2:	6029      	str	r1, [r5, #0]
 8001fc4:	d501      	bpl.n	8001fca <_printf_i+0xbe>
 8001fc6:	681e      	ldr	r6, [r3, #0]
 8001fc8:	e003      	b.n	8001fd2 <_printf_i+0xc6>
 8001fca:	0646      	lsls	r6, r0, #25
 8001fcc:	d5fb      	bpl.n	8001fc6 <_printf_i+0xba>
 8001fce:	f9b3 6000 	ldrsh.w	r6, [r3]
 8001fd2:	2e00      	cmp	r6, #0
 8001fd4:	da03      	bge.n	8001fde <_printf_i+0xd2>
 8001fd6:	232d      	movs	r3, #45	; 0x2d
 8001fd8:	4276      	negs	r6, r6
 8001fda:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8001fde:	485a      	ldr	r0, [pc, #360]	; (8002148 <_printf_i+0x23c>)
 8001fe0:	230a      	movs	r3, #10
 8001fe2:	e012      	b.n	800200a <_printf_i+0xfe>
 8001fe4:	682b      	ldr	r3, [r5, #0]
 8001fe6:	6820      	ldr	r0, [r4, #0]
 8001fe8:	1d19      	adds	r1, r3, #4
 8001fea:	6029      	str	r1, [r5, #0]
 8001fec:	0605      	lsls	r5, r0, #24
 8001fee:	d501      	bpl.n	8001ff4 <_printf_i+0xe8>
 8001ff0:	681e      	ldr	r6, [r3, #0]
 8001ff2:	e002      	b.n	8001ffa <_printf_i+0xee>
 8001ff4:	0641      	lsls	r1, r0, #25
 8001ff6:	d5fb      	bpl.n	8001ff0 <_printf_i+0xe4>
 8001ff8:	881e      	ldrh	r6, [r3, #0]
 8001ffa:	4853      	ldr	r0, [pc, #332]	; (8002148 <_printf_i+0x23c>)
 8001ffc:	2f6f      	cmp	r7, #111	; 0x6f
 8001ffe:	bf0c      	ite	eq
 8002000:	2308      	moveq	r3, #8
 8002002:	230a      	movne	r3, #10
 8002004:	2100      	movs	r1, #0
 8002006:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 800200a:	6865      	ldr	r5, [r4, #4]
 800200c:	60a5      	str	r5, [r4, #8]
 800200e:	2d00      	cmp	r5, #0
 8002010:	bfa2      	ittt	ge
 8002012:	6821      	ldrge	r1, [r4, #0]
 8002014:	f021 0104 	bicge.w	r1, r1, #4
 8002018:	6021      	strge	r1, [r4, #0]
 800201a:	b90e      	cbnz	r6, 8002020 <_printf_i+0x114>
 800201c:	2d00      	cmp	r5, #0
 800201e:	d04b      	beq.n	80020b8 <_printf_i+0x1ac>
 8002020:	4615      	mov	r5, r2
 8002022:	fbb6 f1f3 	udiv	r1, r6, r3
 8002026:	fb03 6711 	mls	r7, r3, r1, r6
 800202a:	5dc7      	ldrb	r7, [r0, r7]
 800202c:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8002030:	4637      	mov	r7, r6
 8002032:	42bb      	cmp	r3, r7
 8002034:	460e      	mov	r6, r1
 8002036:	d9f4      	bls.n	8002022 <_printf_i+0x116>
 8002038:	2b08      	cmp	r3, #8
 800203a:	d10b      	bne.n	8002054 <_printf_i+0x148>
 800203c:	6823      	ldr	r3, [r4, #0]
 800203e:	07de      	lsls	r6, r3, #31
 8002040:	d508      	bpl.n	8002054 <_printf_i+0x148>
 8002042:	6923      	ldr	r3, [r4, #16]
 8002044:	6861      	ldr	r1, [r4, #4]
 8002046:	4299      	cmp	r1, r3
 8002048:	bfde      	ittt	le
 800204a:	2330      	movle	r3, #48	; 0x30
 800204c:	f805 3c01 	strble.w	r3, [r5, #-1]
 8002050:	f105 35ff 	addle.w	r5, r5, #4294967295
 8002054:	1b52      	subs	r2, r2, r5
 8002056:	6122      	str	r2, [r4, #16]
 8002058:	f8cd a000 	str.w	sl, [sp]
 800205c:	464b      	mov	r3, r9
 800205e:	aa03      	add	r2, sp, #12
 8002060:	4621      	mov	r1, r4
 8002062:	4640      	mov	r0, r8
 8002064:	f7ff fee4 	bl	8001e30 <_printf_common>
 8002068:	3001      	adds	r0, #1
 800206a:	d14a      	bne.n	8002102 <_printf_i+0x1f6>
 800206c:	f04f 30ff 	mov.w	r0, #4294967295
 8002070:	b004      	add	sp, #16
 8002072:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8002076:	6823      	ldr	r3, [r4, #0]
 8002078:	f043 0320 	orr.w	r3, r3, #32
 800207c:	6023      	str	r3, [r4, #0]
 800207e:	4833      	ldr	r0, [pc, #204]	; (800214c <_printf_i+0x240>)
 8002080:	2778      	movs	r7, #120	; 0x78
 8002082:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8002086:	6823      	ldr	r3, [r4, #0]
 8002088:	6829      	ldr	r1, [r5, #0]
 800208a:	061f      	lsls	r7, r3, #24
 800208c:	f851 6b04 	ldr.w	r6, [r1], #4
 8002090:	d402      	bmi.n	8002098 <_printf_i+0x18c>
 8002092:	065f      	lsls	r7, r3, #25
 8002094:	bf48      	it	mi
 8002096:	b2b6      	uxthmi	r6, r6
 8002098:	07df      	lsls	r7, r3, #31
 800209a:	bf48      	it	mi
 800209c:	f043 0320 	orrmi.w	r3, r3, #32
 80020a0:	6029      	str	r1, [r5, #0]
 80020a2:	bf48      	it	mi
 80020a4:	6023      	strmi	r3, [r4, #0]
 80020a6:	b91e      	cbnz	r6, 80020b0 <_printf_i+0x1a4>
 80020a8:	6823      	ldr	r3, [r4, #0]
 80020aa:	f023 0320 	bic.w	r3, r3, #32
 80020ae:	6023      	str	r3, [r4, #0]
 80020b0:	2310      	movs	r3, #16
 80020b2:	e7a7      	b.n	8002004 <_printf_i+0xf8>
 80020b4:	4824      	ldr	r0, [pc, #144]	; (8002148 <_printf_i+0x23c>)
 80020b6:	e7e4      	b.n	8002082 <_printf_i+0x176>
 80020b8:	4615      	mov	r5, r2
 80020ba:	e7bd      	b.n	8002038 <_printf_i+0x12c>
 80020bc:	682b      	ldr	r3, [r5, #0]
 80020be:	6826      	ldr	r6, [r4, #0]
 80020c0:	6961      	ldr	r1, [r4, #20]
 80020c2:	1d18      	adds	r0, r3, #4
 80020c4:	6028      	str	r0, [r5, #0]
 80020c6:	0635      	lsls	r5, r6, #24
 80020c8:	681b      	ldr	r3, [r3, #0]
 80020ca:	d501      	bpl.n	80020d0 <_printf_i+0x1c4>
 80020cc:	6019      	str	r1, [r3, #0]
 80020ce:	e002      	b.n	80020d6 <_printf_i+0x1ca>
 80020d0:	0670      	lsls	r0, r6, #25
 80020d2:	d5fb      	bpl.n	80020cc <_printf_i+0x1c0>
 80020d4:	8019      	strh	r1, [r3, #0]
 80020d6:	2300      	movs	r3, #0
 80020d8:	6123      	str	r3, [r4, #16]
 80020da:	4615      	mov	r5, r2
 80020dc:	e7bc      	b.n	8002058 <_printf_i+0x14c>
 80020de:	682b      	ldr	r3, [r5, #0]
 80020e0:	1d1a      	adds	r2, r3, #4
 80020e2:	602a      	str	r2, [r5, #0]
 80020e4:	681d      	ldr	r5, [r3, #0]
 80020e6:	6862      	ldr	r2, [r4, #4]
 80020e8:	2100      	movs	r1, #0
 80020ea:	4628      	mov	r0, r5
 80020ec:	f7fe f870 	bl	80001d0 <memchr>
 80020f0:	b108      	cbz	r0, 80020f6 <_printf_i+0x1ea>
 80020f2:	1b40      	subs	r0, r0, r5
 80020f4:	6060      	str	r0, [r4, #4]
 80020f6:	6863      	ldr	r3, [r4, #4]
 80020f8:	6123      	str	r3, [r4, #16]
 80020fa:	2300      	movs	r3, #0
 80020fc:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8002100:	e7aa      	b.n	8002058 <_printf_i+0x14c>
 8002102:	6923      	ldr	r3, [r4, #16]
 8002104:	462a      	mov	r2, r5
 8002106:	4649      	mov	r1, r9
 8002108:	4640      	mov	r0, r8
 800210a:	47d0      	blx	sl
 800210c:	3001      	adds	r0, #1
 800210e:	d0ad      	beq.n	800206c <_printf_i+0x160>
 8002110:	6823      	ldr	r3, [r4, #0]
 8002112:	079b      	lsls	r3, r3, #30
 8002114:	d413      	bmi.n	800213e <_printf_i+0x232>
 8002116:	68e0      	ldr	r0, [r4, #12]
 8002118:	9b03      	ldr	r3, [sp, #12]
 800211a:	4298      	cmp	r0, r3
 800211c:	bfb8      	it	lt
 800211e:	4618      	movlt	r0, r3
 8002120:	e7a6      	b.n	8002070 <_printf_i+0x164>
 8002122:	2301      	movs	r3, #1
 8002124:	4632      	mov	r2, r6
 8002126:	4649      	mov	r1, r9
 8002128:	4640      	mov	r0, r8
 800212a:	47d0      	blx	sl
 800212c:	3001      	adds	r0, #1
 800212e:	d09d      	beq.n	800206c <_printf_i+0x160>
 8002130:	3501      	adds	r5, #1
 8002132:	68e3      	ldr	r3, [r4, #12]
 8002134:	9903      	ldr	r1, [sp, #12]
 8002136:	1a5b      	subs	r3, r3, r1
 8002138:	42ab      	cmp	r3, r5
 800213a:	dcf2      	bgt.n	8002122 <_printf_i+0x216>
 800213c:	e7eb      	b.n	8002116 <_printf_i+0x20a>
 800213e:	2500      	movs	r5, #0
 8002140:	f104 0619 	add.w	r6, r4, #25
 8002144:	e7f5      	b.n	8002132 <_printf_i+0x226>
 8002146:	bf00      	nop
 8002148:	08004936 	.word	0x08004936
 800214c:	08004947 	.word	0x08004947

08002150 <std>:
 8002150:	2300      	movs	r3, #0
 8002152:	b510      	push	{r4, lr}
 8002154:	4604      	mov	r4, r0
 8002156:	e9c0 3300 	strd	r3, r3, [r0]
 800215a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800215e:	6083      	str	r3, [r0, #8]
 8002160:	8181      	strh	r1, [r0, #12]
 8002162:	6643      	str	r3, [r0, #100]	; 0x64
 8002164:	81c2      	strh	r2, [r0, #14]
 8002166:	6183      	str	r3, [r0, #24]
 8002168:	4619      	mov	r1, r3
 800216a:	2208      	movs	r2, #8
 800216c:	305c      	adds	r0, #92	; 0x5c
 800216e:	f000 f9f7 	bl	8002560 <memset>
 8002172:	4b0d      	ldr	r3, [pc, #52]	; (80021a8 <std+0x58>)
 8002174:	6263      	str	r3, [r4, #36]	; 0x24
 8002176:	4b0d      	ldr	r3, [pc, #52]	; (80021ac <std+0x5c>)
 8002178:	62a3      	str	r3, [r4, #40]	; 0x28
 800217a:	4b0d      	ldr	r3, [pc, #52]	; (80021b0 <std+0x60>)
 800217c:	62e3      	str	r3, [r4, #44]	; 0x2c
 800217e:	4b0d      	ldr	r3, [pc, #52]	; (80021b4 <std+0x64>)
 8002180:	6323      	str	r3, [r4, #48]	; 0x30
 8002182:	4b0d      	ldr	r3, [pc, #52]	; (80021b8 <std+0x68>)
 8002184:	6224      	str	r4, [r4, #32]
 8002186:	429c      	cmp	r4, r3
 8002188:	d006      	beq.n	8002198 <std+0x48>
 800218a:	f103 0268 	add.w	r2, r3, #104	; 0x68
 800218e:	4294      	cmp	r4, r2
 8002190:	d002      	beq.n	8002198 <std+0x48>
 8002192:	33d0      	adds	r3, #208	; 0xd0
 8002194:	429c      	cmp	r4, r3
 8002196:	d105      	bne.n	80021a4 <std+0x54>
 8002198:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800219c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80021a0:	f000 ba54 	b.w	800264c <__retarget_lock_init_recursive>
 80021a4:	bd10      	pop	{r4, pc}
 80021a6:	bf00      	nop
 80021a8:	080023b1 	.word	0x080023b1
 80021ac:	080023d3 	.word	0x080023d3
 80021b0:	0800240b 	.word	0x0800240b
 80021b4:	0800242f 	.word	0x0800242f
 80021b8:	20000238 	.word	0x20000238

080021bc <stdio_exit_handler>:
 80021bc:	4a02      	ldr	r2, [pc, #8]	; (80021c8 <stdio_exit_handler+0xc>)
 80021be:	4903      	ldr	r1, [pc, #12]	; (80021cc <stdio_exit_handler+0x10>)
 80021c0:	4803      	ldr	r0, [pc, #12]	; (80021d0 <stdio_exit_handler+0x14>)
 80021c2:	f000 b869 	b.w	8002298 <_fwalk_sglue>
 80021c6:	bf00      	nop
 80021c8:	20000014 	.word	0x20000014
 80021cc:	08003fd9 	.word	0x08003fd9
 80021d0:	20000020 	.word	0x20000020

080021d4 <cleanup_stdio>:
 80021d4:	6841      	ldr	r1, [r0, #4]
 80021d6:	4b0c      	ldr	r3, [pc, #48]	; (8002208 <cleanup_stdio+0x34>)
 80021d8:	4299      	cmp	r1, r3
 80021da:	b510      	push	{r4, lr}
 80021dc:	4604      	mov	r4, r0
 80021de:	d001      	beq.n	80021e4 <cleanup_stdio+0x10>
 80021e0:	f001 fefa 	bl	8003fd8 <_fflush_r>
 80021e4:	68a1      	ldr	r1, [r4, #8]
 80021e6:	4b09      	ldr	r3, [pc, #36]	; (800220c <cleanup_stdio+0x38>)
 80021e8:	4299      	cmp	r1, r3
 80021ea:	d002      	beq.n	80021f2 <cleanup_stdio+0x1e>
 80021ec:	4620      	mov	r0, r4
 80021ee:	f001 fef3 	bl	8003fd8 <_fflush_r>
 80021f2:	68e1      	ldr	r1, [r4, #12]
 80021f4:	4b06      	ldr	r3, [pc, #24]	; (8002210 <cleanup_stdio+0x3c>)
 80021f6:	4299      	cmp	r1, r3
 80021f8:	d004      	beq.n	8002204 <cleanup_stdio+0x30>
 80021fa:	4620      	mov	r0, r4
 80021fc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002200:	f001 beea 	b.w	8003fd8 <_fflush_r>
 8002204:	bd10      	pop	{r4, pc}
 8002206:	bf00      	nop
 8002208:	20000238 	.word	0x20000238
 800220c:	200002a0 	.word	0x200002a0
 8002210:	20000308 	.word	0x20000308

08002214 <global_stdio_init.part.0>:
 8002214:	b510      	push	{r4, lr}
 8002216:	4b0b      	ldr	r3, [pc, #44]	; (8002244 <global_stdio_init.part.0+0x30>)
 8002218:	4c0b      	ldr	r4, [pc, #44]	; (8002248 <global_stdio_init.part.0+0x34>)
 800221a:	4a0c      	ldr	r2, [pc, #48]	; (800224c <global_stdio_init.part.0+0x38>)
 800221c:	601a      	str	r2, [r3, #0]
 800221e:	4620      	mov	r0, r4
 8002220:	2200      	movs	r2, #0
 8002222:	2104      	movs	r1, #4
 8002224:	f7ff ff94 	bl	8002150 <std>
 8002228:	f104 0068 	add.w	r0, r4, #104	; 0x68
 800222c:	2201      	movs	r2, #1
 800222e:	2109      	movs	r1, #9
 8002230:	f7ff ff8e 	bl	8002150 <std>
 8002234:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 8002238:	2202      	movs	r2, #2
 800223a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800223e:	2112      	movs	r1, #18
 8002240:	f7ff bf86 	b.w	8002150 <std>
 8002244:	20000370 	.word	0x20000370
 8002248:	20000238 	.word	0x20000238
 800224c:	080021bd 	.word	0x080021bd

08002250 <__sfp_lock_acquire>:
 8002250:	4801      	ldr	r0, [pc, #4]	; (8002258 <__sfp_lock_acquire+0x8>)
 8002252:	f000 b9fc 	b.w	800264e <__retarget_lock_acquire_recursive>
 8002256:	bf00      	nop
 8002258:	20000379 	.word	0x20000379

0800225c <__sfp_lock_release>:
 800225c:	4801      	ldr	r0, [pc, #4]	; (8002264 <__sfp_lock_release+0x8>)
 800225e:	f000 b9f7 	b.w	8002650 <__retarget_lock_release_recursive>
 8002262:	bf00      	nop
 8002264:	20000379 	.word	0x20000379

08002268 <__sinit>:
 8002268:	b510      	push	{r4, lr}
 800226a:	4604      	mov	r4, r0
 800226c:	f7ff fff0 	bl	8002250 <__sfp_lock_acquire>
 8002270:	6a23      	ldr	r3, [r4, #32]
 8002272:	b11b      	cbz	r3, 800227c <__sinit+0x14>
 8002274:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002278:	f7ff bff0 	b.w	800225c <__sfp_lock_release>
 800227c:	4b04      	ldr	r3, [pc, #16]	; (8002290 <__sinit+0x28>)
 800227e:	6223      	str	r3, [r4, #32]
 8002280:	4b04      	ldr	r3, [pc, #16]	; (8002294 <__sinit+0x2c>)
 8002282:	681b      	ldr	r3, [r3, #0]
 8002284:	2b00      	cmp	r3, #0
 8002286:	d1f5      	bne.n	8002274 <__sinit+0xc>
 8002288:	f7ff ffc4 	bl	8002214 <global_stdio_init.part.0>
 800228c:	e7f2      	b.n	8002274 <__sinit+0xc>
 800228e:	bf00      	nop
 8002290:	080021d5 	.word	0x080021d5
 8002294:	20000370 	.word	0x20000370

08002298 <_fwalk_sglue>:
 8002298:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800229c:	4607      	mov	r7, r0
 800229e:	4688      	mov	r8, r1
 80022a0:	4614      	mov	r4, r2
 80022a2:	2600      	movs	r6, #0
 80022a4:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80022a8:	f1b9 0901 	subs.w	r9, r9, #1
 80022ac:	d505      	bpl.n	80022ba <_fwalk_sglue+0x22>
 80022ae:	6824      	ldr	r4, [r4, #0]
 80022b0:	2c00      	cmp	r4, #0
 80022b2:	d1f7      	bne.n	80022a4 <_fwalk_sglue+0xc>
 80022b4:	4630      	mov	r0, r6
 80022b6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80022ba:	89ab      	ldrh	r3, [r5, #12]
 80022bc:	2b01      	cmp	r3, #1
 80022be:	d907      	bls.n	80022d0 <_fwalk_sglue+0x38>
 80022c0:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80022c4:	3301      	adds	r3, #1
 80022c6:	d003      	beq.n	80022d0 <_fwalk_sglue+0x38>
 80022c8:	4629      	mov	r1, r5
 80022ca:	4638      	mov	r0, r7
 80022cc:	47c0      	blx	r8
 80022ce:	4306      	orrs	r6, r0
 80022d0:	3568      	adds	r5, #104	; 0x68
 80022d2:	e7e9      	b.n	80022a8 <_fwalk_sglue+0x10>

080022d4 <iprintf>:
 80022d4:	b40f      	push	{r0, r1, r2, r3}
 80022d6:	b507      	push	{r0, r1, r2, lr}
 80022d8:	4906      	ldr	r1, [pc, #24]	; (80022f4 <iprintf+0x20>)
 80022da:	ab04      	add	r3, sp, #16
 80022dc:	6808      	ldr	r0, [r1, #0]
 80022de:	f853 2b04 	ldr.w	r2, [r3], #4
 80022e2:	6881      	ldr	r1, [r0, #8]
 80022e4:	9301      	str	r3, [sp, #4]
 80022e6:	f001 fcd7 	bl	8003c98 <_vfiprintf_r>
 80022ea:	b003      	add	sp, #12
 80022ec:	f85d eb04 	ldr.w	lr, [sp], #4
 80022f0:	b004      	add	sp, #16
 80022f2:	4770      	bx	lr
 80022f4:	2000006c 	.word	0x2000006c

080022f8 <_puts_r>:
 80022f8:	6a03      	ldr	r3, [r0, #32]
 80022fa:	b570      	push	{r4, r5, r6, lr}
 80022fc:	6884      	ldr	r4, [r0, #8]
 80022fe:	4605      	mov	r5, r0
 8002300:	460e      	mov	r6, r1
 8002302:	b90b      	cbnz	r3, 8002308 <_puts_r+0x10>
 8002304:	f7ff ffb0 	bl	8002268 <__sinit>
 8002308:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800230a:	07db      	lsls	r3, r3, #31
 800230c:	d405      	bmi.n	800231a <_puts_r+0x22>
 800230e:	89a3      	ldrh	r3, [r4, #12]
 8002310:	0598      	lsls	r0, r3, #22
 8002312:	d402      	bmi.n	800231a <_puts_r+0x22>
 8002314:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8002316:	f000 f99a 	bl	800264e <__retarget_lock_acquire_recursive>
 800231a:	89a3      	ldrh	r3, [r4, #12]
 800231c:	0719      	lsls	r1, r3, #28
 800231e:	d513      	bpl.n	8002348 <_puts_r+0x50>
 8002320:	6923      	ldr	r3, [r4, #16]
 8002322:	b18b      	cbz	r3, 8002348 <_puts_r+0x50>
 8002324:	3e01      	subs	r6, #1
 8002326:	68a3      	ldr	r3, [r4, #8]
 8002328:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 800232c:	3b01      	subs	r3, #1
 800232e:	60a3      	str	r3, [r4, #8]
 8002330:	b9e9      	cbnz	r1, 800236e <_puts_r+0x76>
 8002332:	2b00      	cmp	r3, #0
 8002334:	da2e      	bge.n	8002394 <_puts_r+0x9c>
 8002336:	4622      	mov	r2, r4
 8002338:	210a      	movs	r1, #10
 800233a:	4628      	mov	r0, r5
 800233c:	f000 f87b 	bl	8002436 <__swbuf_r>
 8002340:	3001      	adds	r0, #1
 8002342:	d007      	beq.n	8002354 <_puts_r+0x5c>
 8002344:	250a      	movs	r5, #10
 8002346:	e007      	b.n	8002358 <_puts_r+0x60>
 8002348:	4621      	mov	r1, r4
 800234a:	4628      	mov	r0, r5
 800234c:	f000 f8b0 	bl	80024b0 <__swsetup_r>
 8002350:	2800      	cmp	r0, #0
 8002352:	d0e7      	beq.n	8002324 <_puts_r+0x2c>
 8002354:	f04f 35ff 	mov.w	r5, #4294967295
 8002358:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800235a:	07da      	lsls	r2, r3, #31
 800235c:	d405      	bmi.n	800236a <_puts_r+0x72>
 800235e:	89a3      	ldrh	r3, [r4, #12]
 8002360:	059b      	lsls	r3, r3, #22
 8002362:	d402      	bmi.n	800236a <_puts_r+0x72>
 8002364:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8002366:	f000 f973 	bl	8002650 <__retarget_lock_release_recursive>
 800236a:	4628      	mov	r0, r5
 800236c:	bd70      	pop	{r4, r5, r6, pc}
 800236e:	2b00      	cmp	r3, #0
 8002370:	da04      	bge.n	800237c <_puts_r+0x84>
 8002372:	69a2      	ldr	r2, [r4, #24]
 8002374:	429a      	cmp	r2, r3
 8002376:	dc06      	bgt.n	8002386 <_puts_r+0x8e>
 8002378:	290a      	cmp	r1, #10
 800237a:	d004      	beq.n	8002386 <_puts_r+0x8e>
 800237c:	6823      	ldr	r3, [r4, #0]
 800237e:	1c5a      	adds	r2, r3, #1
 8002380:	6022      	str	r2, [r4, #0]
 8002382:	7019      	strb	r1, [r3, #0]
 8002384:	e7cf      	b.n	8002326 <_puts_r+0x2e>
 8002386:	4622      	mov	r2, r4
 8002388:	4628      	mov	r0, r5
 800238a:	f000 f854 	bl	8002436 <__swbuf_r>
 800238e:	3001      	adds	r0, #1
 8002390:	d1c9      	bne.n	8002326 <_puts_r+0x2e>
 8002392:	e7df      	b.n	8002354 <_puts_r+0x5c>
 8002394:	6823      	ldr	r3, [r4, #0]
 8002396:	250a      	movs	r5, #10
 8002398:	1c5a      	adds	r2, r3, #1
 800239a:	6022      	str	r2, [r4, #0]
 800239c:	701d      	strb	r5, [r3, #0]
 800239e:	e7db      	b.n	8002358 <_puts_r+0x60>

080023a0 <puts>:
 80023a0:	4b02      	ldr	r3, [pc, #8]	; (80023ac <puts+0xc>)
 80023a2:	4601      	mov	r1, r0
 80023a4:	6818      	ldr	r0, [r3, #0]
 80023a6:	f7ff bfa7 	b.w	80022f8 <_puts_r>
 80023aa:	bf00      	nop
 80023ac:	2000006c 	.word	0x2000006c

080023b0 <__sread>:
 80023b0:	b510      	push	{r4, lr}
 80023b2:	460c      	mov	r4, r1
 80023b4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80023b8:	f000 f900 	bl	80025bc <_read_r>
 80023bc:	2800      	cmp	r0, #0
 80023be:	bfab      	itete	ge
 80023c0:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 80023c2:	89a3      	ldrhlt	r3, [r4, #12]
 80023c4:	181b      	addge	r3, r3, r0
 80023c6:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 80023ca:	bfac      	ite	ge
 80023cc:	6563      	strge	r3, [r4, #84]	; 0x54
 80023ce:	81a3      	strhlt	r3, [r4, #12]
 80023d0:	bd10      	pop	{r4, pc}

080023d2 <__swrite>:
 80023d2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80023d6:	461f      	mov	r7, r3
 80023d8:	898b      	ldrh	r3, [r1, #12]
 80023da:	05db      	lsls	r3, r3, #23
 80023dc:	4605      	mov	r5, r0
 80023de:	460c      	mov	r4, r1
 80023e0:	4616      	mov	r6, r2
 80023e2:	d505      	bpl.n	80023f0 <__swrite+0x1e>
 80023e4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80023e8:	2302      	movs	r3, #2
 80023ea:	2200      	movs	r2, #0
 80023ec:	f000 f8d4 	bl	8002598 <_lseek_r>
 80023f0:	89a3      	ldrh	r3, [r4, #12]
 80023f2:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80023f6:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80023fa:	81a3      	strh	r3, [r4, #12]
 80023fc:	4632      	mov	r2, r6
 80023fe:	463b      	mov	r3, r7
 8002400:	4628      	mov	r0, r5
 8002402:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8002406:	f000 b8eb 	b.w	80025e0 <_write_r>

0800240a <__sseek>:
 800240a:	b510      	push	{r4, lr}
 800240c:	460c      	mov	r4, r1
 800240e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8002412:	f000 f8c1 	bl	8002598 <_lseek_r>
 8002416:	1c43      	adds	r3, r0, #1
 8002418:	89a3      	ldrh	r3, [r4, #12]
 800241a:	bf15      	itete	ne
 800241c:	6560      	strne	r0, [r4, #84]	; 0x54
 800241e:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8002422:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8002426:	81a3      	strheq	r3, [r4, #12]
 8002428:	bf18      	it	ne
 800242a:	81a3      	strhne	r3, [r4, #12]
 800242c:	bd10      	pop	{r4, pc}

0800242e <__sclose>:
 800242e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8002432:	f000 b8a1 	b.w	8002578 <_close_r>

08002436 <__swbuf_r>:
 8002436:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002438:	460e      	mov	r6, r1
 800243a:	4614      	mov	r4, r2
 800243c:	4605      	mov	r5, r0
 800243e:	b118      	cbz	r0, 8002448 <__swbuf_r+0x12>
 8002440:	6a03      	ldr	r3, [r0, #32]
 8002442:	b90b      	cbnz	r3, 8002448 <__swbuf_r+0x12>
 8002444:	f7ff ff10 	bl	8002268 <__sinit>
 8002448:	69a3      	ldr	r3, [r4, #24]
 800244a:	60a3      	str	r3, [r4, #8]
 800244c:	89a3      	ldrh	r3, [r4, #12]
 800244e:	071a      	lsls	r2, r3, #28
 8002450:	d525      	bpl.n	800249e <__swbuf_r+0x68>
 8002452:	6923      	ldr	r3, [r4, #16]
 8002454:	b31b      	cbz	r3, 800249e <__swbuf_r+0x68>
 8002456:	6823      	ldr	r3, [r4, #0]
 8002458:	6922      	ldr	r2, [r4, #16]
 800245a:	1a98      	subs	r0, r3, r2
 800245c:	6963      	ldr	r3, [r4, #20]
 800245e:	b2f6      	uxtb	r6, r6
 8002460:	4283      	cmp	r3, r0
 8002462:	4637      	mov	r7, r6
 8002464:	dc04      	bgt.n	8002470 <__swbuf_r+0x3a>
 8002466:	4621      	mov	r1, r4
 8002468:	4628      	mov	r0, r5
 800246a:	f001 fdb5 	bl	8003fd8 <_fflush_r>
 800246e:	b9e0      	cbnz	r0, 80024aa <__swbuf_r+0x74>
 8002470:	68a3      	ldr	r3, [r4, #8]
 8002472:	3b01      	subs	r3, #1
 8002474:	60a3      	str	r3, [r4, #8]
 8002476:	6823      	ldr	r3, [r4, #0]
 8002478:	1c5a      	adds	r2, r3, #1
 800247a:	6022      	str	r2, [r4, #0]
 800247c:	701e      	strb	r6, [r3, #0]
 800247e:	6962      	ldr	r2, [r4, #20]
 8002480:	1c43      	adds	r3, r0, #1
 8002482:	429a      	cmp	r2, r3
 8002484:	d004      	beq.n	8002490 <__swbuf_r+0x5a>
 8002486:	89a3      	ldrh	r3, [r4, #12]
 8002488:	07db      	lsls	r3, r3, #31
 800248a:	d506      	bpl.n	800249a <__swbuf_r+0x64>
 800248c:	2e0a      	cmp	r6, #10
 800248e:	d104      	bne.n	800249a <__swbuf_r+0x64>
 8002490:	4621      	mov	r1, r4
 8002492:	4628      	mov	r0, r5
 8002494:	f001 fda0 	bl	8003fd8 <_fflush_r>
 8002498:	b938      	cbnz	r0, 80024aa <__swbuf_r+0x74>
 800249a:	4638      	mov	r0, r7
 800249c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800249e:	4621      	mov	r1, r4
 80024a0:	4628      	mov	r0, r5
 80024a2:	f000 f805 	bl	80024b0 <__swsetup_r>
 80024a6:	2800      	cmp	r0, #0
 80024a8:	d0d5      	beq.n	8002456 <__swbuf_r+0x20>
 80024aa:	f04f 37ff 	mov.w	r7, #4294967295
 80024ae:	e7f4      	b.n	800249a <__swbuf_r+0x64>

080024b0 <__swsetup_r>:
 80024b0:	b538      	push	{r3, r4, r5, lr}
 80024b2:	4b2a      	ldr	r3, [pc, #168]	; (800255c <__swsetup_r+0xac>)
 80024b4:	4605      	mov	r5, r0
 80024b6:	6818      	ldr	r0, [r3, #0]
 80024b8:	460c      	mov	r4, r1
 80024ba:	b118      	cbz	r0, 80024c4 <__swsetup_r+0x14>
 80024bc:	6a03      	ldr	r3, [r0, #32]
 80024be:	b90b      	cbnz	r3, 80024c4 <__swsetup_r+0x14>
 80024c0:	f7ff fed2 	bl	8002268 <__sinit>
 80024c4:	89a3      	ldrh	r3, [r4, #12]
 80024c6:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80024ca:	0718      	lsls	r0, r3, #28
 80024cc:	d422      	bmi.n	8002514 <__swsetup_r+0x64>
 80024ce:	06d9      	lsls	r1, r3, #27
 80024d0:	d407      	bmi.n	80024e2 <__swsetup_r+0x32>
 80024d2:	2309      	movs	r3, #9
 80024d4:	602b      	str	r3, [r5, #0]
 80024d6:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 80024da:	81a3      	strh	r3, [r4, #12]
 80024dc:	f04f 30ff 	mov.w	r0, #4294967295
 80024e0:	e034      	b.n	800254c <__swsetup_r+0x9c>
 80024e2:	0758      	lsls	r0, r3, #29
 80024e4:	d512      	bpl.n	800250c <__swsetup_r+0x5c>
 80024e6:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80024e8:	b141      	cbz	r1, 80024fc <__swsetup_r+0x4c>
 80024ea:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80024ee:	4299      	cmp	r1, r3
 80024f0:	d002      	beq.n	80024f8 <__swsetup_r+0x48>
 80024f2:	4628      	mov	r0, r5
 80024f4:	f000 ff2a 	bl	800334c <_free_r>
 80024f8:	2300      	movs	r3, #0
 80024fa:	6363      	str	r3, [r4, #52]	; 0x34
 80024fc:	89a3      	ldrh	r3, [r4, #12]
 80024fe:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8002502:	81a3      	strh	r3, [r4, #12]
 8002504:	2300      	movs	r3, #0
 8002506:	6063      	str	r3, [r4, #4]
 8002508:	6923      	ldr	r3, [r4, #16]
 800250a:	6023      	str	r3, [r4, #0]
 800250c:	89a3      	ldrh	r3, [r4, #12]
 800250e:	f043 0308 	orr.w	r3, r3, #8
 8002512:	81a3      	strh	r3, [r4, #12]
 8002514:	6923      	ldr	r3, [r4, #16]
 8002516:	b94b      	cbnz	r3, 800252c <__swsetup_r+0x7c>
 8002518:	89a3      	ldrh	r3, [r4, #12]
 800251a:	f403 7320 	and.w	r3, r3, #640	; 0x280
 800251e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8002522:	d003      	beq.n	800252c <__swsetup_r+0x7c>
 8002524:	4621      	mov	r1, r4
 8002526:	4628      	mov	r0, r5
 8002528:	f001 fda4 	bl	8004074 <__smakebuf_r>
 800252c:	89a0      	ldrh	r0, [r4, #12]
 800252e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8002532:	f010 0301 	ands.w	r3, r0, #1
 8002536:	d00a      	beq.n	800254e <__swsetup_r+0x9e>
 8002538:	2300      	movs	r3, #0
 800253a:	60a3      	str	r3, [r4, #8]
 800253c:	6963      	ldr	r3, [r4, #20]
 800253e:	425b      	negs	r3, r3
 8002540:	61a3      	str	r3, [r4, #24]
 8002542:	6923      	ldr	r3, [r4, #16]
 8002544:	b943      	cbnz	r3, 8002558 <__swsetup_r+0xa8>
 8002546:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 800254a:	d1c4      	bne.n	80024d6 <__swsetup_r+0x26>
 800254c:	bd38      	pop	{r3, r4, r5, pc}
 800254e:	0781      	lsls	r1, r0, #30
 8002550:	bf58      	it	pl
 8002552:	6963      	ldrpl	r3, [r4, #20]
 8002554:	60a3      	str	r3, [r4, #8]
 8002556:	e7f4      	b.n	8002542 <__swsetup_r+0x92>
 8002558:	2000      	movs	r0, #0
 800255a:	e7f7      	b.n	800254c <__swsetup_r+0x9c>
 800255c:	2000006c 	.word	0x2000006c

08002560 <memset>:
 8002560:	4402      	add	r2, r0
 8002562:	4603      	mov	r3, r0
 8002564:	4293      	cmp	r3, r2
 8002566:	d100      	bne.n	800256a <memset+0xa>
 8002568:	4770      	bx	lr
 800256a:	f803 1b01 	strb.w	r1, [r3], #1
 800256e:	e7f9      	b.n	8002564 <memset+0x4>

08002570 <_localeconv_r>:
 8002570:	4800      	ldr	r0, [pc, #0]	; (8002574 <_localeconv_r+0x4>)
 8002572:	4770      	bx	lr
 8002574:	20000160 	.word	0x20000160

08002578 <_close_r>:
 8002578:	b538      	push	{r3, r4, r5, lr}
 800257a:	4d06      	ldr	r5, [pc, #24]	; (8002594 <_close_r+0x1c>)
 800257c:	2300      	movs	r3, #0
 800257e:	4604      	mov	r4, r0
 8002580:	4608      	mov	r0, r1
 8002582:	602b      	str	r3, [r5, #0]
 8002584:	f001 ff7c 	bl	8004480 <_close>
 8002588:	1c43      	adds	r3, r0, #1
 800258a:	d102      	bne.n	8002592 <_close_r+0x1a>
 800258c:	682b      	ldr	r3, [r5, #0]
 800258e:	b103      	cbz	r3, 8002592 <_close_r+0x1a>
 8002590:	6023      	str	r3, [r4, #0]
 8002592:	bd38      	pop	{r3, r4, r5, pc}
 8002594:	20000374 	.word	0x20000374

08002598 <_lseek_r>:
 8002598:	b538      	push	{r3, r4, r5, lr}
 800259a:	4d07      	ldr	r5, [pc, #28]	; (80025b8 <_lseek_r+0x20>)
 800259c:	4604      	mov	r4, r0
 800259e:	4608      	mov	r0, r1
 80025a0:	4611      	mov	r1, r2
 80025a2:	2200      	movs	r2, #0
 80025a4:	602a      	str	r2, [r5, #0]
 80025a6:	461a      	mov	r2, r3
 80025a8:	f001 ff27 	bl	80043fa <_lseek>
 80025ac:	1c43      	adds	r3, r0, #1
 80025ae:	d102      	bne.n	80025b6 <_lseek_r+0x1e>
 80025b0:	682b      	ldr	r3, [r5, #0]
 80025b2:	b103      	cbz	r3, 80025b6 <_lseek_r+0x1e>
 80025b4:	6023      	str	r3, [r4, #0]
 80025b6:	bd38      	pop	{r3, r4, r5, pc}
 80025b8:	20000374 	.word	0x20000374

080025bc <_read_r>:
 80025bc:	b538      	push	{r3, r4, r5, lr}
 80025be:	4d07      	ldr	r5, [pc, #28]	; (80025dc <_read_r+0x20>)
 80025c0:	4604      	mov	r4, r0
 80025c2:	4608      	mov	r0, r1
 80025c4:	4611      	mov	r1, r2
 80025c6:	2200      	movs	r2, #0
 80025c8:	602a      	str	r2, [r5, #0]
 80025ca:	461a      	mov	r2, r3
 80025cc:	f001 febd 	bl	800434a <_read>
 80025d0:	1c43      	adds	r3, r0, #1
 80025d2:	d102      	bne.n	80025da <_read_r+0x1e>
 80025d4:	682b      	ldr	r3, [r5, #0]
 80025d6:	b103      	cbz	r3, 80025da <_read_r+0x1e>
 80025d8:	6023      	str	r3, [r4, #0]
 80025da:	bd38      	pop	{r3, r4, r5, pc}
 80025dc:	20000374 	.word	0x20000374

080025e0 <_write_r>:
 80025e0:	b538      	push	{r3, r4, r5, lr}
 80025e2:	4d07      	ldr	r5, [pc, #28]	; (8002600 <_write_r+0x20>)
 80025e4:	4604      	mov	r4, r0
 80025e6:	4608      	mov	r0, r1
 80025e8:	4611      	mov	r1, r2
 80025ea:	2200      	movs	r2, #0
 80025ec:	602a      	str	r2, [r5, #0]
 80025ee:	461a      	mov	r2, r3
 80025f0:	f001 ff15 	bl	800441e <_write>
 80025f4:	1c43      	adds	r3, r0, #1
 80025f6:	d102      	bne.n	80025fe <_write_r+0x1e>
 80025f8:	682b      	ldr	r3, [r5, #0]
 80025fa:	b103      	cbz	r3, 80025fe <_write_r+0x1e>
 80025fc:	6023      	str	r3, [r4, #0]
 80025fe:	bd38      	pop	{r3, r4, r5, pc}
 8002600:	20000374 	.word	0x20000374

08002604 <__libc_init_array>:
 8002604:	b570      	push	{r4, r5, r6, lr}
 8002606:	4d0d      	ldr	r5, [pc, #52]	; (800263c <__libc_init_array+0x38>)
 8002608:	4c0d      	ldr	r4, [pc, #52]	; (8002640 <__libc_init_array+0x3c>)
 800260a:	1b64      	subs	r4, r4, r5
 800260c:	10a4      	asrs	r4, r4, #2
 800260e:	2600      	movs	r6, #0
 8002610:	42a6      	cmp	r6, r4
 8002612:	d109      	bne.n	8002628 <__libc_init_array+0x24>
 8002614:	4d0b      	ldr	r5, [pc, #44]	; (8002644 <__libc_init_array+0x40>)
 8002616:	4c0c      	ldr	r4, [pc, #48]	; (8002648 <__libc_init_array+0x44>)
 8002618:	f002 f95e 	bl	80048d8 <_init>
 800261c:	1b64      	subs	r4, r4, r5
 800261e:	10a4      	asrs	r4, r4, #2
 8002620:	2600      	movs	r6, #0
 8002622:	42a6      	cmp	r6, r4
 8002624:	d105      	bne.n	8002632 <__libc_init_array+0x2e>
 8002626:	bd70      	pop	{r4, r5, r6, pc}
 8002628:	f855 3b04 	ldr.w	r3, [r5], #4
 800262c:	4798      	blx	r3
 800262e:	3601      	adds	r6, #1
 8002630:	e7ee      	b.n	8002610 <__libc_init_array+0xc>
 8002632:	f855 3b04 	ldr.w	r3, [r5], #4
 8002636:	4798      	blx	r3
 8002638:	3601      	adds	r6, #1
 800263a:	e7f2      	b.n	8002622 <__libc_init_array+0x1e>
 800263c:	08004cb0 	.word	0x08004cb0
 8002640:	08004cb0 	.word	0x08004cb0
 8002644:	08004cb0 	.word	0x08004cb0
 8002648:	08004cb4 	.word	0x08004cb4

0800264c <__retarget_lock_init_recursive>:
 800264c:	4770      	bx	lr

0800264e <__retarget_lock_acquire_recursive>:
 800264e:	4770      	bx	lr

08002650 <__retarget_lock_release_recursive>:
 8002650:	4770      	bx	lr

08002652 <quorem>:
 8002652:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002656:	6903      	ldr	r3, [r0, #16]
 8002658:	690c      	ldr	r4, [r1, #16]
 800265a:	42a3      	cmp	r3, r4
 800265c:	4607      	mov	r7, r0
 800265e:	db7e      	blt.n	800275e <quorem+0x10c>
 8002660:	3c01      	subs	r4, #1
 8002662:	f101 0814 	add.w	r8, r1, #20
 8002666:	f100 0514 	add.w	r5, r0, #20
 800266a:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800266e:	9301      	str	r3, [sp, #4]
 8002670:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 8002674:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8002678:	3301      	adds	r3, #1
 800267a:	429a      	cmp	r2, r3
 800267c:	ea4f 0b84 	mov.w	fp, r4, lsl #2
 8002680:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 8002684:	fbb2 f6f3 	udiv	r6, r2, r3
 8002688:	d331      	bcc.n	80026ee <quorem+0x9c>
 800268a:	f04f 0e00 	mov.w	lr, #0
 800268e:	4640      	mov	r0, r8
 8002690:	46ac      	mov	ip, r5
 8002692:	46f2      	mov	sl, lr
 8002694:	f850 2b04 	ldr.w	r2, [r0], #4
 8002698:	b293      	uxth	r3, r2
 800269a:	fb06 e303 	mla	r3, r6, r3, lr
 800269e:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 80026a2:	0c1a      	lsrs	r2, r3, #16
 80026a4:	b29b      	uxth	r3, r3
 80026a6:	ebaa 0303 	sub.w	r3, sl, r3
 80026aa:	f8dc a000 	ldr.w	sl, [ip]
 80026ae:	fa13 f38a 	uxtah	r3, r3, sl
 80026b2:	fb06 220e 	mla	r2, r6, lr, r2
 80026b6:	9300      	str	r3, [sp, #0]
 80026b8:	9b00      	ldr	r3, [sp, #0]
 80026ba:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 80026be:	b292      	uxth	r2, r2
 80026c0:	ebc2 421a 	rsb	r2, r2, sl, lsr #16
 80026c4:	eb02 4223 	add.w	r2, r2, r3, asr #16
 80026c8:	f8bd 3000 	ldrh.w	r3, [sp]
 80026cc:	4581      	cmp	r9, r0
 80026ce:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80026d2:	f84c 3b04 	str.w	r3, [ip], #4
 80026d6:	ea4f 4a22 	mov.w	sl, r2, asr #16
 80026da:	d2db      	bcs.n	8002694 <quorem+0x42>
 80026dc:	f855 300b 	ldr.w	r3, [r5, fp]
 80026e0:	b92b      	cbnz	r3, 80026ee <quorem+0x9c>
 80026e2:	9b01      	ldr	r3, [sp, #4]
 80026e4:	3b04      	subs	r3, #4
 80026e6:	429d      	cmp	r5, r3
 80026e8:	461a      	mov	r2, r3
 80026ea:	d32c      	bcc.n	8002746 <quorem+0xf4>
 80026ec:	613c      	str	r4, [r7, #16]
 80026ee:	4638      	mov	r0, r7
 80026f0:	f001 f9a8 	bl	8003a44 <__mcmp>
 80026f4:	2800      	cmp	r0, #0
 80026f6:	db22      	blt.n	800273e <quorem+0xec>
 80026f8:	3601      	adds	r6, #1
 80026fa:	4629      	mov	r1, r5
 80026fc:	2000      	movs	r0, #0
 80026fe:	f858 2b04 	ldr.w	r2, [r8], #4
 8002702:	f8d1 c000 	ldr.w	ip, [r1]
 8002706:	b293      	uxth	r3, r2
 8002708:	1ac3      	subs	r3, r0, r3
 800270a:	0c12      	lsrs	r2, r2, #16
 800270c:	fa13 f38c 	uxtah	r3, r3, ip
 8002710:	ebc2 421c 	rsb	r2, r2, ip, lsr #16
 8002714:	eb02 4223 	add.w	r2, r2, r3, asr #16
 8002718:	b29b      	uxth	r3, r3
 800271a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800271e:	45c1      	cmp	r9, r8
 8002720:	f841 3b04 	str.w	r3, [r1], #4
 8002724:	ea4f 4022 	mov.w	r0, r2, asr #16
 8002728:	d2e9      	bcs.n	80026fe <quorem+0xac>
 800272a:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 800272e:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8002732:	b922      	cbnz	r2, 800273e <quorem+0xec>
 8002734:	3b04      	subs	r3, #4
 8002736:	429d      	cmp	r5, r3
 8002738:	461a      	mov	r2, r3
 800273a:	d30a      	bcc.n	8002752 <quorem+0x100>
 800273c:	613c      	str	r4, [r7, #16]
 800273e:	4630      	mov	r0, r6
 8002740:	b003      	add	sp, #12
 8002742:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002746:	6812      	ldr	r2, [r2, #0]
 8002748:	3b04      	subs	r3, #4
 800274a:	2a00      	cmp	r2, #0
 800274c:	d1ce      	bne.n	80026ec <quorem+0x9a>
 800274e:	3c01      	subs	r4, #1
 8002750:	e7c9      	b.n	80026e6 <quorem+0x94>
 8002752:	6812      	ldr	r2, [r2, #0]
 8002754:	3b04      	subs	r3, #4
 8002756:	2a00      	cmp	r2, #0
 8002758:	d1f0      	bne.n	800273c <quorem+0xea>
 800275a:	3c01      	subs	r4, #1
 800275c:	e7eb      	b.n	8002736 <quorem+0xe4>
 800275e:	2000      	movs	r0, #0
 8002760:	e7ee      	b.n	8002740 <quorem+0xee>
 8002762:	0000      	movs	r0, r0
 8002764:	0000      	movs	r0, r0
	...

08002768 <_dtoa_r>:
 8002768:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800276c:	ed2d 8b04 	vpush	{d8-d9}
 8002770:	69c5      	ldr	r5, [r0, #28]
 8002772:	b093      	sub	sp, #76	; 0x4c
 8002774:	ed8d 0b02 	vstr	d0, [sp, #8]
 8002778:	ec57 6b10 	vmov	r6, r7, d0
 800277c:	f8dd 8080 	ldr.w	r8, [sp, #128]	; 0x80
 8002780:	9107      	str	r1, [sp, #28]
 8002782:	4604      	mov	r4, r0
 8002784:	920a      	str	r2, [sp, #40]	; 0x28
 8002786:	930d      	str	r3, [sp, #52]	; 0x34
 8002788:	b975      	cbnz	r5, 80027a8 <_dtoa_r+0x40>
 800278a:	2010      	movs	r0, #16
 800278c:	f000 fe2a 	bl	80033e4 <malloc>
 8002790:	4602      	mov	r2, r0
 8002792:	61e0      	str	r0, [r4, #28]
 8002794:	b920      	cbnz	r0, 80027a0 <_dtoa_r+0x38>
 8002796:	4bae      	ldr	r3, [pc, #696]	; (8002a50 <_dtoa_r+0x2e8>)
 8002798:	21ef      	movs	r1, #239	; 0xef
 800279a:	48ae      	ldr	r0, [pc, #696]	; (8002a54 <_dtoa_r+0x2ec>)
 800279c:	f001 fce6 	bl	800416c <__assert_func>
 80027a0:	e9c0 5501 	strd	r5, r5, [r0, #4]
 80027a4:	6005      	str	r5, [r0, #0]
 80027a6:	60c5      	str	r5, [r0, #12]
 80027a8:	69e3      	ldr	r3, [r4, #28]
 80027aa:	6819      	ldr	r1, [r3, #0]
 80027ac:	b151      	cbz	r1, 80027c4 <_dtoa_r+0x5c>
 80027ae:	685a      	ldr	r2, [r3, #4]
 80027b0:	604a      	str	r2, [r1, #4]
 80027b2:	2301      	movs	r3, #1
 80027b4:	4093      	lsls	r3, r2
 80027b6:	608b      	str	r3, [r1, #8]
 80027b8:	4620      	mov	r0, r4
 80027ba:	f000 ff07 	bl	80035cc <_Bfree>
 80027be:	69e3      	ldr	r3, [r4, #28]
 80027c0:	2200      	movs	r2, #0
 80027c2:	601a      	str	r2, [r3, #0]
 80027c4:	1e3b      	subs	r3, r7, #0
 80027c6:	bfbb      	ittet	lt
 80027c8:	f023 4300 	biclt.w	r3, r3, #2147483648	; 0x80000000
 80027cc:	9303      	strlt	r3, [sp, #12]
 80027ce:	2300      	movge	r3, #0
 80027d0:	2201      	movlt	r2, #1
 80027d2:	bfac      	ite	ge
 80027d4:	f8c8 3000 	strge.w	r3, [r8]
 80027d8:	f8c8 2000 	strlt.w	r2, [r8]
 80027dc:	4b9e      	ldr	r3, [pc, #632]	; (8002a58 <_dtoa_r+0x2f0>)
 80027de:	f8dd 800c 	ldr.w	r8, [sp, #12]
 80027e2:	ea33 0308 	bics.w	r3, r3, r8
 80027e6:	d11b      	bne.n	8002820 <_dtoa_r+0xb8>
 80027e8:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80027ea:	f242 730f 	movw	r3, #9999	; 0x270f
 80027ee:	6013      	str	r3, [r2, #0]
 80027f0:	f3c8 0313 	ubfx	r3, r8, #0, #20
 80027f4:	4333      	orrs	r3, r6
 80027f6:	f000 8593 	beq.w	8003320 <_dtoa_r+0xbb8>
 80027fa:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80027fc:	b963      	cbnz	r3, 8002818 <_dtoa_r+0xb0>
 80027fe:	4b97      	ldr	r3, [pc, #604]	; (8002a5c <_dtoa_r+0x2f4>)
 8002800:	e027      	b.n	8002852 <_dtoa_r+0xea>
 8002802:	4b97      	ldr	r3, [pc, #604]	; (8002a60 <_dtoa_r+0x2f8>)
 8002804:	9300      	str	r3, [sp, #0]
 8002806:	3308      	adds	r3, #8
 8002808:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800280a:	6013      	str	r3, [r2, #0]
 800280c:	9800      	ldr	r0, [sp, #0]
 800280e:	b013      	add	sp, #76	; 0x4c
 8002810:	ecbd 8b04 	vpop	{d8-d9}
 8002814:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002818:	4b90      	ldr	r3, [pc, #576]	; (8002a5c <_dtoa_r+0x2f4>)
 800281a:	9300      	str	r3, [sp, #0]
 800281c:	3303      	adds	r3, #3
 800281e:	e7f3      	b.n	8002808 <_dtoa_r+0xa0>
 8002820:	ed9d 7b02 	vldr	d7, [sp, #8]
 8002824:	2200      	movs	r2, #0
 8002826:	ec51 0b17 	vmov	r0, r1, d7
 800282a:	eeb0 8a47 	vmov.f32	s16, s14
 800282e:	eef0 8a67 	vmov.f32	s17, s15
 8002832:	2300      	movs	r3, #0
 8002834:	f7fe f948 	bl	8000ac8 <__aeabi_dcmpeq>
 8002838:	4681      	mov	r9, r0
 800283a:	b160      	cbz	r0, 8002856 <_dtoa_r+0xee>
 800283c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800283e:	2301      	movs	r3, #1
 8002840:	6013      	str	r3, [r2, #0]
 8002842:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8002844:	2b00      	cmp	r3, #0
 8002846:	f000 8568 	beq.w	800331a <_dtoa_r+0xbb2>
 800284a:	4b86      	ldr	r3, [pc, #536]	; (8002a64 <_dtoa_r+0x2fc>)
 800284c:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800284e:	6013      	str	r3, [r2, #0]
 8002850:	3b01      	subs	r3, #1
 8002852:	9300      	str	r3, [sp, #0]
 8002854:	e7da      	b.n	800280c <_dtoa_r+0xa4>
 8002856:	aa10      	add	r2, sp, #64	; 0x40
 8002858:	a911      	add	r1, sp, #68	; 0x44
 800285a:	4620      	mov	r0, r4
 800285c:	eeb0 0a48 	vmov.f32	s0, s16
 8002860:	eef0 0a68 	vmov.f32	s1, s17
 8002864:	f001 f994 	bl	8003b90 <__d2b>
 8002868:	f3c8 550a 	ubfx	r5, r8, #20, #11
 800286c:	4682      	mov	sl, r0
 800286e:	2d00      	cmp	r5, #0
 8002870:	d07f      	beq.n	8002972 <_dtoa_r+0x20a>
 8002872:	ee18 3a90 	vmov	r3, s17
 8002876:	f3c3 0313 	ubfx	r3, r3, #0, #20
 800287a:	f043 537f 	orr.w	r3, r3, #1069547520	; 0x3fc00000
 800287e:	ec51 0b18 	vmov	r0, r1, d8
 8002882:	f443 1340 	orr.w	r3, r3, #3145728	; 0x300000
 8002886:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
 800288a:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 800288e:	4619      	mov	r1, r3
 8002890:	2200      	movs	r2, #0
 8002892:	4b75      	ldr	r3, [pc, #468]	; (8002a68 <_dtoa_r+0x300>)
 8002894:	f7fd fcf8 	bl	8000288 <__aeabi_dsub>
 8002898:	a367      	add	r3, pc, #412	; (adr r3, 8002a38 <_dtoa_r+0x2d0>)
 800289a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800289e:	f7fd feab 	bl	80005f8 <__aeabi_dmul>
 80028a2:	a367      	add	r3, pc, #412	; (adr r3, 8002a40 <_dtoa_r+0x2d8>)
 80028a4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80028a8:	f7fd fcf0 	bl	800028c <__adddf3>
 80028ac:	4606      	mov	r6, r0
 80028ae:	4628      	mov	r0, r5
 80028b0:	460f      	mov	r7, r1
 80028b2:	f7fd fe37 	bl	8000524 <__aeabi_i2d>
 80028b6:	a364      	add	r3, pc, #400	; (adr r3, 8002a48 <_dtoa_r+0x2e0>)
 80028b8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80028bc:	f7fd fe9c 	bl	80005f8 <__aeabi_dmul>
 80028c0:	4602      	mov	r2, r0
 80028c2:	460b      	mov	r3, r1
 80028c4:	4630      	mov	r0, r6
 80028c6:	4639      	mov	r1, r7
 80028c8:	f7fd fce0 	bl	800028c <__adddf3>
 80028cc:	4606      	mov	r6, r0
 80028ce:	460f      	mov	r7, r1
 80028d0:	f7fe f942 	bl	8000b58 <__aeabi_d2iz>
 80028d4:	2200      	movs	r2, #0
 80028d6:	4683      	mov	fp, r0
 80028d8:	2300      	movs	r3, #0
 80028da:	4630      	mov	r0, r6
 80028dc:	4639      	mov	r1, r7
 80028de:	f7fe f8fd 	bl	8000adc <__aeabi_dcmplt>
 80028e2:	b148      	cbz	r0, 80028f8 <_dtoa_r+0x190>
 80028e4:	4658      	mov	r0, fp
 80028e6:	f7fd fe1d 	bl	8000524 <__aeabi_i2d>
 80028ea:	4632      	mov	r2, r6
 80028ec:	463b      	mov	r3, r7
 80028ee:	f7fe f8eb 	bl	8000ac8 <__aeabi_dcmpeq>
 80028f2:	b908      	cbnz	r0, 80028f8 <_dtoa_r+0x190>
 80028f4:	f10b 3bff 	add.w	fp, fp, #4294967295
 80028f8:	f1bb 0f16 	cmp.w	fp, #22
 80028fc:	d857      	bhi.n	80029ae <_dtoa_r+0x246>
 80028fe:	4b5b      	ldr	r3, [pc, #364]	; (8002a6c <_dtoa_r+0x304>)
 8002900:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 8002904:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002908:	ec51 0b18 	vmov	r0, r1, d8
 800290c:	f7fe f8e6 	bl	8000adc <__aeabi_dcmplt>
 8002910:	2800      	cmp	r0, #0
 8002912:	d04e      	beq.n	80029b2 <_dtoa_r+0x24a>
 8002914:	f10b 3bff 	add.w	fp, fp, #4294967295
 8002918:	2300      	movs	r3, #0
 800291a:	930c      	str	r3, [sp, #48]	; 0x30
 800291c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800291e:	1b5b      	subs	r3, r3, r5
 8002920:	1e5a      	subs	r2, r3, #1
 8002922:	bf45      	ittet	mi
 8002924:	f1c3 0301 	rsbmi	r3, r3, #1
 8002928:	9305      	strmi	r3, [sp, #20]
 800292a:	2300      	movpl	r3, #0
 800292c:	2300      	movmi	r3, #0
 800292e:	9206      	str	r2, [sp, #24]
 8002930:	bf54      	ite	pl
 8002932:	9305      	strpl	r3, [sp, #20]
 8002934:	9306      	strmi	r3, [sp, #24]
 8002936:	f1bb 0f00 	cmp.w	fp, #0
 800293a:	db3c      	blt.n	80029b6 <_dtoa_r+0x24e>
 800293c:	9b06      	ldr	r3, [sp, #24]
 800293e:	f8cd b02c 	str.w	fp, [sp, #44]	; 0x2c
 8002942:	445b      	add	r3, fp
 8002944:	9306      	str	r3, [sp, #24]
 8002946:	2300      	movs	r3, #0
 8002948:	9308      	str	r3, [sp, #32]
 800294a:	9b07      	ldr	r3, [sp, #28]
 800294c:	2b09      	cmp	r3, #9
 800294e:	d868      	bhi.n	8002a22 <_dtoa_r+0x2ba>
 8002950:	2b05      	cmp	r3, #5
 8002952:	bfc4      	itt	gt
 8002954:	3b04      	subgt	r3, #4
 8002956:	9307      	strgt	r3, [sp, #28]
 8002958:	9b07      	ldr	r3, [sp, #28]
 800295a:	f1a3 0302 	sub.w	r3, r3, #2
 800295e:	bfcc      	ite	gt
 8002960:	2500      	movgt	r5, #0
 8002962:	2501      	movle	r5, #1
 8002964:	2b03      	cmp	r3, #3
 8002966:	f200 8085 	bhi.w	8002a74 <_dtoa_r+0x30c>
 800296a:	e8df f003 	tbb	[pc, r3]
 800296e:	3b2e      	.short	0x3b2e
 8002970:	5839      	.short	0x5839
 8002972:	e9dd 5310 	ldrd	r5, r3, [sp, #64]	; 0x40
 8002976:	441d      	add	r5, r3
 8002978:	f205 4332 	addw	r3, r5, #1074	; 0x432
 800297c:	2b20      	cmp	r3, #32
 800297e:	bfc1      	itttt	gt
 8002980:	f1c3 0340 	rsbgt	r3, r3, #64	; 0x40
 8002984:	fa08 f803 	lslgt.w	r8, r8, r3
 8002988:	f205 4312 	addwgt	r3, r5, #1042	; 0x412
 800298c:	fa26 f303 	lsrgt.w	r3, r6, r3
 8002990:	bfd6      	itet	le
 8002992:	f1c3 0320 	rsble	r3, r3, #32
 8002996:	ea48 0003 	orrgt.w	r0, r8, r3
 800299a:	fa06 f003 	lslle.w	r0, r6, r3
 800299e:	f7fd fdb1 	bl	8000504 <__aeabi_ui2d>
 80029a2:	2201      	movs	r2, #1
 80029a4:	f1a1 73f8 	sub.w	r3, r1, #32505856	; 0x1f00000
 80029a8:	3d01      	subs	r5, #1
 80029aa:	920e      	str	r2, [sp, #56]	; 0x38
 80029ac:	e76f      	b.n	800288e <_dtoa_r+0x126>
 80029ae:	2301      	movs	r3, #1
 80029b0:	e7b3      	b.n	800291a <_dtoa_r+0x1b2>
 80029b2:	900c      	str	r0, [sp, #48]	; 0x30
 80029b4:	e7b2      	b.n	800291c <_dtoa_r+0x1b4>
 80029b6:	9b05      	ldr	r3, [sp, #20]
 80029b8:	eba3 030b 	sub.w	r3, r3, fp
 80029bc:	9305      	str	r3, [sp, #20]
 80029be:	f1cb 0300 	rsb	r3, fp, #0
 80029c2:	9308      	str	r3, [sp, #32]
 80029c4:	2300      	movs	r3, #0
 80029c6:	930b      	str	r3, [sp, #44]	; 0x2c
 80029c8:	e7bf      	b.n	800294a <_dtoa_r+0x1e2>
 80029ca:	2300      	movs	r3, #0
 80029cc:	9309      	str	r3, [sp, #36]	; 0x24
 80029ce:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80029d0:	2b00      	cmp	r3, #0
 80029d2:	dc52      	bgt.n	8002a7a <_dtoa_r+0x312>
 80029d4:	2301      	movs	r3, #1
 80029d6:	9301      	str	r3, [sp, #4]
 80029d8:	9304      	str	r3, [sp, #16]
 80029da:	461a      	mov	r2, r3
 80029dc:	920a      	str	r2, [sp, #40]	; 0x28
 80029de:	e00b      	b.n	80029f8 <_dtoa_r+0x290>
 80029e0:	2301      	movs	r3, #1
 80029e2:	e7f3      	b.n	80029cc <_dtoa_r+0x264>
 80029e4:	2300      	movs	r3, #0
 80029e6:	9309      	str	r3, [sp, #36]	; 0x24
 80029e8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80029ea:	445b      	add	r3, fp
 80029ec:	9301      	str	r3, [sp, #4]
 80029ee:	3301      	adds	r3, #1
 80029f0:	2b01      	cmp	r3, #1
 80029f2:	9304      	str	r3, [sp, #16]
 80029f4:	bfb8      	it	lt
 80029f6:	2301      	movlt	r3, #1
 80029f8:	69e0      	ldr	r0, [r4, #28]
 80029fa:	2100      	movs	r1, #0
 80029fc:	2204      	movs	r2, #4
 80029fe:	f102 0614 	add.w	r6, r2, #20
 8002a02:	429e      	cmp	r6, r3
 8002a04:	d93d      	bls.n	8002a82 <_dtoa_r+0x31a>
 8002a06:	6041      	str	r1, [r0, #4]
 8002a08:	4620      	mov	r0, r4
 8002a0a:	f000 fd9f 	bl	800354c <_Balloc>
 8002a0e:	9000      	str	r0, [sp, #0]
 8002a10:	2800      	cmp	r0, #0
 8002a12:	d139      	bne.n	8002a88 <_dtoa_r+0x320>
 8002a14:	4b16      	ldr	r3, [pc, #88]	; (8002a70 <_dtoa_r+0x308>)
 8002a16:	4602      	mov	r2, r0
 8002a18:	f240 11af 	movw	r1, #431	; 0x1af
 8002a1c:	e6bd      	b.n	800279a <_dtoa_r+0x32>
 8002a1e:	2301      	movs	r3, #1
 8002a20:	e7e1      	b.n	80029e6 <_dtoa_r+0x27e>
 8002a22:	2501      	movs	r5, #1
 8002a24:	2300      	movs	r3, #0
 8002a26:	9307      	str	r3, [sp, #28]
 8002a28:	9509      	str	r5, [sp, #36]	; 0x24
 8002a2a:	f04f 33ff 	mov.w	r3, #4294967295
 8002a2e:	9301      	str	r3, [sp, #4]
 8002a30:	9304      	str	r3, [sp, #16]
 8002a32:	2200      	movs	r2, #0
 8002a34:	2312      	movs	r3, #18
 8002a36:	e7d1      	b.n	80029dc <_dtoa_r+0x274>
 8002a38:	636f4361 	.word	0x636f4361
 8002a3c:	3fd287a7 	.word	0x3fd287a7
 8002a40:	8b60c8b3 	.word	0x8b60c8b3
 8002a44:	3fc68a28 	.word	0x3fc68a28
 8002a48:	509f79fb 	.word	0x509f79fb
 8002a4c:	3fd34413 	.word	0x3fd34413
 8002a50:	08004965 	.word	0x08004965
 8002a54:	0800497c 	.word	0x0800497c
 8002a58:	7ff00000 	.word	0x7ff00000
 8002a5c:	08004961 	.word	0x08004961
 8002a60:	08004958 	.word	0x08004958
 8002a64:	08004935 	.word	0x08004935
 8002a68:	3ff80000 	.word	0x3ff80000
 8002a6c:	08004a68 	.word	0x08004a68
 8002a70:	080049d4 	.word	0x080049d4
 8002a74:	2301      	movs	r3, #1
 8002a76:	9309      	str	r3, [sp, #36]	; 0x24
 8002a78:	e7d7      	b.n	8002a2a <_dtoa_r+0x2c2>
 8002a7a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8002a7c:	9301      	str	r3, [sp, #4]
 8002a7e:	9304      	str	r3, [sp, #16]
 8002a80:	e7ba      	b.n	80029f8 <_dtoa_r+0x290>
 8002a82:	3101      	adds	r1, #1
 8002a84:	0052      	lsls	r2, r2, #1
 8002a86:	e7ba      	b.n	80029fe <_dtoa_r+0x296>
 8002a88:	69e3      	ldr	r3, [r4, #28]
 8002a8a:	9a00      	ldr	r2, [sp, #0]
 8002a8c:	601a      	str	r2, [r3, #0]
 8002a8e:	9b04      	ldr	r3, [sp, #16]
 8002a90:	2b0e      	cmp	r3, #14
 8002a92:	f200 80a8 	bhi.w	8002be6 <_dtoa_r+0x47e>
 8002a96:	2d00      	cmp	r5, #0
 8002a98:	f000 80a5 	beq.w	8002be6 <_dtoa_r+0x47e>
 8002a9c:	f1bb 0f00 	cmp.w	fp, #0
 8002aa0:	dd38      	ble.n	8002b14 <_dtoa_r+0x3ac>
 8002aa2:	4bc0      	ldr	r3, [pc, #768]	; (8002da4 <_dtoa_r+0x63c>)
 8002aa4:	f00b 020f 	and.w	r2, fp, #15
 8002aa8:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8002aac:	f41b 7f80 	tst.w	fp, #256	; 0x100
 8002ab0:	e9d3 6700 	ldrd	r6, r7, [r3]
 8002ab4:	ea4f 182b 	mov.w	r8, fp, asr #4
 8002ab8:	d019      	beq.n	8002aee <_dtoa_r+0x386>
 8002aba:	4bbb      	ldr	r3, [pc, #748]	; (8002da8 <_dtoa_r+0x640>)
 8002abc:	ec51 0b18 	vmov	r0, r1, d8
 8002ac0:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8002ac4:	f7fd fec2 	bl	800084c <__aeabi_ddiv>
 8002ac8:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002acc:	f008 080f 	and.w	r8, r8, #15
 8002ad0:	2503      	movs	r5, #3
 8002ad2:	f8df 92d4 	ldr.w	r9, [pc, #724]	; 8002da8 <_dtoa_r+0x640>
 8002ad6:	f1b8 0f00 	cmp.w	r8, #0
 8002ada:	d10a      	bne.n	8002af2 <_dtoa_r+0x38a>
 8002adc:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002ae0:	4632      	mov	r2, r6
 8002ae2:	463b      	mov	r3, r7
 8002ae4:	f7fd feb2 	bl	800084c <__aeabi_ddiv>
 8002ae8:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002aec:	e02b      	b.n	8002b46 <_dtoa_r+0x3de>
 8002aee:	2502      	movs	r5, #2
 8002af0:	e7ef      	b.n	8002ad2 <_dtoa_r+0x36a>
 8002af2:	f018 0f01 	tst.w	r8, #1
 8002af6:	d008      	beq.n	8002b0a <_dtoa_r+0x3a2>
 8002af8:	4630      	mov	r0, r6
 8002afa:	4639      	mov	r1, r7
 8002afc:	e9d9 2300 	ldrd	r2, r3, [r9]
 8002b00:	f7fd fd7a 	bl	80005f8 <__aeabi_dmul>
 8002b04:	3501      	adds	r5, #1
 8002b06:	4606      	mov	r6, r0
 8002b08:	460f      	mov	r7, r1
 8002b0a:	ea4f 0868 	mov.w	r8, r8, asr #1
 8002b0e:	f109 0908 	add.w	r9, r9, #8
 8002b12:	e7e0      	b.n	8002ad6 <_dtoa_r+0x36e>
 8002b14:	f000 809f 	beq.w	8002c56 <_dtoa_r+0x4ee>
 8002b18:	f1cb 0600 	rsb	r6, fp, #0
 8002b1c:	4ba1      	ldr	r3, [pc, #644]	; (8002da4 <_dtoa_r+0x63c>)
 8002b1e:	4fa2      	ldr	r7, [pc, #648]	; (8002da8 <_dtoa_r+0x640>)
 8002b20:	f006 020f 	and.w	r2, r6, #15
 8002b24:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8002b28:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002b2c:	ec51 0b18 	vmov	r0, r1, d8
 8002b30:	f7fd fd62 	bl	80005f8 <__aeabi_dmul>
 8002b34:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002b38:	1136      	asrs	r6, r6, #4
 8002b3a:	2300      	movs	r3, #0
 8002b3c:	2502      	movs	r5, #2
 8002b3e:	2e00      	cmp	r6, #0
 8002b40:	d17e      	bne.n	8002c40 <_dtoa_r+0x4d8>
 8002b42:	2b00      	cmp	r3, #0
 8002b44:	d1d0      	bne.n	8002ae8 <_dtoa_r+0x380>
 8002b46:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8002b48:	e9dd 8902 	ldrd	r8, r9, [sp, #8]
 8002b4c:	2b00      	cmp	r3, #0
 8002b4e:	f000 8084 	beq.w	8002c5a <_dtoa_r+0x4f2>
 8002b52:	4b96      	ldr	r3, [pc, #600]	; (8002dac <_dtoa_r+0x644>)
 8002b54:	2200      	movs	r2, #0
 8002b56:	4640      	mov	r0, r8
 8002b58:	4649      	mov	r1, r9
 8002b5a:	f7fd ffbf 	bl	8000adc <__aeabi_dcmplt>
 8002b5e:	2800      	cmp	r0, #0
 8002b60:	d07b      	beq.n	8002c5a <_dtoa_r+0x4f2>
 8002b62:	9b04      	ldr	r3, [sp, #16]
 8002b64:	2b00      	cmp	r3, #0
 8002b66:	d078      	beq.n	8002c5a <_dtoa_r+0x4f2>
 8002b68:	9b01      	ldr	r3, [sp, #4]
 8002b6a:	2b00      	cmp	r3, #0
 8002b6c:	dd39      	ble.n	8002be2 <_dtoa_r+0x47a>
 8002b6e:	4b90      	ldr	r3, [pc, #576]	; (8002db0 <_dtoa_r+0x648>)
 8002b70:	2200      	movs	r2, #0
 8002b72:	4640      	mov	r0, r8
 8002b74:	4649      	mov	r1, r9
 8002b76:	f7fd fd3f 	bl	80005f8 <__aeabi_dmul>
 8002b7a:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002b7e:	9e01      	ldr	r6, [sp, #4]
 8002b80:	f10b 37ff 	add.w	r7, fp, #4294967295
 8002b84:	3501      	adds	r5, #1
 8002b86:	e9dd 8902 	ldrd	r8, r9, [sp, #8]
 8002b8a:	4628      	mov	r0, r5
 8002b8c:	f7fd fcca 	bl	8000524 <__aeabi_i2d>
 8002b90:	4642      	mov	r2, r8
 8002b92:	464b      	mov	r3, r9
 8002b94:	f7fd fd30 	bl	80005f8 <__aeabi_dmul>
 8002b98:	4b86      	ldr	r3, [pc, #536]	; (8002db4 <_dtoa_r+0x64c>)
 8002b9a:	2200      	movs	r2, #0
 8002b9c:	f7fd fb76 	bl	800028c <__adddf3>
 8002ba0:	f1a1 7350 	sub.w	r3, r1, #54525952	; 0x3400000
 8002ba4:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002ba8:	9303      	str	r3, [sp, #12]
 8002baa:	2e00      	cmp	r6, #0
 8002bac:	d158      	bne.n	8002c60 <_dtoa_r+0x4f8>
 8002bae:	4b82      	ldr	r3, [pc, #520]	; (8002db8 <_dtoa_r+0x650>)
 8002bb0:	2200      	movs	r2, #0
 8002bb2:	4640      	mov	r0, r8
 8002bb4:	4649      	mov	r1, r9
 8002bb6:	f7fd fb67 	bl	8000288 <__aeabi_dsub>
 8002bba:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8002bbe:	4680      	mov	r8, r0
 8002bc0:	4689      	mov	r9, r1
 8002bc2:	f7fd ffa9 	bl	8000b18 <__aeabi_dcmpgt>
 8002bc6:	2800      	cmp	r0, #0
 8002bc8:	f040 8296 	bne.w	80030f8 <_dtoa_r+0x990>
 8002bcc:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 8002bd0:	4640      	mov	r0, r8
 8002bd2:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8002bd6:	4649      	mov	r1, r9
 8002bd8:	f7fd ff80 	bl	8000adc <__aeabi_dcmplt>
 8002bdc:	2800      	cmp	r0, #0
 8002bde:	f040 8289 	bne.w	80030f4 <_dtoa_r+0x98c>
 8002be2:	ed8d 8b02 	vstr	d8, [sp, #8]
 8002be6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8002be8:	2b00      	cmp	r3, #0
 8002bea:	f2c0 814e 	blt.w	8002e8a <_dtoa_r+0x722>
 8002bee:	f1bb 0f0e 	cmp.w	fp, #14
 8002bf2:	f300 814a 	bgt.w	8002e8a <_dtoa_r+0x722>
 8002bf6:	4b6b      	ldr	r3, [pc, #428]	; (8002da4 <_dtoa_r+0x63c>)
 8002bf8:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 8002bfc:	e9d3 8900 	ldrd	r8, r9, [r3]
 8002c00:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8002c02:	2b00      	cmp	r3, #0
 8002c04:	f280 80dc 	bge.w	8002dc0 <_dtoa_r+0x658>
 8002c08:	9b04      	ldr	r3, [sp, #16]
 8002c0a:	2b00      	cmp	r3, #0
 8002c0c:	f300 80d8 	bgt.w	8002dc0 <_dtoa_r+0x658>
 8002c10:	f040 826f 	bne.w	80030f2 <_dtoa_r+0x98a>
 8002c14:	4b68      	ldr	r3, [pc, #416]	; (8002db8 <_dtoa_r+0x650>)
 8002c16:	2200      	movs	r2, #0
 8002c18:	4640      	mov	r0, r8
 8002c1a:	4649      	mov	r1, r9
 8002c1c:	f7fd fcec 	bl	80005f8 <__aeabi_dmul>
 8002c20:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8002c24:	f7fd ff6e 	bl	8000b04 <__aeabi_dcmpge>
 8002c28:	9e04      	ldr	r6, [sp, #16]
 8002c2a:	4637      	mov	r7, r6
 8002c2c:	2800      	cmp	r0, #0
 8002c2e:	f040 8245 	bne.w	80030bc <_dtoa_r+0x954>
 8002c32:	9d00      	ldr	r5, [sp, #0]
 8002c34:	2331      	movs	r3, #49	; 0x31
 8002c36:	f805 3b01 	strb.w	r3, [r5], #1
 8002c3a:	f10b 0b01 	add.w	fp, fp, #1
 8002c3e:	e241      	b.n	80030c4 <_dtoa_r+0x95c>
 8002c40:	07f2      	lsls	r2, r6, #31
 8002c42:	d505      	bpl.n	8002c50 <_dtoa_r+0x4e8>
 8002c44:	e9d7 2300 	ldrd	r2, r3, [r7]
 8002c48:	f7fd fcd6 	bl	80005f8 <__aeabi_dmul>
 8002c4c:	3501      	adds	r5, #1
 8002c4e:	2301      	movs	r3, #1
 8002c50:	1076      	asrs	r6, r6, #1
 8002c52:	3708      	adds	r7, #8
 8002c54:	e773      	b.n	8002b3e <_dtoa_r+0x3d6>
 8002c56:	2502      	movs	r5, #2
 8002c58:	e775      	b.n	8002b46 <_dtoa_r+0x3de>
 8002c5a:	9e04      	ldr	r6, [sp, #16]
 8002c5c:	465f      	mov	r7, fp
 8002c5e:	e792      	b.n	8002b86 <_dtoa_r+0x41e>
 8002c60:	9900      	ldr	r1, [sp, #0]
 8002c62:	4b50      	ldr	r3, [pc, #320]	; (8002da4 <_dtoa_r+0x63c>)
 8002c64:	ed9d 7b02 	vldr	d7, [sp, #8]
 8002c68:	4431      	add	r1, r6
 8002c6a:	9102      	str	r1, [sp, #8]
 8002c6c:	9909      	ldr	r1, [sp, #36]	; 0x24
 8002c6e:	eeb0 9a47 	vmov.f32	s18, s14
 8002c72:	eef0 9a67 	vmov.f32	s19, s15
 8002c76:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
 8002c7a:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 8002c7e:	2900      	cmp	r1, #0
 8002c80:	d044      	beq.n	8002d0c <_dtoa_r+0x5a4>
 8002c82:	494e      	ldr	r1, [pc, #312]	; (8002dbc <_dtoa_r+0x654>)
 8002c84:	2000      	movs	r0, #0
 8002c86:	f7fd fde1 	bl	800084c <__aeabi_ddiv>
 8002c8a:	ec53 2b19 	vmov	r2, r3, d9
 8002c8e:	f7fd fafb 	bl	8000288 <__aeabi_dsub>
 8002c92:	9d00      	ldr	r5, [sp, #0]
 8002c94:	ec41 0b19 	vmov	d9, r0, r1
 8002c98:	4649      	mov	r1, r9
 8002c9a:	4640      	mov	r0, r8
 8002c9c:	f7fd ff5c 	bl	8000b58 <__aeabi_d2iz>
 8002ca0:	4606      	mov	r6, r0
 8002ca2:	f7fd fc3f 	bl	8000524 <__aeabi_i2d>
 8002ca6:	4602      	mov	r2, r0
 8002ca8:	460b      	mov	r3, r1
 8002caa:	4640      	mov	r0, r8
 8002cac:	4649      	mov	r1, r9
 8002cae:	f7fd faeb 	bl	8000288 <__aeabi_dsub>
 8002cb2:	3630      	adds	r6, #48	; 0x30
 8002cb4:	f805 6b01 	strb.w	r6, [r5], #1
 8002cb8:	ec53 2b19 	vmov	r2, r3, d9
 8002cbc:	4680      	mov	r8, r0
 8002cbe:	4689      	mov	r9, r1
 8002cc0:	f7fd ff0c 	bl	8000adc <__aeabi_dcmplt>
 8002cc4:	2800      	cmp	r0, #0
 8002cc6:	d164      	bne.n	8002d92 <_dtoa_r+0x62a>
 8002cc8:	4642      	mov	r2, r8
 8002cca:	464b      	mov	r3, r9
 8002ccc:	4937      	ldr	r1, [pc, #220]	; (8002dac <_dtoa_r+0x644>)
 8002cce:	2000      	movs	r0, #0
 8002cd0:	f7fd fada 	bl	8000288 <__aeabi_dsub>
 8002cd4:	ec53 2b19 	vmov	r2, r3, d9
 8002cd8:	f7fd ff00 	bl	8000adc <__aeabi_dcmplt>
 8002cdc:	2800      	cmp	r0, #0
 8002cde:	f040 80b6 	bne.w	8002e4e <_dtoa_r+0x6e6>
 8002ce2:	9b02      	ldr	r3, [sp, #8]
 8002ce4:	429d      	cmp	r5, r3
 8002ce6:	f43f af7c 	beq.w	8002be2 <_dtoa_r+0x47a>
 8002cea:	4b31      	ldr	r3, [pc, #196]	; (8002db0 <_dtoa_r+0x648>)
 8002cec:	ec51 0b19 	vmov	r0, r1, d9
 8002cf0:	2200      	movs	r2, #0
 8002cf2:	f7fd fc81 	bl	80005f8 <__aeabi_dmul>
 8002cf6:	4b2e      	ldr	r3, [pc, #184]	; (8002db0 <_dtoa_r+0x648>)
 8002cf8:	ec41 0b19 	vmov	d9, r0, r1
 8002cfc:	2200      	movs	r2, #0
 8002cfe:	4640      	mov	r0, r8
 8002d00:	4649      	mov	r1, r9
 8002d02:	f7fd fc79 	bl	80005f8 <__aeabi_dmul>
 8002d06:	4680      	mov	r8, r0
 8002d08:	4689      	mov	r9, r1
 8002d0a:	e7c5      	b.n	8002c98 <_dtoa_r+0x530>
 8002d0c:	ec51 0b17 	vmov	r0, r1, d7
 8002d10:	f7fd fc72 	bl	80005f8 <__aeabi_dmul>
 8002d14:	9b02      	ldr	r3, [sp, #8]
 8002d16:	9d00      	ldr	r5, [sp, #0]
 8002d18:	930f      	str	r3, [sp, #60]	; 0x3c
 8002d1a:	ec41 0b19 	vmov	d9, r0, r1
 8002d1e:	4649      	mov	r1, r9
 8002d20:	4640      	mov	r0, r8
 8002d22:	f7fd ff19 	bl	8000b58 <__aeabi_d2iz>
 8002d26:	4606      	mov	r6, r0
 8002d28:	f7fd fbfc 	bl	8000524 <__aeabi_i2d>
 8002d2c:	3630      	adds	r6, #48	; 0x30
 8002d2e:	4602      	mov	r2, r0
 8002d30:	460b      	mov	r3, r1
 8002d32:	4640      	mov	r0, r8
 8002d34:	4649      	mov	r1, r9
 8002d36:	f7fd faa7 	bl	8000288 <__aeabi_dsub>
 8002d3a:	f805 6b01 	strb.w	r6, [r5], #1
 8002d3e:	9b02      	ldr	r3, [sp, #8]
 8002d40:	429d      	cmp	r5, r3
 8002d42:	4680      	mov	r8, r0
 8002d44:	4689      	mov	r9, r1
 8002d46:	f04f 0200 	mov.w	r2, #0
 8002d4a:	d124      	bne.n	8002d96 <_dtoa_r+0x62e>
 8002d4c:	4b1b      	ldr	r3, [pc, #108]	; (8002dbc <_dtoa_r+0x654>)
 8002d4e:	ec51 0b19 	vmov	r0, r1, d9
 8002d52:	f7fd fa9b 	bl	800028c <__adddf3>
 8002d56:	4602      	mov	r2, r0
 8002d58:	460b      	mov	r3, r1
 8002d5a:	4640      	mov	r0, r8
 8002d5c:	4649      	mov	r1, r9
 8002d5e:	f7fd fedb 	bl	8000b18 <__aeabi_dcmpgt>
 8002d62:	2800      	cmp	r0, #0
 8002d64:	d173      	bne.n	8002e4e <_dtoa_r+0x6e6>
 8002d66:	ec53 2b19 	vmov	r2, r3, d9
 8002d6a:	4914      	ldr	r1, [pc, #80]	; (8002dbc <_dtoa_r+0x654>)
 8002d6c:	2000      	movs	r0, #0
 8002d6e:	f7fd fa8b 	bl	8000288 <__aeabi_dsub>
 8002d72:	4602      	mov	r2, r0
 8002d74:	460b      	mov	r3, r1
 8002d76:	4640      	mov	r0, r8
 8002d78:	4649      	mov	r1, r9
 8002d7a:	f7fd feaf 	bl	8000adc <__aeabi_dcmplt>
 8002d7e:	2800      	cmp	r0, #0
 8002d80:	f43f af2f 	beq.w	8002be2 <_dtoa_r+0x47a>
 8002d84:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8002d86:	1e6b      	subs	r3, r5, #1
 8002d88:	930f      	str	r3, [sp, #60]	; 0x3c
 8002d8a:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 8002d8e:	2b30      	cmp	r3, #48	; 0x30
 8002d90:	d0f8      	beq.n	8002d84 <_dtoa_r+0x61c>
 8002d92:	46bb      	mov	fp, r7
 8002d94:	e04a      	b.n	8002e2c <_dtoa_r+0x6c4>
 8002d96:	4b06      	ldr	r3, [pc, #24]	; (8002db0 <_dtoa_r+0x648>)
 8002d98:	f7fd fc2e 	bl	80005f8 <__aeabi_dmul>
 8002d9c:	4680      	mov	r8, r0
 8002d9e:	4689      	mov	r9, r1
 8002da0:	e7bd      	b.n	8002d1e <_dtoa_r+0x5b6>
 8002da2:	bf00      	nop
 8002da4:	08004a68 	.word	0x08004a68
 8002da8:	08004a40 	.word	0x08004a40
 8002dac:	3ff00000 	.word	0x3ff00000
 8002db0:	40240000 	.word	0x40240000
 8002db4:	401c0000 	.word	0x401c0000
 8002db8:	40140000 	.word	0x40140000
 8002dbc:	3fe00000 	.word	0x3fe00000
 8002dc0:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
 8002dc4:	9d00      	ldr	r5, [sp, #0]
 8002dc6:	4642      	mov	r2, r8
 8002dc8:	464b      	mov	r3, r9
 8002dca:	4630      	mov	r0, r6
 8002dcc:	4639      	mov	r1, r7
 8002dce:	f7fd fd3d 	bl	800084c <__aeabi_ddiv>
 8002dd2:	f7fd fec1 	bl	8000b58 <__aeabi_d2iz>
 8002dd6:	9001      	str	r0, [sp, #4]
 8002dd8:	f7fd fba4 	bl	8000524 <__aeabi_i2d>
 8002ddc:	4642      	mov	r2, r8
 8002dde:	464b      	mov	r3, r9
 8002de0:	f7fd fc0a 	bl	80005f8 <__aeabi_dmul>
 8002de4:	4602      	mov	r2, r0
 8002de6:	460b      	mov	r3, r1
 8002de8:	4630      	mov	r0, r6
 8002dea:	4639      	mov	r1, r7
 8002dec:	f7fd fa4c 	bl	8000288 <__aeabi_dsub>
 8002df0:	9e01      	ldr	r6, [sp, #4]
 8002df2:	9f04      	ldr	r7, [sp, #16]
 8002df4:	3630      	adds	r6, #48	; 0x30
 8002df6:	f805 6b01 	strb.w	r6, [r5], #1
 8002dfa:	9e00      	ldr	r6, [sp, #0]
 8002dfc:	1bae      	subs	r6, r5, r6
 8002dfe:	42b7      	cmp	r7, r6
 8002e00:	4602      	mov	r2, r0
 8002e02:	460b      	mov	r3, r1
 8002e04:	d134      	bne.n	8002e70 <_dtoa_r+0x708>
 8002e06:	f7fd fa41 	bl	800028c <__adddf3>
 8002e0a:	4642      	mov	r2, r8
 8002e0c:	464b      	mov	r3, r9
 8002e0e:	4606      	mov	r6, r0
 8002e10:	460f      	mov	r7, r1
 8002e12:	f7fd fe81 	bl	8000b18 <__aeabi_dcmpgt>
 8002e16:	b9c8      	cbnz	r0, 8002e4c <_dtoa_r+0x6e4>
 8002e18:	4642      	mov	r2, r8
 8002e1a:	464b      	mov	r3, r9
 8002e1c:	4630      	mov	r0, r6
 8002e1e:	4639      	mov	r1, r7
 8002e20:	f7fd fe52 	bl	8000ac8 <__aeabi_dcmpeq>
 8002e24:	b110      	cbz	r0, 8002e2c <_dtoa_r+0x6c4>
 8002e26:	9b01      	ldr	r3, [sp, #4]
 8002e28:	07db      	lsls	r3, r3, #31
 8002e2a:	d40f      	bmi.n	8002e4c <_dtoa_r+0x6e4>
 8002e2c:	4651      	mov	r1, sl
 8002e2e:	4620      	mov	r0, r4
 8002e30:	f000 fbcc 	bl	80035cc <_Bfree>
 8002e34:	2300      	movs	r3, #0
 8002e36:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8002e38:	702b      	strb	r3, [r5, #0]
 8002e3a:	f10b 0301 	add.w	r3, fp, #1
 8002e3e:	6013      	str	r3, [r2, #0]
 8002e40:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8002e42:	2b00      	cmp	r3, #0
 8002e44:	f43f ace2 	beq.w	800280c <_dtoa_r+0xa4>
 8002e48:	601d      	str	r5, [r3, #0]
 8002e4a:	e4df      	b.n	800280c <_dtoa_r+0xa4>
 8002e4c:	465f      	mov	r7, fp
 8002e4e:	462b      	mov	r3, r5
 8002e50:	461d      	mov	r5, r3
 8002e52:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8002e56:	2a39      	cmp	r2, #57	; 0x39
 8002e58:	d106      	bne.n	8002e68 <_dtoa_r+0x700>
 8002e5a:	9a00      	ldr	r2, [sp, #0]
 8002e5c:	429a      	cmp	r2, r3
 8002e5e:	d1f7      	bne.n	8002e50 <_dtoa_r+0x6e8>
 8002e60:	9900      	ldr	r1, [sp, #0]
 8002e62:	2230      	movs	r2, #48	; 0x30
 8002e64:	3701      	adds	r7, #1
 8002e66:	700a      	strb	r2, [r1, #0]
 8002e68:	781a      	ldrb	r2, [r3, #0]
 8002e6a:	3201      	adds	r2, #1
 8002e6c:	701a      	strb	r2, [r3, #0]
 8002e6e:	e790      	b.n	8002d92 <_dtoa_r+0x62a>
 8002e70:	4ba3      	ldr	r3, [pc, #652]	; (8003100 <_dtoa_r+0x998>)
 8002e72:	2200      	movs	r2, #0
 8002e74:	f7fd fbc0 	bl	80005f8 <__aeabi_dmul>
 8002e78:	2200      	movs	r2, #0
 8002e7a:	2300      	movs	r3, #0
 8002e7c:	4606      	mov	r6, r0
 8002e7e:	460f      	mov	r7, r1
 8002e80:	f7fd fe22 	bl	8000ac8 <__aeabi_dcmpeq>
 8002e84:	2800      	cmp	r0, #0
 8002e86:	d09e      	beq.n	8002dc6 <_dtoa_r+0x65e>
 8002e88:	e7d0      	b.n	8002e2c <_dtoa_r+0x6c4>
 8002e8a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8002e8c:	2a00      	cmp	r2, #0
 8002e8e:	f000 80ca 	beq.w	8003026 <_dtoa_r+0x8be>
 8002e92:	9a07      	ldr	r2, [sp, #28]
 8002e94:	2a01      	cmp	r2, #1
 8002e96:	f300 80ad 	bgt.w	8002ff4 <_dtoa_r+0x88c>
 8002e9a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8002e9c:	2a00      	cmp	r2, #0
 8002e9e:	f000 80a5 	beq.w	8002fec <_dtoa_r+0x884>
 8002ea2:	f203 4333 	addw	r3, r3, #1075	; 0x433
 8002ea6:	9e08      	ldr	r6, [sp, #32]
 8002ea8:	9d05      	ldr	r5, [sp, #20]
 8002eaa:	9a05      	ldr	r2, [sp, #20]
 8002eac:	441a      	add	r2, r3
 8002eae:	9205      	str	r2, [sp, #20]
 8002eb0:	9a06      	ldr	r2, [sp, #24]
 8002eb2:	2101      	movs	r1, #1
 8002eb4:	441a      	add	r2, r3
 8002eb6:	4620      	mov	r0, r4
 8002eb8:	9206      	str	r2, [sp, #24]
 8002eba:	f000 fc3d 	bl	8003738 <__i2b>
 8002ebe:	4607      	mov	r7, r0
 8002ec0:	b165      	cbz	r5, 8002edc <_dtoa_r+0x774>
 8002ec2:	9b06      	ldr	r3, [sp, #24]
 8002ec4:	2b00      	cmp	r3, #0
 8002ec6:	dd09      	ble.n	8002edc <_dtoa_r+0x774>
 8002ec8:	42ab      	cmp	r3, r5
 8002eca:	9a05      	ldr	r2, [sp, #20]
 8002ecc:	bfa8      	it	ge
 8002ece:	462b      	movge	r3, r5
 8002ed0:	1ad2      	subs	r2, r2, r3
 8002ed2:	9205      	str	r2, [sp, #20]
 8002ed4:	9a06      	ldr	r2, [sp, #24]
 8002ed6:	1aed      	subs	r5, r5, r3
 8002ed8:	1ad3      	subs	r3, r2, r3
 8002eda:	9306      	str	r3, [sp, #24]
 8002edc:	9b08      	ldr	r3, [sp, #32]
 8002ede:	b1f3      	cbz	r3, 8002f1e <_dtoa_r+0x7b6>
 8002ee0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002ee2:	2b00      	cmp	r3, #0
 8002ee4:	f000 80a3 	beq.w	800302e <_dtoa_r+0x8c6>
 8002ee8:	2e00      	cmp	r6, #0
 8002eea:	dd10      	ble.n	8002f0e <_dtoa_r+0x7a6>
 8002eec:	4639      	mov	r1, r7
 8002eee:	4632      	mov	r2, r6
 8002ef0:	4620      	mov	r0, r4
 8002ef2:	f000 fce1 	bl	80038b8 <__pow5mult>
 8002ef6:	4652      	mov	r2, sl
 8002ef8:	4601      	mov	r1, r0
 8002efa:	4607      	mov	r7, r0
 8002efc:	4620      	mov	r0, r4
 8002efe:	f000 fc31 	bl	8003764 <__multiply>
 8002f02:	4651      	mov	r1, sl
 8002f04:	4680      	mov	r8, r0
 8002f06:	4620      	mov	r0, r4
 8002f08:	f000 fb60 	bl	80035cc <_Bfree>
 8002f0c:	46c2      	mov	sl, r8
 8002f0e:	9b08      	ldr	r3, [sp, #32]
 8002f10:	1b9a      	subs	r2, r3, r6
 8002f12:	d004      	beq.n	8002f1e <_dtoa_r+0x7b6>
 8002f14:	4651      	mov	r1, sl
 8002f16:	4620      	mov	r0, r4
 8002f18:	f000 fcce 	bl	80038b8 <__pow5mult>
 8002f1c:	4682      	mov	sl, r0
 8002f1e:	2101      	movs	r1, #1
 8002f20:	4620      	mov	r0, r4
 8002f22:	f000 fc09 	bl	8003738 <__i2b>
 8002f26:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8002f28:	2b00      	cmp	r3, #0
 8002f2a:	4606      	mov	r6, r0
 8002f2c:	f340 8081 	ble.w	8003032 <_dtoa_r+0x8ca>
 8002f30:	461a      	mov	r2, r3
 8002f32:	4601      	mov	r1, r0
 8002f34:	4620      	mov	r0, r4
 8002f36:	f000 fcbf 	bl	80038b8 <__pow5mult>
 8002f3a:	9b07      	ldr	r3, [sp, #28]
 8002f3c:	2b01      	cmp	r3, #1
 8002f3e:	4606      	mov	r6, r0
 8002f40:	dd7a      	ble.n	8003038 <_dtoa_r+0x8d0>
 8002f42:	f04f 0800 	mov.w	r8, #0
 8002f46:	6933      	ldr	r3, [r6, #16]
 8002f48:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 8002f4c:	6918      	ldr	r0, [r3, #16]
 8002f4e:	f000 fba5 	bl	800369c <__hi0bits>
 8002f52:	f1c0 0020 	rsb	r0, r0, #32
 8002f56:	9b06      	ldr	r3, [sp, #24]
 8002f58:	4418      	add	r0, r3
 8002f5a:	f010 001f 	ands.w	r0, r0, #31
 8002f5e:	f000 8094 	beq.w	800308a <_dtoa_r+0x922>
 8002f62:	f1c0 0320 	rsb	r3, r0, #32
 8002f66:	2b04      	cmp	r3, #4
 8002f68:	f340 8085 	ble.w	8003076 <_dtoa_r+0x90e>
 8002f6c:	9b05      	ldr	r3, [sp, #20]
 8002f6e:	f1c0 001c 	rsb	r0, r0, #28
 8002f72:	4403      	add	r3, r0
 8002f74:	9305      	str	r3, [sp, #20]
 8002f76:	9b06      	ldr	r3, [sp, #24]
 8002f78:	4403      	add	r3, r0
 8002f7a:	4405      	add	r5, r0
 8002f7c:	9306      	str	r3, [sp, #24]
 8002f7e:	9b05      	ldr	r3, [sp, #20]
 8002f80:	2b00      	cmp	r3, #0
 8002f82:	dd05      	ble.n	8002f90 <_dtoa_r+0x828>
 8002f84:	4651      	mov	r1, sl
 8002f86:	461a      	mov	r2, r3
 8002f88:	4620      	mov	r0, r4
 8002f8a:	f000 fcef 	bl	800396c <__lshift>
 8002f8e:	4682      	mov	sl, r0
 8002f90:	9b06      	ldr	r3, [sp, #24]
 8002f92:	2b00      	cmp	r3, #0
 8002f94:	dd05      	ble.n	8002fa2 <_dtoa_r+0x83a>
 8002f96:	4631      	mov	r1, r6
 8002f98:	461a      	mov	r2, r3
 8002f9a:	4620      	mov	r0, r4
 8002f9c:	f000 fce6 	bl	800396c <__lshift>
 8002fa0:	4606      	mov	r6, r0
 8002fa2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8002fa4:	2b00      	cmp	r3, #0
 8002fa6:	d072      	beq.n	800308e <_dtoa_r+0x926>
 8002fa8:	4631      	mov	r1, r6
 8002faa:	4650      	mov	r0, sl
 8002fac:	f000 fd4a 	bl	8003a44 <__mcmp>
 8002fb0:	2800      	cmp	r0, #0
 8002fb2:	da6c      	bge.n	800308e <_dtoa_r+0x926>
 8002fb4:	2300      	movs	r3, #0
 8002fb6:	4651      	mov	r1, sl
 8002fb8:	220a      	movs	r2, #10
 8002fba:	4620      	mov	r0, r4
 8002fbc:	f000 fb28 	bl	8003610 <__multadd>
 8002fc0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002fc2:	f10b 3bff 	add.w	fp, fp, #4294967295
 8002fc6:	4682      	mov	sl, r0
 8002fc8:	2b00      	cmp	r3, #0
 8002fca:	f000 81b0 	beq.w	800332e <_dtoa_r+0xbc6>
 8002fce:	2300      	movs	r3, #0
 8002fd0:	4639      	mov	r1, r7
 8002fd2:	220a      	movs	r2, #10
 8002fd4:	4620      	mov	r0, r4
 8002fd6:	f000 fb1b 	bl	8003610 <__multadd>
 8002fda:	9b01      	ldr	r3, [sp, #4]
 8002fdc:	2b00      	cmp	r3, #0
 8002fde:	4607      	mov	r7, r0
 8002fe0:	f300 8096 	bgt.w	8003110 <_dtoa_r+0x9a8>
 8002fe4:	9b07      	ldr	r3, [sp, #28]
 8002fe6:	2b02      	cmp	r3, #2
 8002fe8:	dc59      	bgt.n	800309e <_dtoa_r+0x936>
 8002fea:	e091      	b.n	8003110 <_dtoa_r+0x9a8>
 8002fec:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8002fee:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 8002ff2:	e758      	b.n	8002ea6 <_dtoa_r+0x73e>
 8002ff4:	9b04      	ldr	r3, [sp, #16]
 8002ff6:	1e5e      	subs	r6, r3, #1
 8002ff8:	9b08      	ldr	r3, [sp, #32]
 8002ffa:	42b3      	cmp	r3, r6
 8002ffc:	bfbf      	itttt	lt
 8002ffe:	9b08      	ldrlt	r3, [sp, #32]
 8003000:	9a0b      	ldrlt	r2, [sp, #44]	; 0x2c
 8003002:	9608      	strlt	r6, [sp, #32]
 8003004:	1af3      	sublt	r3, r6, r3
 8003006:	bfb4      	ite	lt
 8003008:	18d2      	addlt	r2, r2, r3
 800300a:	1b9e      	subge	r6, r3, r6
 800300c:	9b04      	ldr	r3, [sp, #16]
 800300e:	bfbc      	itt	lt
 8003010:	920b      	strlt	r2, [sp, #44]	; 0x2c
 8003012:	2600      	movlt	r6, #0
 8003014:	2b00      	cmp	r3, #0
 8003016:	bfb7      	itett	lt
 8003018:	e9dd 2304 	ldrdlt	r2, r3, [sp, #16]
 800301c:	e9dd 3504 	ldrdge	r3, r5, [sp, #16]
 8003020:	1a9d      	sublt	r5, r3, r2
 8003022:	2300      	movlt	r3, #0
 8003024:	e741      	b.n	8002eaa <_dtoa_r+0x742>
 8003026:	9e08      	ldr	r6, [sp, #32]
 8003028:	9d05      	ldr	r5, [sp, #20]
 800302a:	9f09      	ldr	r7, [sp, #36]	; 0x24
 800302c:	e748      	b.n	8002ec0 <_dtoa_r+0x758>
 800302e:	9a08      	ldr	r2, [sp, #32]
 8003030:	e770      	b.n	8002f14 <_dtoa_r+0x7ac>
 8003032:	9b07      	ldr	r3, [sp, #28]
 8003034:	2b01      	cmp	r3, #1
 8003036:	dc19      	bgt.n	800306c <_dtoa_r+0x904>
 8003038:	9b02      	ldr	r3, [sp, #8]
 800303a:	b9bb      	cbnz	r3, 800306c <_dtoa_r+0x904>
 800303c:	9b03      	ldr	r3, [sp, #12]
 800303e:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8003042:	b99b      	cbnz	r3, 800306c <_dtoa_r+0x904>
 8003044:	9b03      	ldr	r3, [sp, #12]
 8003046:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 800304a:	0d1b      	lsrs	r3, r3, #20
 800304c:	051b      	lsls	r3, r3, #20
 800304e:	b183      	cbz	r3, 8003072 <_dtoa_r+0x90a>
 8003050:	9b05      	ldr	r3, [sp, #20]
 8003052:	3301      	adds	r3, #1
 8003054:	9305      	str	r3, [sp, #20]
 8003056:	9b06      	ldr	r3, [sp, #24]
 8003058:	3301      	adds	r3, #1
 800305a:	9306      	str	r3, [sp, #24]
 800305c:	f04f 0801 	mov.w	r8, #1
 8003060:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8003062:	2b00      	cmp	r3, #0
 8003064:	f47f af6f 	bne.w	8002f46 <_dtoa_r+0x7de>
 8003068:	2001      	movs	r0, #1
 800306a:	e774      	b.n	8002f56 <_dtoa_r+0x7ee>
 800306c:	f04f 0800 	mov.w	r8, #0
 8003070:	e7f6      	b.n	8003060 <_dtoa_r+0x8f8>
 8003072:	4698      	mov	r8, r3
 8003074:	e7f4      	b.n	8003060 <_dtoa_r+0x8f8>
 8003076:	d082      	beq.n	8002f7e <_dtoa_r+0x816>
 8003078:	9a05      	ldr	r2, [sp, #20]
 800307a:	331c      	adds	r3, #28
 800307c:	441a      	add	r2, r3
 800307e:	9205      	str	r2, [sp, #20]
 8003080:	9a06      	ldr	r2, [sp, #24]
 8003082:	441a      	add	r2, r3
 8003084:	441d      	add	r5, r3
 8003086:	9206      	str	r2, [sp, #24]
 8003088:	e779      	b.n	8002f7e <_dtoa_r+0x816>
 800308a:	4603      	mov	r3, r0
 800308c:	e7f4      	b.n	8003078 <_dtoa_r+0x910>
 800308e:	9b04      	ldr	r3, [sp, #16]
 8003090:	2b00      	cmp	r3, #0
 8003092:	dc37      	bgt.n	8003104 <_dtoa_r+0x99c>
 8003094:	9b07      	ldr	r3, [sp, #28]
 8003096:	2b02      	cmp	r3, #2
 8003098:	dd34      	ble.n	8003104 <_dtoa_r+0x99c>
 800309a:	9b04      	ldr	r3, [sp, #16]
 800309c:	9301      	str	r3, [sp, #4]
 800309e:	9b01      	ldr	r3, [sp, #4]
 80030a0:	b963      	cbnz	r3, 80030bc <_dtoa_r+0x954>
 80030a2:	4631      	mov	r1, r6
 80030a4:	2205      	movs	r2, #5
 80030a6:	4620      	mov	r0, r4
 80030a8:	f000 fab2 	bl	8003610 <__multadd>
 80030ac:	4601      	mov	r1, r0
 80030ae:	4606      	mov	r6, r0
 80030b0:	4650      	mov	r0, sl
 80030b2:	f000 fcc7 	bl	8003a44 <__mcmp>
 80030b6:	2800      	cmp	r0, #0
 80030b8:	f73f adbb 	bgt.w	8002c32 <_dtoa_r+0x4ca>
 80030bc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80030be:	9d00      	ldr	r5, [sp, #0]
 80030c0:	ea6f 0b03 	mvn.w	fp, r3
 80030c4:	f04f 0800 	mov.w	r8, #0
 80030c8:	4631      	mov	r1, r6
 80030ca:	4620      	mov	r0, r4
 80030cc:	f000 fa7e 	bl	80035cc <_Bfree>
 80030d0:	2f00      	cmp	r7, #0
 80030d2:	f43f aeab 	beq.w	8002e2c <_dtoa_r+0x6c4>
 80030d6:	f1b8 0f00 	cmp.w	r8, #0
 80030da:	d005      	beq.n	80030e8 <_dtoa_r+0x980>
 80030dc:	45b8      	cmp	r8, r7
 80030de:	d003      	beq.n	80030e8 <_dtoa_r+0x980>
 80030e0:	4641      	mov	r1, r8
 80030e2:	4620      	mov	r0, r4
 80030e4:	f000 fa72 	bl	80035cc <_Bfree>
 80030e8:	4639      	mov	r1, r7
 80030ea:	4620      	mov	r0, r4
 80030ec:	f000 fa6e 	bl	80035cc <_Bfree>
 80030f0:	e69c      	b.n	8002e2c <_dtoa_r+0x6c4>
 80030f2:	2600      	movs	r6, #0
 80030f4:	4637      	mov	r7, r6
 80030f6:	e7e1      	b.n	80030bc <_dtoa_r+0x954>
 80030f8:	46bb      	mov	fp, r7
 80030fa:	4637      	mov	r7, r6
 80030fc:	e599      	b.n	8002c32 <_dtoa_r+0x4ca>
 80030fe:	bf00      	nop
 8003100:	40240000 	.word	0x40240000
 8003104:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003106:	2b00      	cmp	r3, #0
 8003108:	f000 80c8 	beq.w	800329c <_dtoa_r+0xb34>
 800310c:	9b04      	ldr	r3, [sp, #16]
 800310e:	9301      	str	r3, [sp, #4]
 8003110:	2d00      	cmp	r5, #0
 8003112:	dd05      	ble.n	8003120 <_dtoa_r+0x9b8>
 8003114:	4639      	mov	r1, r7
 8003116:	462a      	mov	r2, r5
 8003118:	4620      	mov	r0, r4
 800311a:	f000 fc27 	bl	800396c <__lshift>
 800311e:	4607      	mov	r7, r0
 8003120:	f1b8 0f00 	cmp.w	r8, #0
 8003124:	d05b      	beq.n	80031de <_dtoa_r+0xa76>
 8003126:	6879      	ldr	r1, [r7, #4]
 8003128:	4620      	mov	r0, r4
 800312a:	f000 fa0f 	bl	800354c <_Balloc>
 800312e:	4605      	mov	r5, r0
 8003130:	b928      	cbnz	r0, 800313e <_dtoa_r+0x9d6>
 8003132:	4b83      	ldr	r3, [pc, #524]	; (8003340 <_dtoa_r+0xbd8>)
 8003134:	4602      	mov	r2, r0
 8003136:	f240 21ef 	movw	r1, #751	; 0x2ef
 800313a:	f7ff bb2e 	b.w	800279a <_dtoa_r+0x32>
 800313e:	693a      	ldr	r2, [r7, #16]
 8003140:	3202      	adds	r2, #2
 8003142:	0092      	lsls	r2, r2, #2
 8003144:	f107 010c 	add.w	r1, r7, #12
 8003148:	300c      	adds	r0, #12
 800314a:	f001 f801 	bl	8004150 <memcpy>
 800314e:	2201      	movs	r2, #1
 8003150:	4629      	mov	r1, r5
 8003152:	4620      	mov	r0, r4
 8003154:	f000 fc0a 	bl	800396c <__lshift>
 8003158:	9b00      	ldr	r3, [sp, #0]
 800315a:	3301      	adds	r3, #1
 800315c:	9304      	str	r3, [sp, #16]
 800315e:	e9dd 2300 	ldrd	r2, r3, [sp]
 8003162:	4413      	add	r3, r2
 8003164:	9308      	str	r3, [sp, #32]
 8003166:	9b02      	ldr	r3, [sp, #8]
 8003168:	f003 0301 	and.w	r3, r3, #1
 800316c:	46b8      	mov	r8, r7
 800316e:	9306      	str	r3, [sp, #24]
 8003170:	4607      	mov	r7, r0
 8003172:	9b04      	ldr	r3, [sp, #16]
 8003174:	4631      	mov	r1, r6
 8003176:	3b01      	subs	r3, #1
 8003178:	4650      	mov	r0, sl
 800317a:	9301      	str	r3, [sp, #4]
 800317c:	f7ff fa69 	bl	8002652 <quorem>
 8003180:	4641      	mov	r1, r8
 8003182:	9002      	str	r0, [sp, #8]
 8003184:	f100 0930 	add.w	r9, r0, #48	; 0x30
 8003188:	4650      	mov	r0, sl
 800318a:	f000 fc5b 	bl	8003a44 <__mcmp>
 800318e:	463a      	mov	r2, r7
 8003190:	9005      	str	r0, [sp, #20]
 8003192:	4631      	mov	r1, r6
 8003194:	4620      	mov	r0, r4
 8003196:	f000 fc71 	bl	8003a7c <__mdiff>
 800319a:	68c2      	ldr	r2, [r0, #12]
 800319c:	4605      	mov	r5, r0
 800319e:	bb02      	cbnz	r2, 80031e2 <_dtoa_r+0xa7a>
 80031a0:	4601      	mov	r1, r0
 80031a2:	4650      	mov	r0, sl
 80031a4:	f000 fc4e 	bl	8003a44 <__mcmp>
 80031a8:	4602      	mov	r2, r0
 80031aa:	4629      	mov	r1, r5
 80031ac:	4620      	mov	r0, r4
 80031ae:	9209      	str	r2, [sp, #36]	; 0x24
 80031b0:	f000 fa0c 	bl	80035cc <_Bfree>
 80031b4:	9b07      	ldr	r3, [sp, #28]
 80031b6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80031b8:	9d04      	ldr	r5, [sp, #16]
 80031ba:	ea43 0102 	orr.w	r1, r3, r2
 80031be:	9b06      	ldr	r3, [sp, #24]
 80031c0:	4319      	orrs	r1, r3
 80031c2:	d110      	bne.n	80031e6 <_dtoa_r+0xa7e>
 80031c4:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 80031c8:	d029      	beq.n	800321e <_dtoa_r+0xab6>
 80031ca:	9b05      	ldr	r3, [sp, #20]
 80031cc:	2b00      	cmp	r3, #0
 80031ce:	dd02      	ble.n	80031d6 <_dtoa_r+0xa6e>
 80031d0:	9b02      	ldr	r3, [sp, #8]
 80031d2:	f103 0931 	add.w	r9, r3, #49	; 0x31
 80031d6:	9b01      	ldr	r3, [sp, #4]
 80031d8:	f883 9000 	strb.w	r9, [r3]
 80031dc:	e774      	b.n	80030c8 <_dtoa_r+0x960>
 80031de:	4638      	mov	r0, r7
 80031e0:	e7ba      	b.n	8003158 <_dtoa_r+0x9f0>
 80031e2:	2201      	movs	r2, #1
 80031e4:	e7e1      	b.n	80031aa <_dtoa_r+0xa42>
 80031e6:	9b05      	ldr	r3, [sp, #20]
 80031e8:	2b00      	cmp	r3, #0
 80031ea:	db04      	blt.n	80031f6 <_dtoa_r+0xa8e>
 80031ec:	9907      	ldr	r1, [sp, #28]
 80031ee:	430b      	orrs	r3, r1
 80031f0:	9906      	ldr	r1, [sp, #24]
 80031f2:	430b      	orrs	r3, r1
 80031f4:	d120      	bne.n	8003238 <_dtoa_r+0xad0>
 80031f6:	2a00      	cmp	r2, #0
 80031f8:	dded      	ble.n	80031d6 <_dtoa_r+0xa6e>
 80031fa:	4651      	mov	r1, sl
 80031fc:	2201      	movs	r2, #1
 80031fe:	4620      	mov	r0, r4
 8003200:	f000 fbb4 	bl	800396c <__lshift>
 8003204:	4631      	mov	r1, r6
 8003206:	4682      	mov	sl, r0
 8003208:	f000 fc1c 	bl	8003a44 <__mcmp>
 800320c:	2800      	cmp	r0, #0
 800320e:	dc03      	bgt.n	8003218 <_dtoa_r+0xab0>
 8003210:	d1e1      	bne.n	80031d6 <_dtoa_r+0xa6e>
 8003212:	f019 0f01 	tst.w	r9, #1
 8003216:	d0de      	beq.n	80031d6 <_dtoa_r+0xa6e>
 8003218:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 800321c:	d1d8      	bne.n	80031d0 <_dtoa_r+0xa68>
 800321e:	9a01      	ldr	r2, [sp, #4]
 8003220:	2339      	movs	r3, #57	; 0x39
 8003222:	7013      	strb	r3, [r2, #0]
 8003224:	462b      	mov	r3, r5
 8003226:	461d      	mov	r5, r3
 8003228:	3b01      	subs	r3, #1
 800322a:	f815 2c01 	ldrb.w	r2, [r5, #-1]
 800322e:	2a39      	cmp	r2, #57	; 0x39
 8003230:	d06c      	beq.n	800330c <_dtoa_r+0xba4>
 8003232:	3201      	adds	r2, #1
 8003234:	701a      	strb	r2, [r3, #0]
 8003236:	e747      	b.n	80030c8 <_dtoa_r+0x960>
 8003238:	2a00      	cmp	r2, #0
 800323a:	dd07      	ble.n	800324c <_dtoa_r+0xae4>
 800323c:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 8003240:	d0ed      	beq.n	800321e <_dtoa_r+0xab6>
 8003242:	9a01      	ldr	r2, [sp, #4]
 8003244:	f109 0301 	add.w	r3, r9, #1
 8003248:	7013      	strb	r3, [r2, #0]
 800324a:	e73d      	b.n	80030c8 <_dtoa_r+0x960>
 800324c:	9b04      	ldr	r3, [sp, #16]
 800324e:	9a08      	ldr	r2, [sp, #32]
 8003250:	f803 9c01 	strb.w	r9, [r3, #-1]
 8003254:	4293      	cmp	r3, r2
 8003256:	d043      	beq.n	80032e0 <_dtoa_r+0xb78>
 8003258:	4651      	mov	r1, sl
 800325a:	2300      	movs	r3, #0
 800325c:	220a      	movs	r2, #10
 800325e:	4620      	mov	r0, r4
 8003260:	f000 f9d6 	bl	8003610 <__multadd>
 8003264:	45b8      	cmp	r8, r7
 8003266:	4682      	mov	sl, r0
 8003268:	f04f 0300 	mov.w	r3, #0
 800326c:	f04f 020a 	mov.w	r2, #10
 8003270:	4641      	mov	r1, r8
 8003272:	4620      	mov	r0, r4
 8003274:	d107      	bne.n	8003286 <_dtoa_r+0xb1e>
 8003276:	f000 f9cb 	bl	8003610 <__multadd>
 800327a:	4680      	mov	r8, r0
 800327c:	4607      	mov	r7, r0
 800327e:	9b04      	ldr	r3, [sp, #16]
 8003280:	3301      	adds	r3, #1
 8003282:	9304      	str	r3, [sp, #16]
 8003284:	e775      	b.n	8003172 <_dtoa_r+0xa0a>
 8003286:	f000 f9c3 	bl	8003610 <__multadd>
 800328a:	4639      	mov	r1, r7
 800328c:	4680      	mov	r8, r0
 800328e:	2300      	movs	r3, #0
 8003290:	220a      	movs	r2, #10
 8003292:	4620      	mov	r0, r4
 8003294:	f000 f9bc 	bl	8003610 <__multadd>
 8003298:	4607      	mov	r7, r0
 800329a:	e7f0      	b.n	800327e <_dtoa_r+0xb16>
 800329c:	9b04      	ldr	r3, [sp, #16]
 800329e:	9301      	str	r3, [sp, #4]
 80032a0:	9d00      	ldr	r5, [sp, #0]
 80032a2:	4631      	mov	r1, r6
 80032a4:	4650      	mov	r0, sl
 80032a6:	f7ff f9d4 	bl	8002652 <quorem>
 80032aa:	f100 0930 	add.w	r9, r0, #48	; 0x30
 80032ae:	9b00      	ldr	r3, [sp, #0]
 80032b0:	f805 9b01 	strb.w	r9, [r5], #1
 80032b4:	1aea      	subs	r2, r5, r3
 80032b6:	9b01      	ldr	r3, [sp, #4]
 80032b8:	4293      	cmp	r3, r2
 80032ba:	dd07      	ble.n	80032cc <_dtoa_r+0xb64>
 80032bc:	4651      	mov	r1, sl
 80032be:	2300      	movs	r3, #0
 80032c0:	220a      	movs	r2, #10
 80032c2:	4620      	mov	r0, r4
 80032c4:	f000 f9a4 	bl	8003610 <__multadd>
 80032c8:	4682      	mov	sl, r0
 80032ca:	e7ea      	b.n	80032a2 <_dtoa_r+0xb3a>
 80032cc:	9b01      	ldr	r3, [sp, #4]
 80032ce:	2b00      	cmp	r3, #0
 80032d0:	bfc8      	it	gt
 80032d2:	461d      	movgt	r5, r3
 80032d4:	9b00      	ldr	r3, [sp, #0]
 80032d6:	bfd8      	it	le
 80032d8:	2501      	movle	r5, #1
 80032da:	441d      	add	r5, r3
 80032dc:	f04f 0800 	mov.w	r8, #0
 80032e0:	4651      	mov	r1, sl
 80032e2:	2201      	movs	r2, #1
 80032e4:	4620      	mov	r0, r4
 80032e6:	f000 fb41 	bl	800396c <__lshift>
 80032ea:	4631      	mov	r1, r6
 80032ec:	4682      	mov	sl, r0
 80032ee:	f000 fba9 	bl	8003a44 <__mcmp>
 80032f2:	2800      	cmp	r0, #0
 80032f4:	dc96      	bgt.n	8003224 <_dtoa_r+0xabc>
 80032f6:	d102      	bne.n	80032fe <_dtoa_r+0xb96>
 80032f8:	f019 0f01 	tst.w	r9, #1
 80032fc:	d192      	bne.n	8003224 <_dtoa_r+0xabc>
 80032fe:	462b      	mov	r3, r5
 8003300:	461d      	mov	r5, r3
 8003302:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8003306:	2a30      	cmp	r2, #48	; 0x30
 8003308:	d0fa      	beq.n	8003300 <_dtoa_r+0xb98>
 800330a:	e6dd      	b.n	80030c8 <_dtoa_r+0x960>
 800330c:	9a00      	ldr	r2, [sp, #0]
 800330e:	429a      	cmp	r2, r3
 8003310:	d189      	bne.n	8003226 <_dtoa_r+0xabe>
 8003312:	f10b 0b01 	add.w	fp, fp, #1
 8003316:	2331      	movs	r3, #49	; 0x31
 8003318:	e796      	b.n	8003248 <_dtoa_r+0xae0>
 800331a:	4b0a      	ldr	r3, [pc, #40]	; (8003344 <_dtoa_r+0xbdc>)
 800331c:	f7ff ba99 	b.w	8002852 <_dtoa_r+0xea>
 8003320:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8003322:	2b00      	cmp	r3, #0
 8003324:	f47f aa6d 	bne.w	8002802 <_dtoa_r+0x9a>
 8003328:	4b07      	ldr	r3, [pc, #28]	; (8003348 <_dtoa_r+0xbe0>)
 800332a:	f7ff ba92 	b.w	8002852 <_dtoa_r+0xea>
 800332e:	9b01      	ldr	r3, [sp, #4]
 8003330:	2b00      	cmp	r3, #0
 8003332:	dcb5      	bgt.n	80032a0 <_dtoa_r+0xb38>
 8003334:	9b07      	ldr	r3, [sp, #28]
 8003336:	2b02      	cmp	r3, #2
 8003338:	f73f aeb1 	bgt.w	800309e <_dtoa_r+0x936>
 800333c:	e7b0      	b.n	80032a0 <_dtoa_r+0xb38>
 800333e:	bf00      	nop
 8003340:	080049d4 	.word	0x080049d4
 8003344:	08004934 	.word	0x08004934
 8003348:	08004958 	.word	0x08004958

0800334c <_free_r>:
 800334c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800334e:	2900      	cmp	r1, #0
 8003350:	d044      	beq.n	80033dc <_free_r+0x90>
 8003352:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8003356:	9001      	str	r0, [sp, #4]
 8003358:	2b00      	cmp	r3, #0
 800335a:	f1a1 0404 	sub.w	r4, r1, #4
 800335e:	bfb8      	it	lt
 8003360:	18e4      	addlt	r4, r4, r3
 8003362:	f000 f8e7 	bl	8003534 <__malloc_lock>
 8003366:	4a1e      	ldr	r2, [pc, #120]	; (80033e0 <_free_r+0x94>)
 8003368:	9801      	ldr	r0, [sp, #4]
 800336a:	6813      	ldr	r3, [r2, #0]
 800336c:	b933      	cbnz	r3, 800337c <_free_r+0x30>
 800336e:	6063      	str	r3, [r4, #4]
 8003370:	6014      	str	r4, [r2, #0]
 8003372:	b003      	add	sp, #12
 8003374:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8003378:	f000 b8e2 	b.w	8003540 <__malloc_unlock>
 800337c:	42a3      	cmp	r3, r4
 800337e:	d908      	bls.n	8003392 <_free_r+0x46>
 8003380:	6825      	ldr	r5, [r4, #0]
 8003382:	1961      	adds	r1, r4, r5
 8003384:	428b      	cmp	r3, r1
 8003386:	bf01      	itttt	eq
 8003388:	6819      	ldreq	r1, [r3, #0]
 800338a:	685b      	ldreq	r3, [r3, #4]
 800338c:	1949      	addeq	r1, r1, r5
 800338e:	6021      	streq	r1, [r4, #0]
 8003390:	e7ed      	b.n	800336e <_free_r+0x22>
 8003392:	461a      	mov	r2, r3
 8003394:	685b      	ldr	r3, [r3, #4]
 8003396:	b10b      	cbz	r3, 800339c <_free_r+0x50>
 8003398:	42a3      	cmp	r3, r4
 800339a:	d9fa      	bls.n	8003392 <_free_r+0x46>
 800339c:	6811      	ldr	r1, [r2, #0]
 800339e:	1855      	adds	r5, r2, r1
 80033a0:	42a5      	cmp	r5, r4
 80033a2:	d10b      	bne.n	80033bc <_free_r+0x70>
 80033a4:	6824      	ldr	r4, [r4, #0]
 80033a6:	4421      	add	r1, r4
 80033a8:	1854      	adds	r4, r2, r1
 80033aa:	42a3      	cmp	r3, r4
 80033ac:	6011      	str	r1, [r2, #0]
 80033ae:	d1e0      	bne.n	8003372 <_free_r+0x26>
 80033b0:	681c      	ldr	r4, [r3, #0]
 80033b2:	685b      	ldr	r3, [r3, #4]
 80033b4:	6053      	str	r3, [r2, #4]
 80033b6:	440c      	add	r4, r1
 80033b8:	6014      	str	r4, [r2, #0]
 80033ba:	e7da      	b.n	8003372 <_free_r+0x26>
 80033bc:	d902      	bls.n	80033c4 <_free_r+0x78>
 80033be:	230c      	movs	r3, #12
 80033c0:	6003      	str	r3, [r0, #0]
 80033c2:	e7d6      	b.n	8003372 <_free_r+0x26>
 80033c4:	6825      	ldr	r5, [r4, #0]
 80033c6:	1961      	adds	r1, r4, r5
 80033c8:	428b      	cmp	r3, r1
 80033ca:	bf04      	itt	eq
 80033cc:	6819      	ldreq	r1, [r3, #0]
 80033ce:	685b      	ldreq	r3, [r3, #4]
 80033d0:	6063      	str	r3, [r4, #4]
 80033d2:	bf04      	itt	eq
 80033d4:	1949      	addeq	r1, r1, r5
 80033d6:	6021      	streq	r1, [r4, #0]
 80033d8:	6054      	str	r4, [r2, #4]
 80033da:	e7ca      	b.n	8003372 <_free_r+0x26>
 80033dc:	b003      	add	sp, #12
 80033de:	bd30      	pop	{r4, r5, pc}
 80033e0:	2000037c 	.word	0x2000037c

080033e4 <malloc>:
 80033e4:	4b02      	ldr	r3, [pc, #8]	; (80033f0 <malloc+0xc>)
 80033e6:	4601      	mov	r1, r0
 80033e8:	6818      	ldr	r0, [r3, #0]
 80033ea:	f000 b823 	b.w	8003434 <_malloc_r>
 80033ee:	bf00      	nop
 80033f0:	2000006c 	.word	0x2000006c

080033f4 <sbrk_aligned>:
 80033f4:	b570      	push	{r4, r5, r6, lr}
 80033f6:	4e0e      	ldr	r6, [pc, #56]	; (8003430 <sbrk_aligned+0x3c>)
 80033f8:	460c      	mov	r4, r1
 80033fa:	6831      	ldr	r1, [r6, #0]
 80033fc:	4605      	mov	r5, r0
 80033fe:	b911      	cbnz	r1, 8003406 <sbrk_aligned+0x12>
 8003400:	f000 fe96 	bl	8004130 <_sbrk_r>
 8003404:	6030      	str	r0, [r6, #0]
 8003406:	4621      	mov	r1, r4
 8003408:	4628      	mov	r0, r5
 800340a:	f000 fe91 	bl	8004130 <_sbrk_r>
 800340e:	1c43      	adds	r3, r0, #1
 8003410:	d00a      	beq.n	8003428 <sbrk_aligned+0x34>
 8003412:	1cc4      	adds	r4, r0, #3
 8003414:	f024 0403 	bic.w	r4, r4, #3
 8003418:	42a0      	cmp	r0, r4
 800341a:	d007      	beq.n	800342c <sbrk_aligned+0x38>
 800341c:	1a21      	subs	r1, r4, r0
 800341e:	4628      	mov	r0, r5
 8003420:	f000 fe86 	bl	8004130 <_sbrk_r>
 8003424:	3001      	adds	r0, #1
 8003426:	d101      	bne.n	800342c <sbrk_aligned+0x38>
 8003428:	f04f 34ff 	mov.w	r4, #4294967295
 800342c:	4620      	mov	r0, r4
 800342e:	bd70      	pop	{r4, r5, r6, pc}
 8003430:	20000380 	.word	0x20000380

08003434 <_malloc_r>:
 8003434:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8003438:	1ccd      	adds	r5, r1, #3
 800343a:	f025 0503 	bic.w	r5, r5, #3
 800343e:	3508      	adds	r5, #8
 8003440:	2d0c      	cmp	r5, #12
 8003442:	bf38      	it	cc
 8003444:	250c      	movcc	r5, #12
 8003446:	2d00      	cmp	r5, #0
 8003448:	4607      	mov	r7, r0
 800344a:	db01      	blt.n	8003450 <_malloc_r+0x1c>
 800344c:	42a9      	cmp	r1, r5
 800344e:	d905      	bls.n	800345c <_malloc_r+0x28>
 8003450:	230c      	movs	r3, #12
 8003452:	603b      	str	r3, [r7, #0]
 8003454:	2600      	movs	r6, #0
 8003456:	4630      	mov	r0, r6
 8003458:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800345c:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 8003530 <_malloc_r+0xfc>
 8003460:	f000 f868 	bl	8003534 <__malloc_lock>
 8003464:	f8d8 3000 	ldr.w	r3, [r8]
 8003468:	461c      	mov	r4, r3
 800346a:	bb5c      	cbnz	r4, 80034c4 <_malloc_r+0x90>
 800346c:	4629      	mov	r1, r5
 800346e:	4638      	mov	r0, r7
 8003470:	f7ff ffc0 	bl	80033f4 <sbrk_aligned>
 8003474:	1c43      	adds	r3, r0, #1
 8003476:	4604      	mov	r4, r0
 8003478:	d155      	bne.n	8003526 <_malloc_r+0xf2>
 800347a:	f8d8 4000 	ldr.w	r4, [r8]
 800347e:	4626      	mov	r6, r4
 8003480:	2e00      	cmp	r6, #0
 8003482:	d145      	bne.n	8003510 <_malloc_r+0xdc>
 8003484:	2c00      	cmp	r4, #0
 8003486:	d048      	beq.n	800351a <_malloc_r+0xe6>
 8003488:	6823      	ldr	r3, [r4, #0]
 800348a:	4631      	mov	r1, r6
 800348c:	4638      	mov	r0, r7
 800348e:	eb04 0903 	add.w	r9, r4, r3
 8003492:	f000 fe4d 	bl	8004130 <_sbrk_r>
 8003496:	4581      	cmp	r9, r0
 8003498:	d13f      	bne.n	800351a <_malloc_r+0xe6>
 800349a:	6821      	ldr	r1, [r4, #0]
 800349c:	1a6d      	subs	r5, r5, r1
 800349e:	4629      	mov	r1, r5
 80034a0:	4638      	mov	r0, r7
 80034a2:	f7ff ffa7 	bl	80033f4 <sbrk_aligned>
 80034a6:	3001      	adds	r0, #1
 80034a8:	d037      	beq.n	800351a <_malloc_r+0xe6>
 80034aa:	6823      	ldr	r3, [r4, #0]
 80034ac:	442b      	add	r3, r5
 80034ae:	6023      	str	r3, [r4, #0]
 80034b0:	f8d8 3000 	ldr.w	r3, [r8]
 80034b4:	2b00      	cmp	r3, #0
 80034b6:	d038      	beq.n	800352a <_malloc_r+0xf6>
 80034b8:	685a      	ldr	r2, [r3, #4]
 80034ba:	42a2      	cmp	r2, r4
 80034bc:	d12b      	bne.n	8003516 <_malloc_r+0xe2>
 80034be:	2200      	movs	r2, #0
 80034c0:	605a      	str	r2, [r3, #4]
 80034c2:	e00f      	b.n	80034e4 <_malloc_r+0xb0>
 80034c4:	6822      	ldr	r2, [r4, #0]
 80034c6:	1b52      	subs	r2, r2, r5
 80034c8:	d41f      	bmi.n	800350a <_malloc_r+0xd6>
 80034ca:	2a0b      	cmp	r2, #11
 80034cc:	d917      	bls.n	80034fe <_malloc_r+0xca>
 80034ce:	1961      	adds	r1, r4, r5
 80034d0:	42a3      	cmp	r3, r4
 80034d2:	6025      	str	r5, [r4, #0]
 80034d4:	bf18      	it	ne
 80034d6:	6059      	strne	r1, [r3, #4]
 80034d8:	6863      	ldr	r3, [r4, #4]
 80034da:	bf08      	it	eq
 80034dc:	f8c8 1000 	streq.w	r1, [r8]
 80034e0:	5162      	str	r2, [r4, r5]
 80034e2:	604b      	str	r3, [r1, #4]
 80034e4:	4638      	mov	r0, r7
 80034e6:	f104 060b 	add.w	r6, r4, #11
 80034ea:	f000 f829 	bl	8003540 <__malloc_unlock>
 80034ee:	f026 0607 	bic.w	r6, r6, #7
 80034f2:	1d23      	adds	r3, r4, #4
 80034f4:	1af2      	subs	r2, r6, r3
 80034f6:	d0ae      	beq.n	8003456 <_malloc_r+0x22>
 80034f8:	1b9b      	subs	r3, r3, r6
 80034fa:	50a3      	str	r3, [r4, r2]
 80034fc:	e7ab      	b.n	8003456 <_malloc_r+0x22>
 80034fe:	42a3      	cmp	r3, r4
 8003500:	6862      	ldr	r2, [r4, #4]
 8003502:	d1dd      	bne.n	80034c0 <_malloc_r+0x8c>
 8003504:	f8c8 2000 	str.w	r2, [r8]
 8003508:	e7ec      	b.n	80034e4 <_malloc_r+0xb0>
 800350a:	4623      	mov	r3, r4
 800350c:	6864      	ldr	r4, [r4, #4]
 800350e:	e7ac      	b.n	800346a <_malloc_r+0x36>
 8003510:	4634      	mov	r4, r6
 8003512:	6876      	ldr	r6, [r6, #4]
 8003514:	e7b4      	b.n	8003480 <_malloc_r+0x4c>
 8003516:	4613      	mov	r3, r2
 8003518:	e7cc      	b.n	80034b4 <_malloc_r+0x80>
 800351a:	230c      	movs	r3, #12
 800351c:	603b      	str	r3, [r7, #0]
 800351e:	4638      	mov	r0, r7
 8003520:	f000 f80e 	bl	8003540 <__malloc_unlock>
 8003524:	e797      	b.n	8003456 <_malloc_r+0x22>
 8003526:	6025      	str	r5, [r4, #0]
 8003528:	e7dc      	b.n	80034e4 <_malloc_r+0xb0>
 800352a:	605b      	str	r3, [r3, #4]
 800352c:	deff      	udf	#255	; 0xff
 800352e:	bf00      	nop
 8003530:	2000037c 	.word	0x2000037c

08003534 <__malloc_lock>:
 8003534:	4801      	ldr	r0, [pc, #4]	; (800353c <__malloc_lock+0x8>)
 8003536:	f7ff b88a 	b.w	800264e <__retarget_lock_acquire_recursive>
 800353a:	bf00      	nop
 800353c:	20000378 	.word	0x20000378

08003540 <__malloc_unlock>:
 8003540:	4801      	ldr	r0, [pc, #4]	; (8003548 <__malloc_unlock+0x8>)
 8003542:	f7ff b885 	b.w	8002650 <__retarget_lock_release_recursive>
 8003546:	bf00      	nop
 8003548:	20000378 	.word	0x20000378

0800354c <_Balloc>:
 800354c:	b570      	push	{r4, r5, r6, lr}
 800354e:	69c6      	ldr	r6, [r0, #28]
 8003550:	4604      	mov	r4, r0
 8003552:	460d      	mov	r5, r1
 8003554:	b976      	cbnz	r6, 8003574 <_Balloc+0x28>
 8003556:	2010      	movs	r0, #16
 8003558:	f7ff ff44 	bl	80033e4 <malloc>
 800355c:	4602      	mov	r2, r0
 800355e:	61e0      	str	r0, [r4, #28]
 8003560:	b920      	cbnz	r0, 800356c <_Balloc+0x20>
 8003562:	4b18      	ldr	r3, [pc, #96]	; (80035c4 <_Balloc+0x78>)
 8003564:	4818      	ldr	r0, [pc, #96]	; (80035c8 <_Balloc+0x7c>)
 8003566:	216b      	movs	r1, #107	; 0x6b
 8003568:	f000 fe00 	bl	800416c <__assert_func>
 800356c:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8003570:	6006      	str	r6, [r0, #0]
 8003572:	60c6      	str	r6, [r0, #12]
 8003574:	69e6      	ldr	r6, [r4, #28]
 8003576:	68f3      	ldr	r3, [r6, #12]
 8003578:	b183      	cbz	r3, 800359c <_Balloc+0x50>
 800357a:	69e3      	ldr	r3, [r4, #28]
 800357c:	68db      	ldr	r3, [r3, #12]
 800357e:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8003582:	b9b8      	cbnz	r0, 80035b4 <_Balloc+0x68>
 8003584:	2101      	movs	r1, #1
 8003586:	fa01 f605 	lsl.w	r6, r1, r5
 800358a:	1d72      	adds	r2, r6, #5
 800358c:	0092      	lsls	r2, r2, #2
 800358e:	4620      	mov	r0, r4
 8003590:	f000 fe0a 	bl	80041a8 <_calloc_r>
 8003594:	b160      	cbz	r0, 80035b0 <_Balloc+0x64>
 8003596:	e9c0 5601 	strd	r5, r6, [r0, #4]
 800359a:	e00e      	b.n	80035ba <_Balloc+0x6e>
 800359c:	2221      	movs	r2, #33	; 0x21
 800359e:	2104      	movs	r1, #4
 80035a0:	4620      	mov	r0, r4
 80035a2:	f000 fe01 	bl	80041a8 <_calloc_r>
 80035a6:	69e3      	ldr	r3, [r4, #28]
 80035a8:	60f0      	str	r0, [r6, #12]
 80035aa:	68db      	ldr	r3, [r3, #12]
 80035ac:	2b00      	cmp	r3, #0
 80035ae:	d1e4      	bne.n	800357a <_Balloc+0x2e>
 80035b0:	2000      	movs	r0, #0
 80035b2:	bd70      	pop	{r4, r5, r6, pc}
 80035b4:	6802      	ldr	r2, [r0, #0]
 80035b6:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 80035ba:	2300      	movs	r3, #0
 80035bc:	e9c0 3303 	strd	r3, r3, [r0, #12]
 80035c0:	e7f7      	b.n	80035b2 <_Balloc+0x66>
 80035c2:	bf00      	nop
 80035c4:	08004965 	.word	0x08004965
 80035c8:	080049e5 	.word	0x080049e5

080035cc <_Bfree>:
 80035cc:	b570      	push	{r4, r5, r6, lr}
 80035ce:	69c6      	ldr	r6, [r0, #28]
 80035d0:	4605      	mov	r5, r0
 80035d2:	460c      	mov	r4, r1
 80035d4:	b976      	cbnz	r6, 80035f4 <_Bfree+0x28>
 80035d6:	2010      	movs	r0, #16
 80035d8:	f7ff ff04 	bl	80033e4 <malloc>
 80035dc:	4602      	mov	r2, r0
 80035de:	61e8      	str	r0, [r5, #28]
 80035e0:	b920      	cbnz	r0, 80035ec <_Bfree+0x20>
 80035e2:	4b09      	ldr	r3, [pc, #36]	; (8003608 <_Bfree+0x3c>)
 80035e4:	4809      	ldr	r0, [pc, #36]	; (800360c <_Bfree+0x40>)
 80035e6:	218f      	movs	r1, #143	; 0x8f
 80035e8:	f000 fdc0 	bl	800416c <__assert_func>
 80035ec:	e9c0 6601 	strd	r6, r6, [r0, #4]
 80035f0:	6006      	str	r6, [r0, #0]
 80035f2:	60c6      	str	r6, [r0, #12]
 80035f4:	b13c      	cbz	r4, 8003606 <_Bfree+0x3a>
 80035f6:	69eb      	ldr	r3, [r5, #28]
 80035f8:	6862      	ldr	r2, [r4, #4]
 80035fa:	68db      	ldr	r3, [r3, #12]
 80035fc:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8003600:	6021      	str	r1, [r4, #0]
 8003602:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 8003606:	bd70      	pop	{r4, r5, r6, pc}
 8003608:	08004965 	.word	0x08004965
 800360c:	080049e5 	.word	0x080049e5

08003610 <__multadd>:
 8003610:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003614:	690d      	ldr	r5, [r1, #16]
 8003616:	4607      	mov	r7, r0
 8003618:	460c      	mov	r4, r1
 800361a:	461e      	mov	r6, r3
 800361c:	f101 0c14 	add.w	ip, r1, #20
 8003620:	2000      	movs	r0, #0
 8003622:	f8dc 3000 	ldr.w	r3, [ip]
 8003626:	b299      	uxth	r1, r3
 8003628:	fb02 6101 	mla	r1, r2, r1, r6
 800362c:	0c1e      	lsrs	r6, r3, #16
 800362e:	0c0b      	lsrs	r3, r1, #16
 8003630:	fb02 3306 	mla	r3, r2, r6, r3
 8003634:	b289      	uxth	r1, r1
 8003636:	3001      	adds	r0, #1
 8003638:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 800363c:	4285      	cmp	r5, r0
 800363e:	f84c 1b04 	str.w	r1, [ip], #4
 8003642:	ea4f 4613 	mov.w	r6, r3, lsr #16
 8003646:	dcec      	bgt.n	8003622 <__multadd+0x12>
 8003648:	b30e      	cbz	r6, 800368e <__multadd+0x7e>
 800364a:	68a3      	ldr	r3, [r4, #8]
 800364c:	42ab      	cmp	r3, r5
 800364e:	dc19      	bgt.n	8003684 <__multadd+0x74>
 8003650:	6861      	ldr	r1, [r4, #4]
 8003652:	4638      	mov	r0, r7
 8003654:	3101      	adds	r1, #1
 8003656:	f7ff ff79 	bl	800354c <_Balloc>
 800365a:	4680      	mov	r8, r0
 800365c:	b928      	cbnz	r0, 800366a <__multadd+0x5a>
 800365e:	4602      	mov	r2, r0
 8003660:	4b0c      	ldr	r3, [pc, #48]	; (8003694 <__multadd+0x84>)
 8003662:	480d      	ldr	r0, [pc, #52]	; (8003698 <__multadd+0x88>)
 8003664:	21ba      	movs	r1, #186	; 0xba
 8003666:	f000 fd81 	bl	800416c <__assert_func>
 800366a:	6922      	ldr	r2, [r4, #16]
 800366c:	3202      	adds	r2, #2
 800366e:	f104 010c 	add.w	r1, r4, #12
 8003672:	0092      	lsls	r2, r2, #2
 8003674:	300c      	adds	r0, #12
 8003676:	f000 fd6b 	bl	8004150 <memcpy>
 800367a:	4621      	mov	r1, r4
 800367c:	4638      	mov	r0, r7
 800367e:	f7ff ffa5 	bl	80035cc <_Bfree>
 8003682:	4644      	mov	r4, r8
 8003684:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 8003688:	3501      	adds	r5, #1
 800368a:	615e      	str	r6, [r3, #20]
 800368c:	6125      	str	r5, [r4, #16]
 800368e:	4620      	mov	r0, r4
 8003690:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003694:	080049d4 	.word	0x080049d4
 8003698:	080049e5 	.word	0x080049e5

0800369c <__hi0bits>:
 800369c:	0c03      	lsrs	r3, r0, #16
 800369e:	041b      	lsls	r3, r3, #16
 80036a0:	b9d3      	cbnz	r3, 80036d8 <__hi0bits+0x3c>
 80036a2:	0400      	lsls	r0, r0, #16
 80036a4:	2310      	movs	r3, #16
 80036a6:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
 80036aa:	bf04      	itt	eq
 80036ac:	0200      	lsleq	r0, r0, #8
 80036ae:	3308      	addeq	r3, #8
 80036b0:	f010 4f70 	tst.w	r0, #4026531840	; 0xf0000000
 80036b4:	bf04      	itt	eq
 80036b6:	0100      	lsleq	r0, r0, #4
 80036b8:	3304      	addeq	r3, #4
 80036ba:	f010 4f40 	tst.w	r0, #3221225472	; 0xc0000000
 80036be:	bf04      	itt	eq
 80036c0:	0080      	lsleq	r0, r0, #2
 80036c2:	3302      	addeq	r3, #2
 80036c4:	2800      	cmp	r0, #0
 80036c6:	db05      	blt.n	80036d4 <__hi0bits+0x38>
 80036c8:	f010 4f80 	tst.w	r0, #1073741824	; 0x40000000
 80036cc:	f103 0301 	add.w	r3, r3, #1
 80036d0:	bf08      	it	eq
 80036d2:	2320      	moveq	r3, #32
 80036d4:	4618      	mov	r0, r3
 80036d6:	4770      	bx	lr
 80036d8:	2300      	movs	r3, #0
 80036da:	e7e4      	b.n	80036a6 <__hi0bits+0xa>

080036dc <__lo0bits>:
 80036dc:	6803      	ldr	r3, [r0, #0]
 80036de:	f013 0207 	ands.w	r2, r3, #7
 80036e2:	d00c      	beq.n	80036fe <__lo0bits+0x22>
 80036e4:	07d9      	lsls	r1, r3, #31
 80036e6:	d422      	bmi.n	800372e <__lo0bits+0x52>
 80036e8:	079a      	lsls	r2, r3, #30
 80036ea:	bf49      	itett	mi
 80036ec:	085b      	lsrmi	r3, r3, #1
 80036ee:	089b      	lsrpl	r3, r3, #2
 80036f0:	6003      	strmi	r3, [r0, #0]
 80036f2:	2201      	movmi	r2, #1
 80036f4:	bf5c      	itt	pl
 80036f6:	6003      	strpl	r3, [r0, #0]
 80036f8:	2202      	movpl	r2, #2
 80036fa:	4610      	mov	r0, r2
 80036fc:	4770      	bx	lr
 80036fe:	b299      	uxth	r1, r3
 8003700:	b909      	cbnz	r1, 8003706 <__lo0bits+0x2a>
 8003702:	0c1b      	lsrs	r3, r3, #16
 8003704:	2210      	movs	r2, #16
 8003706:	b2d9      	uxtb	r1, r3
 8003708:	b909      	cbnz	r1, 800370e <__lo0bits+0x32>
 800370a:	3208      	adds	r2, #8
 800370c:	0a1b      	lsrs	r3, r3, #8
 800370e:	0719      	lsls	r1, r3, #28
 8003710:	bf04      	itt	eq
 8003712:	091b      	lsreq	r3, r3, #4
 8003714:	3204      	addeq	r2, #4
 8003716:	0799      	lsls	r1, r3, #30
 8003718:	bf04      	itt	eq
 800371a:	089b      	lsreq	r3, r3, #2
 800371c:	3202      	addeq	r2, #2
 800371e:	07d9      	lsls	r1, r3, #31
 8003720:	d403      	bmi.n	800372a <__lo0bits+0x4e>
 8003722:	085b      	lsrs	r3, r3, #1
 8003724:	f102 0201 	add.w	r2, r2, #1
 8003728:	d003      	beq.n	8003732 <__lo0bits+0x56>
 800372a:	6003      	str	r3, [r0, #0]
 800372c:	e7e5      	b.n	80036fa <__lo0bits+0x1e>
 800372e:	2200      	movs	r2, #0
 8003730:	e7e3      	b.n	80036fa <__lo0bits+0x1e>
 8003732:	2220      	movs	r2, #32
 8003734:	e7e1      	b.n	80036fa <__lo0bits+0x1e>
	...

08003738 <__i2b>:
 8003738:	b510      	push	{r4, lr}
 800373a:	460c      	mov	r4, r1
 800373c:	2101      	movs	r1, #1
 800373e:	f7ff ff05 	bl	800354c <_Balloc>
 8003742:	4602      	mov	r2, r0
 8003744:	b928      	cbnz	r0, 8003752 <__i2b+0x1a>
 8003746:	4b05      	ldr	r3, [pc, #20]	; (800375c <__i2b+0x24>)
 8003748:	4805      	ldr	r0, [pc, #20]	; (8003760 <__i2b+0x28>)
 800374a:	f240 1145 	movw	r1, #325	; 0x145
 800374e:	f000 fd0d 	bl	800416c <__assert_func>
 8003752:	2301      	movs	r3, #1
 8003754:	6144      	str	r4, [r0, #20]
 8003756:	6103      	str	r3, [r0, #16]
 8003758:	bd10      	pop	{r4, pc}
 800375a:	bf00      	nop
 800375c:	080049d4 	.word	0x080049d4
 8003760:	080049e5 	.word	0x080049e5

08003764 <__multiply>:
 8003764:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003768:	4691      	mov	r9, r2
 800376a:	690a      	ldr	r2, [r1, #16]
 800376c:	f8d9 3010 	ldr.w	r3, [r9, #16]
 8003770:	429a      	cmp	r2, r3
 8003772:	bfb8      	it	lt
 8003774:	460b      	movlt	r3, r1
 8003776:	460c      	mov	r4, r1
 8003778:	bfbc      	itt	lt
 800377a:	464c      	movlt	r4, r9
 800377c:	4699      	movlt	r9, r3
 800377e:	6927      	ldr	r7, [r4, #16]
 8003780:	f8d9 a010 	ldr.w	sl, [r9, #16]
 8003784:	68a3      	ldr	r3, [r4, #8]
 8003786:	6861      	ldr	r1, [r4, #4]
 8003788:	eb07 060a 	add.w	r6, r7, sl
 800378c:	42b3      	cmp	r3, r6
 800378e:	b085      	sub	sp, #20
 8003790:	bfb8      	it	lt
 8003792:	3101      	addlt	r1, #1
 8003794:	f7ff feda 	bl	800354c <_Balloc>
 8003798:	b930      	cbnz	r0, 80037a8 <__multiply+0x44>
 800379a:	4602      	mov	r2, r0
 800379c:	4b44      	ldr	r3, [pc, #272]	; (80038b0 <__multiply+0x14c>)
 800379e:	4845      	ldr	r0, [pc, #276]	; (80038b4 <__multiply+0x150>)
 80037a0:	f44f 71b1 	mov.w	r1, #354	; 0x162
 80037a4:	f000 fce2 	bl	800416c <__assert_func>
 80037a8:	f100 0514 	add.w	r5, r0, #20
 80037ac:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 80037b0:	462b      	mov	r3, r5
 80037b2:	2200      	movs	r2, #0
 80037b4:	4543      	cmp	r3, r8
 80037b6:	d321      	bcc.n	80037fc <__multiply+0x98>
 80037b8:	f104 0314 	add.w	r3, r4, #20
 80037bc:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 80037c0:	f109 0314 	add.w	r3, r9, #20
 80037c4:	eb03 028a 	add.w	r2, r3, sl, lsl #2
 80037c8:	9202      	str	r2, [sp, #8]
 80037ca:	1b3a      	subs	r2, r7, r4
 80037cc:	3a15      	subs	r2, #21
 80037ce:	f022 0203 	bic.w	r2, r2, #3
 80037d2:	3204      	adds	r2, #4
 80037d4:	f104 0115 	add.w	r1, r4, #21
 80037d8:	428f      	cmp	r7, r1
 80037da:	bf38      	it	cc
 80037dc:	2204      	movcc	r2, #4
 80037de:	9201      	str	r2, [sp, #4]
 80037e0:	9a02      	ldr	r2, [sp, #8]
 80037e2:	9303      	str	r3, [sp, #12]
 80037e4:	429a      	cmp	r2, r3
 80037e6:	d80c      	bhi.n	8003802 <__multiply+0x9e>
 80037e8:	2e00      	cmp	r6, #0
 80037ea:	dd03      	ble.n	80037f4 <__multiply+0x90>
 80037ec:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 80037f0:	2b00      	cmp	r3, #0
 80037f2:	d05b      	beq.n	80038ac <__multiply+0x148>
 80037f4:	6106      	str	r6, [r0, #16]
 80037f6:	b005      	add	sp, #20
 80037f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80037fc:	f843 2b04 	str.w	r2, [r3], #4
 8003800:	e7d8      	b.n	80037b4 <__multiply+0x50>
 8003802:	f8b3 a000 	ldrh.w	sl, [r3]
 8003806:	f1ba 0f00 	cmp.w	sl, #0
 800380a:	d024      	beq.n	8003856 <__multiply+0xf2>
 800380c:	f104 0e14 	add.w	lr, r4, #20
 8003810:	46a9      	mov	r9, r5
 8003812:	f04f 0c00 	mov.w	ip, #0
 8003816:	f85e 2b04 	ldr.w	r2, [lr], #4
 800381a:	f8d9 1000 	ldr.w	r1, [r9]
 800381e:	fa1f fb82 	uxth.w	fp, r2
 8003822:	b289      	uxth	r1, r1
 8003824:	fb0a 110b 	mla	r1, sl, fp, r1
 8003828:	ea4f 4b12 	mov.w	fp, r2, lsr #16
 800382c:	f8d9 2000 	ldr.w	r2, [r9]
 8003830:	4461      	add	r1, ip
 8003832:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 8003836:	fb0a c20b 	mla	r2, sl, fp, ip
 800383a:	eb02 4211 	add.w	r2, r2, r1, lsr #16
 800383e:	b289      	uxth	r1, r1
 8003840:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 8003844:	4577      	cmp	r7, lr
 8003846:	f849 1b04 	str.w	r1, [r9], #4
 800384a:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 800384e:	d8e2      	bhi.n	8003816 <__multiply+0xb2>
 8003850:	9a01      	ldr	r2, [sp, #4]
 8003852:	f845 c002 	str.w	ip, [r5, r2]
 8003856:	9a03      	ldr	r2, [sp, #12]
 8003858:	f8b2 9002 	ldrh.w	r9, [r2, #2]
 800385c:	3304      	adds	r3, #4
 800385e:	f1b9 0f00 	cmp.w	r9, #0
 8003862:	d021      	beq.n	80038a8 <__multiply+0x144>
 8003864:	6829      	ldr	r1, [r5, #0]
 8003866:	f104 0c14 	add.w	ip, r4, #20
 800386a:	46ae      	mov	lr, r5
 800386c:	f04f 0a00 	mov.w	sl, #0
 8003870:	f8bc b000 	ldrh.w	fp, [ip]
 8003874:	f8be 2002 	ldrh.w	r2, [lr, #2]
 8003878:	fb09 220b 	mla	r2, r9, fp, r2
 800387c:	4452      	add	r2, sl
 800387e:	b289      	uxth	r1, r1
 8003880:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 8003884:	f84e 1b04 	str.w	r1, [lr], #4
 8003888:	f85c 1b04 	ldr.w	r1, [ip], #4
 800388c:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 8003890:	f8be 1000 	ldrh.w	r1, [lr]
 8003894:	fb09 110a 	mla	r1, r9, sl, r1
 8003898:	eb01 4112 	add.w	r1, r1, r2, lsr #16
 800389c:	4567      	cmp	r7, ip
 800389e:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 80038a2:	d8e5      	bhi.n	8003870 <__multiply+0x10c>
 80038a4:	9a01      	ldr	r2, [sp, #4]
 80038a6:	50a9      	str	r1, [r5, r2]
 80038a8:	3504      	adds	r5, #4
 80038aa:	e799      	b.n	80037e0 <__multiply+0x7c>
 80038ac:	3e01      	subs	r6, #1
 80038ae:	e79b      	b.n	80037e8 <__multiply+0x84>
 80038b0:	080049d4 	.word	0x080049d4
 80038b4:	080049e5 	.word	0x080049e5

080038b8 <__pow5mult>:
 80038b8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80038bc:	4615      	mov	r5, r2
 80038be:	f012 0203 	ands.w	r2, r2, #3
 80038c2:	4606      	mov	r6, r0
 80038c4:	460f      	mov	r7, r1
 80038c6:	d007      	beq.n	80038d8 <__pow5mult+0x20>
 80038c8:	4c25      	ldr	r4, [pc, #148]	; (8003960 <__pow5mult+0xa8>)
 80038ca:	3a01      	subs	r2, #1
 80038cc:	2300      	movs	r3, #0
 80038ce:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 80038d2:	f7ff fe9d 	bl	8003610 <__multadd>
 80038d6:	4607      	mov	r7, r0
 80038d8:	10ad      	asrs	r5, r5, #2
 80038da:	d03d      	beq.n	8003958 <__pow5mult+0xa0>
 80038dc:	69f4      	ldr	r4, [r6, #28]
 80038de:	b97c      	cbnz	r4, 8003900 <__pow5mult+0x48>
 80038e0:	2010      	movs	r0, #16
 80038e2:	f7ff fd7f 	bl	80033e4 <malloc>
 80038e6:	4602      	mov	r2, r0
 80038e8:	61f0      	str	r0, [r6, #28]
 80038ea:	b928      	cbnz	r0, 80038f8 <__pow5mult+0x40>
 80038ec:	4b1d      	ldr	r3, [pc, #116]	; (8003964 <__pow5mult+0xac>)
 80038ee:	481e      	ldr	r0, [pc, #120]	; (8003968 <__pow5mult+0xb0>)
 80038f0:	f240 11b3 	movw	r1, #435	; 0x1b3
 80038f4:	f000 fc3a 	bl	800416c <__assert_func>
 80038f8:	e9c0 4401 	strd	r4, r4, [r0, #4]
 80038fc:	6004      	str	r4, [r0, #0]
 80038fe:	60c4      	str	r4, [r0, #12]
 8003900:	f8d6 801c 	ldr.w	r8, [r6, #28]
 8003904:	f8d8 4008 	ldr.w	r4, [r8, #8]
 8003908:	b94c      	cbnz	r4, 800391e <__pow5mult+0x66>
 800390a:	f240 2171 	movw	r1, #625	; 0x271
 800390e:	4630      	mov	r0, r6
 8003910:	f7ff ff12 	bl	8003738 <__i2b>
 8003914:	2300      	movs	r3, #0
 8003916:	f8c8 0008 	str.w	r0, [r8, #8]
 800391a:	4604      	mov	r4, r0
 800391c:	6003      	str	r3, [r0, #0]
 800391e:	f04f 0900 	mov.w	r9, #0
 8003922:	07eb      	lsls	r3, r5, #31
 8003924:	d50a      	bpl.n	800393c <__pow5mult+0x84>
 8003926:	4639      	mov	r1, r7
 8003928:	4622      	mov	r2, r4
 800392a:	4630      	mov	r0, r6
 800392c:	f7ff ff1a 	bl	8003764 <__multiply>
 8003930:	4639      	mov	r1, r7
 8003932:	4680      	mov	r8, r0
 8003934:	4630      	mov	r0, r6
 8003936:	f7ff fe49 	bl	80035cc <_Bfree>
 800393a:	4647      	mov	r7, r8
 800393c:	106d      	asrs	r5, r5, #1
 800393e:	d00b      	beq.n	8003958 <__pow5mult+0xa0>
 8003940:	6820      	ldr	r0, [r4, #0]
 8003942:	b938      	cbnz	r0, 8003954 <__pow5mult+0x9c>
 8003944:	4622      	mov	r2, r4
 8003946:	4621      	mov	r1, r4
 8003948:	4630      	mov	r0, r6
 800394a:	f7ff ff0b 	bl	8003764 <__multiply>
 800394e:	6020      	str	r0, [r4, #0]
 8003950:	f8c0 9000 	str.w	r9, [r0]
 8003954:	4604      	mov	r4, r0
 8003956:	e7e4      	b.n	8003922 <__pow5mult+0x6a>
 8003958:	4638      	mov	r0, r7
 800395a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800395e:	bf00      	nop
 8003960:	08004b30 	.word	0x08004b30
 8003964:	08004965 	.word	0x08004965
 8003968:	080049e5 	.word	0x080049e5

0800396c <__lshift>:
 800396c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003970:	460c      	mov	r4, r1
 8003972:	6849      	ldr	r1, [r1, #4]
 8003974:	6923      	ldr	r3, [r4, #16]
 8003976:	eb03 1862 	add.w	r8, r3, r2, asr #5
 800397a:	68a3      	ldr	r3, [r4, #8]
 800397c:	4607      	mov	r7, r0
 800397e:	4691      	mov	r9, r2
 8003980:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8003984:	f108 0601 	add.w	r6, r8, #1
 8003988:	42b3      	cmp	r3, r6
 800398a:	db0b      	blt.n	80039a4 <__lshift+0x38>
 800398c:	4638      	mov	r0, r7
 800398e:	f7ff fddd 	bl	800354c <_Balloc>
 8003992:	4605      	mov	r5, r0
 8003994:	b948      	cbnz	r0, 80039aa <__lshift+0x3e>
 8003996:	4602      	mov	r2, r0
 8003998:	4b28      	ldr	r3, [pc, #160]	; (8003a3c <__lshift+0xd0>)
 800399a:	4829      	ldr	r0, [pc, #164]	; (8003a40 <__lshift+0xd4>)
 800399c:	f44f 71ef 	mov.w	r1, #478	; 0x1de
 80039a0:	f000 fbe4 	bl	800416c <__assert_func>
 80039a4:	3101      	adds	r1, #1
 80039a6:	005b      	lsls	r3, r3, #1
 80039a8:	e7ee      	b.n	8003988 <__lshift+0x1c>
 80039aa:	2300      	movs	r3, #0
 80039ac:	f100 0114 	add.w	r1, r0, #20
 80039b0:	f100 0210 	add.w	r2, r0, #16
 80039b4:	4618      	mov	r0, r3
 80039b6:	4553      	cmp	r3, sl
 80039b8:	db33      	blt.n	8003a22 <__lshift+0xb6>
 80039ba:	6920      	ldr	r0, [r4, #16]
 80039bc:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 80039c0:	f104 0314 	add.w	r3, r4, #20
 80039c4:	f019 091f 	ands.w	r9, r9, #31
 80039c8:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 80039cc:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 80039d0:	d02b      	beq.n	8003a2a <__lshift+0xbe>
 80039d2:	f1c9 0e20 	rsb	lr, r9, #32
 80039d6:	468a      	mov	sl, r1
 80039d8:	2200      	movs	r2, #0
 80039da:	6818      	ldr	r0, [r3, #0]
 80039dc:	fa00 f009 	lsl.w	r0, r0, r9
 80039e0:	4310      	orrs	r0, r2
 80039e2:	f84a 0b04 	str.w	r0, [sl], #4
 80039e6:	f853 2b04 	ldr.w	r2, [r3], #4
 80039ea:	459c      	cmp	ip, r3
 80039ec:	fa22 f20e 	lsr.w	r2, r2, lr
 80039f0:	d8f3      	bhi.n	80039da <__lshift+0x6e>
 80039f2:	ebac 0304 	sub.w	r3, ip, r4
 80039f6:	3b15      	subs	r3, #21
 80039f8:	f023 0303 	bic.w	r3, r3, #3
 80039fc:	3304      	adds	r3, #4
 80039fe:	f104 0015 	add.w	r0, r4, #21
 8003a02:	4584      	cmp	ip, r0
 8003a04:	bf38      	it	cc
 8003a06:	2304      	movcc	r3, #4
 8003a08:	50ca      	str	r2, [r1, r3]
 8003a0a:	b10a      	cbz	r2, 8003a10 <__lshift+0xa4>
 8003a0c:	f108 0602 	add.w	r6, r8, #2
 8003a10:	3e01      	subs	r6, #1
 8003a12:	4638      	mov	r0, r7
 8003a14:	612e      	str	r6, [r5, #16]
 8003a16:	4621      	mov	r1, r4
 8003a18:	f7ff fdd8 	bl	80035cc <_Bfree>
 8003a1c:	4628      	mov	r0, r5
 8003a1e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003a22:	f842 0f04 	str.w	r0, [r2, #4]!
 8003a26:	3301      	adds	r3, #1
 8003a28:	e7c5      	b.n	80039b6 <__lshift+0x4a>
 8003a2a:	3904      	subs	r1, #4
 8003a2c:	f853 2b04 	ldr.w	r2, [r3], #4
 8003a30:	f841 2f04 	str.w	r2, [r1, #4]!
 8003a34:	459c      	cmp	ip, r3
 8003a36:	d8f9      	bhi.n	8003a2c <__lshift+0xc0>
 8003a38:	e7ea      	b.n	8003a10 <__lshift+0xa4>
 8003a3a:	bf00      	nop
 8003a3c:	080049d4 	.word	0x080049d4
 8003a40:	080049e5 	.word	0x080049e5

08003a44 <__mcmp>:
 8003a44:	b530      	push	{r4, r5, lr}
 8003a46:	6902      	ldr	r2, [r0, #16]
 8003a48:	690c      	ldr	r4, [r1, #16]
 8003a4a:	1b12      	subs	r2, r2, r4
 8003a4c:	d10e      	bne.n	8003a6c <__mcmp+0x28>
 8003a4e:	f100 0314 	add.w	r3, r0, #20
 8003a52:	3114      	adds	r1, #20
 8003a54:	eb03 0084 	add.w	r0, r3, r4, lsl #2
 8003a58:	eb01 0184 	add.w	r1, r1, r4, lsl #2
 8003a5c:	f850 5d04 	ldr.w	r5, [r0, #-4]!
 8003a60:	f851 4d04 	ldr.w	r4, [r1, #-4]!
 8003a64:	42a5      	cmp	r5, r4
 8003a66:	d003      	beq.n	8003a70 <__mcmp+0x2c>
 8003a68:	d305      	bcc.n	8003a76 <__mcmp+0x32>
 8003a6a:	2201      	movs	r2, #1
 8003a6c:	4610      	mov	r0, r2
 8003a6e:	bd30      	pop	{r4, r5, pc}
 8003a70:	4283      	cmp	r3, r0
 8003a72:	d3f3      	bcc.n	8003a5c <__mcmp+0x18>
 8003a74:	e7fa      	b.n	8003a6c <__mcmp+0x28>
 8003a76:	f04f 32ff 	mov.w	r2, #4294967295
 8003a7a:	e7f7      	b.n	8003a6c <__mcmp+0x28>

08003a7c <__mdiff>:
 8003a7c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003a80:	460c      	mov	r4, r1
 8003a82:	4606      	mov	r6, r0
 8003a84:	4611      	mov	r1, r2
 8003a86:	4620      	mov	r0, r4
 8003a88:	4690      	mov	r8, r2
 8003a8a:	f7ff ffdb 	bl	8003a44 <__mcmp>
 8003a8e:	1e05      	subs	r5, r0, #0
 8003a90:	d110      	bne.n	8003ab4 <__mdiff+0x38>
 8003a92:	4629      	mov	r1, r5
 8003a94:	4630      	mov	r0, r6
 8003a96:	f7ff fd59 	bl	800354c <_Balloc>
 8003a9a:	b930      	cbnz	r0, 8003aaa <__mdiff+0x2e>
 8003a9c:	4b3a      	ldr	r3, [pc, #232]	; (8003b88 <__mdiff+0x10c>)
 8003a9e:	4602      	mov	r2, r0
 8003aa0:	f240 2137 	movw	r1, #567	; 0x237
 8003aa4:	4839      	ldr	r0, [pc, #228]	; (8003b8c <__mdiff+0x110>)
 8003aa6:	f000 fb61 	bl	800416c <__assert_func>
 8003aaa:	2301      	movs	r3, #1
 8003aac:	e9c0 3504 	strd	r3, r5, [r0, #16]
 8003ab0:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003ab4:	bfa4      	itt	ge
 8003ab6:	4643      	movge	r3, r8
 8003ab8:	46a0      	movge	r8, r4
 8003aba:	4630      	mov	r0, r6
 8003abc:	f8d8 1004 	ldr.w	r1, [r8, #4]
 8003ac0:	bfa6      	itte	ge
 8003ac2:	461c      	movge	r4, r3
 8003ac4:	2500      	movge	r5, #0
 8003ac6:	2501      	movlt	r5, #1
 8003ac8:	f7ff fd40 	bl	800354c <_Balloc>
 8003acc:	b920      	cbnz	r0, 8003ad8 <__mdiff+0x5c>
 8003ace:	4b2e      	ldr	r3, [pc, #184]	; (8003b88 <__mdiff+0x10c>)
 8003ad0:	4602      	mov	r2, r0
 8003ad2:	f240 2145 	movw	r1, #581	; 0x245
 8003ad6:	e7e5      	b.n	8003aa4 <__mdiff+0x28>
 8003ad8:	f8d8 7010 	ldr.w	r7, [r8, #16]
 8003adc:	6926      	ldr	r6, [r4, #16]
 8003ade:	60c5      	str	r5, [r0, #12]
 8003ae0:	f104 0914 	add.w	r9, r4, #20
 8003ae4:	f108 0514 	add.w	r5, r8, #20
 8003ae8:	f100 0e14 	add.w	lr, r0, #20
 8003aec:	eb05 0c87 	add.w	ip, r5, r7, lsl #2
 8003af0:	eb09 0686 	add.w	r6, r9, r6, lsl #2
 8003af4:	f108 0210 	add.w	r2, r8, #16
 8003af8:	46f2      	mov	sl, lr
 8003afa:	2100      	movs	r1, #0
 8003afc:	f859 3b04 	ldr.w	r3, [r9], #4
 8003b00:	f852 bf04 	ldr.w	fp, [r2, #4]!
 8003b04:	fa11 f88b 	uxtah	r8, r1, fp
 8003b08:	b299      	uxth	r1, r3
 8003b0a:	0c1b      	lsrs	r3, r3, #16
 8003b0c:	eba8 0801 	sub.w	r8, r8, r1
 8003b10:	ebc3 431b 	rsb	r3, r3, fp, lsr #16
 8003b14:	eb03 4328 	add.w	r3, r3, r8, asr #16
 8003b18:	fa1f f888 	uxth.w	r8, r8
 8003b1c:	1419      	asrs	r1, r3, #16
 8003b1e:	454e      	cmp	r6, r9
 8003b20:	ea48 4303 	orr.w	r3, r8, r3, lsl #16
 8003b24:	f84a 3b04 	str.w	r3, [sl], #4
 8003b28:	d8e8      	bhi.n	8003afc <__mdiff+0x80>
 8003b2a:	1b33      	subs	r3, r6, r4
 8003b2c:	3b15      	subs	r3, #21
 8003b2e:	f023 0303 	bic.w	r3, r3, #3
 8003b32:	3304      	adds	r3, #4
 8003b34:	3415      	adds	r4, #21
 8003b36:	42a6      	cmp	r6, r4
 8003b38:	bf38      	it	cc
 8003b3a:	2304      	movcc	r3, #4
 8003b3c:	441d      	add	r5, r3
 8003b3e:	4473      	add	r3, lr
 8003b40:	469e      	mov	lr, r3
 8003b42:	462e      	mov	r6, r5
 8003b44:	4566      	cmp	r6, ip
 8003b46:	d30e      	bcc.n	8003b66 <__mdiff+0xea>
 8003b48:	f10c 0203 	add.w	r2, ip, #3
 8003b4c:	1b52      	subs	r2, r2, r5
 8003b4e:	f022 0203 	bic.w	r2, r2, #3
 8003b52:	3d03      	subs	r5, #3
 8003b54:	45ac      	cmp	ip, r5
 8003b56:	bf38      	it	cc
 8003b58:	2200      	movcc	r2, #0
 8003b5a:	4413      	add	r3, r2
 8003b5c:	f853 2d04 	ldr.w	r2, [r3, #-4]!
 8003b60:	b17a      	cbz	r2, 8003b82 <__mdiff+0x106>
 8003b62:	6107      	str	r7, [r0, #16]
 8003b64:	e7a4      	b.n	8003ab0 <__mdiff+0x34>
 8003b66:	f856 8b04 	ldr.w	r8, [r6], #4
 8003b6a:	fa11 f288 	uxtah	r2, r1, r8
 8003b6e:	1414      	asrs	r4, r2, #16
 8003b70:	eb04 4418 	add.w	r4, r4, r8, lsr #16
 8003b74:	b292      	uxth	r2, r2
 8003b76:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 8003b7a:	f84e 2b04 	str.w	r2, [lr], #4
 8003b7e:	1421      	asrs	r1, r4, #16
 8003b80:	e7e0      	b.n	8003b44 <__mdiff+0xc8>
 8003b82:	3f01      	subs	r7, #1
 8003b84:	e7ea      	b.n	8003b5c <__mdiff+0xe0>
 8003b86:	bf00      	nop
 8003b88:	080049d4 	.word	0x080049d4
 8003b8c:	080049e5 	.word	0x080049e5

08003b90 <__d2b>:
 8003b90:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8003b94:	460f      	mov	r7, r1
 8003b96:	2101      	movs	r1, #1
 8003b98:	ec59 8b10 	vmov	r8, r9, d0
 8003b9c:	4616      	mov	r6, r2
 8003b9e:	f7ff fcd5 	bl	800354c <_Balloc>
 8003ba2:	4604      	mov	r4, r0
 8003ba4:	b930      	cbnz	r0, 8003bb4 <__d2b+0x24>
 8003ba6:	4602      	mov	r2, r0
 8003ba8:	4b24      	ldr	r3, [pc, #144]	; (8003c3c <__d2b+0xac>)
 8003baa:	4825      	ldr	r0, [pc, #148]	; (8003c40 <__d2b+0xb0>)
 8003bac:	f240 310f 	movw	r1, #783	; 0x30f
 8003bb0:	f000 fadc 	bl	800416c <__assert_func>
 8003bb4:	f3c9 550a 	ubfx	r5, r9, #20, #11
 8003bb8:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8003bbc:	bb2d      	cbnz	r5, 8003c0a <__d2b+0x7a>
 8003bbe:	9301      	str	r3, [sp, #4]
 8003bc0:	f1b8 0300 	subs.w	r3, r8, #0
 8003bc4:	d026      	beq.n	8003c14 <__d2b+0x84>
 8003bc6:	4668      	mov	r0, sp
 8003bc8:	9300      	str	r3, [sp, #0]
 8003bca:	f7ff fd87 	bl	80036dc <__lo0bits>
 8003bce:	e9dd 1200 	ldrd	r1, r2, [sp]
 8003bd2:	b1e8      	cbz	r0, 8003c10 <__d2b+0x80>
 8003bd4:	f1c0 0320 	rsb	r3, r0, #32
 8003bd8:	fa02 f303 	lsl.w	r3, r2, r3
 8003bdc:	430b      	orrs	r3, r1
 8003bde:	40c2      	lsrs	r2, r0
 8003be0:	6163      	str	r3, [r4, #20]
 8003be2:	9201      	str	r2, [sp, #4]
 8003be4:	9b01      	ldr	r3, [sp, #4]
 8003be6:	61a3      	str	r3, [r4, #24]
 8003be8:	2b00      	cmp	r3, #0
 8003bea:	bf14      	ite	ne
 8003bec:	2202      	movne	r2, #2
 8003bee:	2201      	moveq	r2, #1
 8003bf0:	6122      	str	r2, [r4, #16]
 8003bf2:	b1bd      	cbz	r5, 8003c24 <__d2b+0x94>
 8003bf4:	f2a5 4533 	subw	r5, r5, #1075	; 0x433
 8003bf8:	4405      	add	r5, r0
 8003bfa:	603d      	str	r5, [r7, #0]
 8003bfc:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 8003c00:	6030      	str	r0, [r6, #0]
 8003c02:	4620      	mov	r0, r4
 8003c04:	b003      	add	sp, #12
 8003c06:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8003c0a:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8003c0e:	e7d6      	b.n	8003bbe <__d2b+0x2e>
 8003c10:	6161      	str	r1, [r4, #20]
 8003c12:	e7e7      	b.n	8003be4 <__d2b+0x54>
 8003c14:	a801      	add	r0, sp, #4
 8003c16:	f7ff fd61 	bl	80036dc <__lo0bits>
 8003c1a:	9b01      	ldr	r3, [sp, #4]
 8003c1c:	6163      	str	r3, [r4, #20]
 8003c1e:	3020      	adds	r0, #32
 8003c20:	2201      	movs	r2, #1
 8003c22:	e7e5      	b.n	8003bf0 <__d2b+0x60>
 8003c24:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8003c28:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 8003c2c:	6038      	str	r0, [r7, #0]
 8003c2e:	6918      	ldr	r0, [r3, #16]
 8003c30:	f7ff fd34 	bl	800369c <__hi0bits>
 8003c34:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 8003c38:	e7e2      	b.n	8003c00 <__d2b+0x70>
 8003c3a:	bf00      	nop
 8003c3c:	080049d4 	.word	0x080049d4
 8003c40:	080049e5 	.word	0x080049e5

08003c44 <__sfputc_r>:
 8003c44:	6893      	ldr	r3, [r2, #8]
 8003c46:	3b01      	subs	r3, #1
 8003c48:	2b00      	cmp	r3, #0
 8003c4a:	b410      	push	{r4}
 8003c4c:	6093      	str	r3, [r2, #8]
 8003c4e:	da08      	bge.n	8003c62 <__sfputc_r+0x1e>
 8003c50:	6994      	ldr	r4, [r2, #24]
 8003c52:	42a3      	cmp	r3, r4
 8003c54:	db01      	blt.n	8003c5a <__sfputc_r+0x16>
 8003c56:	290a      	cmp	r1, #10
 8003c58:	d103      	bne.n	8003c62 <__sfputc_r+0x1e>
 8003c5a:	f85d 4b04 	ldr.w	r4, [sp], #4
 8003c5e:	f7fe bbea 	b.w	8002436 <__swbuf_r>
 8003c62:	6813      	ldr	r3, [r2, #0]
 8003c64:	1c58      	adds	r0, r3, #1
 8003c66:	6010      	str	r0, [r2, #0]
 8003c68:	7019      	strb	r1, [r3, #0]
 8003c6a:	4608      	mov	r0, r1
 8003c6c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8003c70:	4770      	bx	lr

08003c72 <__sfputs_r>:
 8003c72:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003c74:	4606      	mov	r6, r0
 8003c76:	460f      	mov	r7, r1
 8003c78:	4614      	mov	r4, r2
 8003c7a:	18d5      	adds	r5, r2, r3
 8003c7c:	42ac      	cmp	r4, r5
 8003c7e:	d101      	bne.n	8003c84 <__sfputs_r+0x12>
 8003c80:	2000      	movs	r0, #0
 8003c82:	e007      	b.n	8003c94 <__sfputs_r+0x22>
 8003c84:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003c88:	463a      	mov	r2, r7
 8003c8a:	4630      	mov	r0, r6
 8003c8c:	f7ff ffda 	bl	8003c44 <__sfputc_r>
 8003c90:	1c43      	adds	r3, r0, #1
 8003c92:	d1f3      	bne.n	8003c7c <__sfputs_r+0xa>
 8003c94:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08003c98 <_vfiprintf_r>:
 8003c98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003c9c:	460d      	mov	r5, r1
 8003c9e:	b09d      	sub	sp, #116	; 0x74
 8003ca0:	4614      	mov	r4, r2
 8003ca2:	4698      	mov	r8, r3
 8003ca4:	4606      	mov	r6, r0
 8003ca6:	b118      	cbz	r0, 8003cb0 <_vfiprintf_r+0x18>
 8003ca8:	6a03      	ldr	r3, [r0, #32]
 8003caa:	b90b      	cbnz	r3, 8003cb0 <_vfiprintf_r+0x18>
 8003cac:	f7fe fadc 	bl	8002268 <__sinit>
 8003cb0:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8003cb2:	07d9      	lsls	r1, r3, #31
 8003cb4:	d405      	bmi.n	8003cc2 <_vfiprintf_r+0x2a>
 8003cb6:	89ab      	ldrh	r3, [r5, #12]
 8003cb8:	059a      	lsls	r2, r3, #22
 8003cba:	d402      	bmi.n	8003cc2 <_vfiprintf_r+0x2a>
 8003cbc:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8003cbe:	f7fe fcc6 	bl	800264e <__retarget_lock_acquire_recursive>
 8003cc2:	89ab      	ldrh	r3, [r5, #12]
 8003cc4:	071b      	lsls	r3, r3, #28
 8003cc6:	d501      	bpl.n	8003ccc <_vfiprintf_r+0x34>
 8003cc8:	692b      	ldr	r3, [r5, #16]
 8003cca:	b99b      	cbnz	r3, 8003cf4 <_vfiprintf_r+0x5c>
 8003ccc:	4629      	mov	r1, r5
 8003cce:	4630      	mov	r0, r6
 8003cd0:	f7fe fbee 	bl	80024b0 <__swsetup_r>
 8003cd4:	b170      	cbz	r0, 8003cf4 <_vfiprintf_r+0x5c>
 8003cd6:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8003cd8:	07dc      	lsls	r4, r3, #31
 8003cda:	d504      	bpl.n	8003ce6 <_vfiprintf_r+0x4e>
 8003cdc:	f04f 30ff 	mov.w	r0, #4294967295
 8003ce0:	b01d      	add	sp, #116	; 0x74
 8003ce2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003ce6:	89ab      	ldrh	r3, [r5, #12]
 8003ce8:	0598      	lsls	r0, r3, #22
 8003cea:	d4f7      	bmi.n	8003cdc <_vfiprintf_r+0x44>
 8003cec:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8003cee:	f7fe fcaf 	bl	8002650 <__retarget_lock_release_recursive>
 8003cf2:	e7f3      	b.n	8003cdc <_vfiprintf_r+0x44>
 8003cf4:	2300      	movs	r3, #0
 8003cf6:	9309      	str	r3, [sp, #36]	; 0x24
 8003cf8:	2320      	movs	r3, #32
 8003cfa:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8003cfe:	f8cd 800c 	str.w	r8, [sp, #12]
 8003d02:	2330      	movs	r3, #48	; 0x30
 8003d04:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 8003eb8 <_vfiprintf_r+0x220>
 8003d08:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8003d0c:	f04f 0901 	mov.w	r9, #1
 8003d10:	4623      	mov	r3, r4
 8003d12:	469a      	mov	sl, r3
 8003d14:	f813 2b01 	ldrb.w	r2, [r3], #1
 8003d18:	b10a      	cbz	r2, 8003d1e <_vfiprintf_r+0x86>
 8003d1a:	2a25      	cmp	r2, #37	; 0x25
 8003d1c:	d1f9      	bne.n	8003d12 <_vfiprintf_r+0x7a>
 8003d1e:	ebba 0b04 	subs.w	fp, sl, r4
 8003d22:	d00b      	beq.n	8003d3c <_vfiprintf_r+0xa4>
 8003d24:	465b      	mov	r3, fp
 8003d26:	4622      	mov	r2, r4
 8003d28:	4629      	mov	r1, r5
 8003d2a:	4630      	mov	r0, r6
 8003d2c:	f7ff ffa1 	bl	8003c72 <__sfputs_r>
 8003d30:	3001      	adds	r0, #1
 8003d32:	f000 80a9 	beq.w	8003e88 <_vfiprintf_r+0x1f0>
 8003d36:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8003d38:	445a      	add	r2, fp
 8003d3a:	9209      	str	r2, [sp, #36]	; 0x24
 8003d3c:	f89a 3000 	ldrb.w	r3, [sl]
 8003d40:	2b00      	cmp	r3, #0
 8003d42:	f000 80a1 	beq.w	8003e88 <_vfiprintf_r+0x1f0>
 8003d46:	2300      	movs	r3, #0
 8003d48:	f04f 32ff 	mov.w	r2, #4294967295
 8003d4c:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8003d50:	f10a 0a01 	add.w	sl, sl, #1
 8003d54:	9304      	str	r3, [sp, #16]
 8003d56:	9307      	str	r3, [sp, #28]
 8003d58:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8003d5c:	931a      	str	r3, [sp, #104]	; 0x68
 8003d5e:	4654      	mov	r4, sl
 8003d60:	2205      	movs	r2, #5
 8003d62:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003d66:	4854      	ldr	r0, [pc, #336]	; (8003eb8 <_vfiprintf_r+0x220>)
 8003d68:	f7fc fa32 	bl	80001d0 <memchr>
 8003d6c:	9a04      	ldr	r2, [sp, #16]
 8003d6e:	b9d8      	cbnz	r0, 8003da8 <_vfiprintf_r+0x110>
 8003d70:	06d1      	lsls	r1, r2, #27
 8003d72:	bf44      	itt	mi
 8003d74:	2320      	movmi	r3, #32
 8003d76:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8003d7a:	0713      	lsls	r3, r2, #28
 8003d7c:	bf44      	itt	mi
 8003d7e:	232b      	movmi	r3, #43	; 0x2b
 8003d80:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8003d84:	f89a 3000 	ldrb.w	r3, [sl]
 8003d88:	2b2a      	cmp	r3, #42	; 0x2a
 8003d8a:	d015      	beq.n	8003db8 <_vfiprintf_r+0x120>
 8003d8c:	9a07      	ldr	r2, [sp, #28]
 8003d8e:	4654      	mov	r4, sl
 8003d90:	2000      	movs	r0, #0
 8003d92:	f04f 0c0a 	mov.w	ip, #10
 8003d96:	4621      	mov	r1, r4
 8003d98:	f811 3b01 	ldrb.w	r3, [r1], #1
 8003d9c:	3b30      	subs	r3, #48	; 0x30
 8003d9e:	2b09      	cmp	r3, #9
 8003da0:	d94d      	bls.n	8003e3e <_vfiprintf_r+0x1a6>
 8003da2:	b1b0      	cbz	r0, 8003dd2 <_vfiprintf_r+0x13a>
 8003da4:	9207      	str	r2, [sp, #28]
 8003da6:	e014      	b.n	8003dd2 <_vfiprintf_r+0x13a>
 8003da8:	eba0 0308 	sub.w	r3, r0, r8
 8003dac:	fa09 f303 	lsl.w	r3, r9, r3
 8003db0:	4313      	orrs	r3, r2
 8003db2:	9304      	str	r3, [sp, #16]
 8003db4:	46a2      	mov	sl, r4
 8003db6:	e7d2      	b.n	8003d5e <_vfiprintf_r+0xc6>
 8003db8:	9b03      	ldr	r3, [sp, #12]
 8003dba:	1d19      	adds	r1, r3, #4
 8003dbc:	681b      	ldr	r3, [r3, #0]
 8003dbe:	9103      	str	r1, [sp, #12]
 8003dc0:	2b00      	cmp	r3, #0
 8003dc2:	bfbb      	ittet	lt
 8003dc4:	425b      	neglt	r3, r3
 8003dc6:	f042 0202 	orrlt.w	r2, r2, #2
 8003dca:	9307      	strge	r3, [sp, #28]
 8003dcc:	9307      	strlt	r3, [sp, #28]
 8003dce:	bfb8      	it	lt
 8003dd0:	9204      	strlt	r2, [sp, #16]
 8003dd2:	7823      	ldrb	r3, [r4, #0]
 8003dd4:	2b2e      	cmp	r3, #46	; 0x2e
 8003dd6:	d10c      	bne.n	8003df2 <_vfiprintf_r+0x15a>
 8003dd8:	7863      	ldrb	r3, [r4, #1]
 8003dda:	2b2a      	cmp	r3, #42	; 0x2a
 8003ddc:	d134      	bne.n	8003e48 <_vfiprintf_r+0x1b0>
 8003dde:	9b03      	ldr	r3, [sp, #12]
 8003de0:	1d1a      	adds	r2, r3, #4
 8003de2:	681b      	ldr	r3, [r3, #0]
 8003de4:	9203      	str	r2, [sp, #12]
 8003de6:	2b00      	cmp	r3, #0
 8003de8:	bfb8      	it	lt
 8003dea:	f04f 33ff 	movlt.w	r3, #4294967295
 8003dee:	3402      	adds	r4, #2
 8003df0:	9305      	str	r3, [sp, #20]
 8003df2:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 8003ec8 <_vfiprintf_r+0x230>
 8003df6:	7821      	ldrb	r1, [r4, #0]
 8003df8:	2203      	movs	r2, #3
 8003dfa:	4650      	mov	r0, sl
 8003dfc:	f7fc f9e8 	bl	80001d0 <memchr>
 8003e00:	b138      	cbz	r0, 8003e12 <_vfiprintf_r+0x17a>
 8003e02:	9b04      	ldr	r3, [sp, #16]
 8003e04:	eba0 000a 	sub.w	r0, r0, sl
 8003e08:	2240      	movs	r2, #64	; 0x40
 8003e0a:	4082      	lsls	r2, r0
 8003e0c:	4313      	orrs	r3, r2
 8003e0e:	3401      	adds	r4, #1
 8003e10:	9304      	str	r3, [sp, #16]
 8003e12:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003e16:	4829      	ldr	r0, [pc, #164]	; (8003ebc <_vfiprintf_r+0x224>)
 8003e18:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8003e1c:	2206      	movs	r2, #6
 8003e1e:	f7fc f9d7 	bl	80001d0 <memchr>
 8003e22:	2800      	cmp	r0, #0
 8003e24:	d03f      	beq.n	8003ea6 <_vfiprintf_r+0x20e>
 8003e26:	4b26      	ldr	r3, [pc, #152]	; (8003ec0 <_vfiprintf_r+0x228>)
 8003e28:	bb1b      	cbnz	r3, 8003e72 <_vfiprintf_r+0x1da>
 8003e2a:	9b03      	ldr	r3, [sp, #12]
 8003e2c:	3307      	adds	r3, #7
 8003e2e:	f023 0307 	bic.w	r3, r3, #7
 8003e32:	3308      	adds	r3, #8
 8003e34:	9303      	str	r3, [sp, #12]
 8003e36:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003e38:	443b      	add	r3, r7
 8003e3a:	9309      	str	r3, [sp, #36]	; 0x24
 8003e3c:	e768      	b.n	8003d10 <_vfiprintf_r+0x78>
 8003e3e:	fb0c 3202 	mla	r2, ip, r2, r3
 8003e42:	460c      	mov	r4, r1
 8003e44:	2001      	movs	r0, #1
 8003e46:	e7a6      	b.n	8003d96 <_vfiprintf_r+0xfe>
 8003e48:	2300      	movs	r3, #0
 8003e4a:	3401      	adds	r4, #1
 8003e4c:	9305      	str	r3, [sp, #20]
 8003e4e:	4619      	mov	r1, r3
 8003e50:	f04f 0c0a 	mov.w	ip, #10
 8003e54:	4620      	mov	r0, r4
 8003e56:	f810 2b01 	ldrb.w	r2, [r0], #1
 8003e5a:	3a30      	subs	r2, #48	; 0x30
 8003e5c:	2a09      	cmp	r2, #9
 8003e5e:	d903      	bls.n	8003e68 <_vfiprintf_r+0x1d0>
 8003e60:	2b00      	cmp	r3, #0
 8003e62:	d0c6      	beq.n	8003df2 <_vfiprintf_r+0x15a>
 8003e64:	9105      	str	r1, [sp, #20]
 8003e66:	e7c4      	b.n	8003df2 <_vfiprintf_r+0x15a>
 8003e68:	fb0c 2101 	mla	r1, ip, r1, r2
 8003e6c:	4604      	mov	r4, r0
 8003e6e:	2301      	movs	r3, #1
 8003e70:	e7f0      	b.n	8003e54 <_vfiprintf_r+0x1bc>
 8003e72:	ab03      	add	r3, sp, #12
 8003e74:	9300      	str	r3, [sp, #0]
 8003e76:	462a      	mov	r2, r5
 8003e78:	4b12      	ldr	r3, [pc, #72]	; (8003ec4 <_vfiprintf_r+0x22c>)
 8003e7a:	a904      	add	r1, sp, #16
 8003e7c:	4630      	mov	r0, r6
 8003e7e:	f7fd fda1 	bl	80019c4 <_printf_float>
 8003e82:	4607      	mov	r7, r0
 8003e84:	1c78      	adds	r0, r7, #1
 8003e86:	d1d6      	bne.n	8003e36 <_vfiprintf_r+0x19e>
 8003e88:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8003e8a:	07d9      	lsls	r1, r3, #31
 8003e8c:	d405      	bmi.n	8003e9a <_vfiprintf_r+0x202>
 8003e8e:	89ab      	ldrh	r3, [r5, #12]
 8003e90:	059a      	lsls	r2, r3, #22
 8003e92:	d402      	bmi.n	8003e9a <_vfiprintf_r+0x202>
 8003e94:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8003e96:	f7fe fbdb 	bl	8002650 <__retarget_lock_release_recursive>
 8003e9a:	89ab      	ldrh	r3, [r5, #12]
 8003e9c:	065b      	lsls	r3, r3, #25
 8003e9e:	f53f af1d 	bmi.w	8003cdc <_vfiprintf_r+0x44>
 8003ea2:	9809      	ldr	r0, [sp, #36]	; 0x24
 8003ea4:	e71c      	b.n	8003ce0 <_vfiprintf_r+0x48>
 8003ea6:	ab03      	add	r3, sp, #12
 8003ea8:	9300      	str	r3, [sp, #0]
 8003eaa:	462a      	mov	r2, r5
 8003eac:	4b05      	ldr	r3, [pc, #20]	; (8003ec4 <_vfiprintf_r+0x22c>)
 8003eae:	a904      	add	r1, sp, #16
 8003eb0:	4630      	mov	r0, r6
 8003eb2:	f7fe f82b 	bl	8001f0c <_printf_i>
 8003eb6:	e7e4      	b.n	8003e82 <_vfiprintf_r+0x1ea>
 8003eb8:	08004b3c 	.word	0x08004b3c
 8003ebc:	08004b46 	.word	0x08004b46
 8003ec0:	080019c5 	.word	0x080019c5
 8003ec4:	08003c73 	.word	0x08003c73
 8003ec8:	08004b42 	.word	0x08004b42

08003ecc <__sflush_r>:
 8003ecc:	898a      	ldrh	r2, [r1, #12]
 8003ece:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003ed2:	4605      	mov	r5, r0
 8003ed4:	0710      	lsls	r0, r2, #28
 8003ed6:	460c      	mov	r4, r1
 8003ed8:	d458      	bmi.n	8003f8c <__sflush_r+0xc0>
 8003eda:	684b      	ldr	r3, [r1, #4]
 8003edc:	2b00      	cmp	r3, #0
 8003ede:	dc05      	bgt.n	8003eec <__sflush_r+0x20>
 8003ee0:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8003ee2:	2b00      	cmp	r3, #0
 8003ee4:	dc02      	bgt.n	8003eec <__sflush_r+0x20>
 8003ee6:	2000      	movs	r0, #0
 8003ee8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003eec:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8003eee:	2e00      	cmp	r6, #0
 8003ef0:	d0f9      	beq.n	8003ee6 <__sflush_r+0x1a>
 8003ef2:	2300      	movs	r3, #0
 8003ef4:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8003ef8:	682f      	ldr	r7, [r5, #0]
 8003efa:	6a21      	ldr	r1, [r4, #32]
 8003efc:	602b      	str	r3, [r5, #0]
 8003efe:	d032      	beq.n	8003f66 <__sflush_r+0x9a>
 8003f00:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8003f02:	89a3      	ldrh	r3, [r4, #12]
 8003f04:	075a      	lsls	r2, r3, #29
 8003f06:	d505      	bpl.n	8003f14 <__sflush_r+0x48>
 8003f08:	6863      	ldr	r3, [r4, #4]
 8003f0a:	1ac0      	subs	r0, r0, r3
 8003f0c:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8003f0e:	b10b      	cbz	r3, 8003f14 <__sflush_r+0x48>
 8003f10:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8003f12:	1ac0      	subs	r0, r0, r3
 8003f14:	2300      	movs	r3, #0
 8003f16:	4602      	mov	r2, r0
 8003f18:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8003f1a:	6a21      	ldr	r1, [r4, #32]
 8003f1c:	4628      	mov	r0, r5
 8003f1e:	47b0      	blx	r6
 8003f20:	1c43      	adds	r3, r0, #1
 8003f22:	89a3      	ldrh	r3, [r4, #12]
 8003f24:	d106      	bne.n	8003f34 <__sflush_r+0x68>
 8003f26:	6829      	ldr	r1, [r5, #0]
 8003f28:	291d      	cmp	r1, #29
 8003f2a:	d82b      	bhi.n	8003f84 <__sflush_r+0xb8>
 8003f2c:	4a29      	ldr	r2, [pc, #164]	; (8003fd4 <__sflush_r+0x108>)
 8003f2e:	410a      	asrs	r2, r1
 8003f30:	07d6      	lsls	r6, r2, #31
 8003f32:	d427      	bmi.n	8003f84 <__sflush_r+0xb8>
 8003f34:	2200      	movs	r2, #0
 8003f36:	6062      	str	r2, [r4, #4]
 8003f38:	04d9      	lsls	r1, r3, #19
 8003f3a:	6922      	ldr	r2, [r4, #16]
 8003f3c:	6022      	str	r2, [r4, #0]
 8003f3e:	d504      	bpl.n	8003f4a <__sflush_r+0x7e>
 8003f40:	1c42      	adds	r2, r0, #1
 8003f42:	d101      	bne.n	8003f48 <__sflush_r+0x7c>
 8003f44:	682b      	ldr	r3, [r5, #0]
 8003f46:	b903      	cbnz	r3, 8003f4a <__sflush_r+0x7e>
 8003f48:	6560      	str	r0, [r4, #84]	; 0x54
 8003f4a:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8003f4c:	602f      	str	r7, [r5, #0]
 8003f4e:	2900      	cmp	r1, #0
 8003f50:	d0c9      	beq.n	8003ee6 <__sflush_r+0x1a>
 8003f52:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8003f56:	4299      	cmp	r1, r3
 8003f58:	d002      	beq.n	8003f60 <__sflush_r+0x94>
 8003f5a:	4628      	mov	r0, r5
 8003f5c:	f7ff f9f6 	bl	800334c <_free_r>
 8003f60:	2000      	movs	r0, #0
 8003f62:	6360      	str	r0, [r4, #52]	; 0x34
 8003f64:	e7c0      	b.n	8003ee8 <__sflush_r+0x1c>
 8003f66:	2301      	movs	r3, #1
 8003f68:	4628      	mov	r0, r5
 8003f6a:	47b0      	blx	r6
 8003f6c:	1c41      	adds	r1, r0, #1
 8003f6e:	d1c8      	bne.n	8003f02 <__sflush_r+0x36>
 8003f70:	682b      	ldr	r3, [r5, #0]
 8003f72:	2b00      	cmp	r3, #0
 8003f74:	d0c5      	beq.n	8003f02 <__sflush_r+0x36>
 8003f76:	2b1d      	cmp	r3, #29
 8003f78:	d001      	beq.n	8003f7e <__sflush_r+0xb2>
 8003f7a:	2b16      	cmp	r3, #22
 8003f7c:	d101      	bne.n	8003f82 <__sflush_r+0xb6>
 8003f7e:	602f      	str	r7, [r5, #0]
 8003f80:	e7b1      	b.n	8003ee6 <__sflush_r+0x1a>
 8003f82:	89a3      	ldrh	r3, [r4, #12]
 8003f84:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8003f88:	81a3      	strh	r3, [r4, #12]
 8003f8a:	e7ad      	b.n	8003ee8 <__sflush_r+0x1c>
 8003f8c:	690f      	ldr	r7, [r1, #16]
 8003f8e:	2f00      	cmp	r7, #0
 8003f90:	d0a9      	beq.n	8003ee6 <__sflush_r+0x1a>
 8003f92:	0793      	lsls	r3, r2, #30
 8003f94:	680e      	ldr	r6, [r1, #0]
 8003f96:	bf08      	it	eq
 8003f98:	694b      	ldreq	r3, [r1, #20]
 8003f9a:	600f      	str	r7, [r1, #0]
 8003f9c:	bf18      	it	ne
 8003f9e:	2300      	movne	r3, #0
 8003fa0:	eba6 0807 	sub.w	r8, r6, r7
 8003fa4:	608b      	str	r3, [r1, #8]
 8003fa6:	f1b8 0f00 	cmp.w	r8, #0
 8003faa:	dd9c      	ble.n	8003ee6 <__sflush_r+0x1a>
 8003fac:	6a21      	ldr	r1, [r4, #32]
 8003fae:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8003fb0:	4643      	mov	r3, r8
 8003fb2:	463a      	mov	r2, r7
 8003fb4:	4628      	mov	r0, r5
 8003fb6:	47b0      	blx	r6
 8003fb8:	2800      	cmp	r0, #0
 8003fba:	dc06      	bgt.n	8003fca <__sflush_r+0xfe>
 8003fbc:	89a3      	ldrh	r3, [r4, #12]
 8003fbe:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8003fc2:	81a3      	strh	r3, [r4, #12]
 8003fc4:	f04f 30ff 	mov.w	r0, #4294967295
 8003fc8:	e78e      	b.n	8003ee8 <__sflush_r+0x1c>
 8003fca:	4407      	add	r7, r0
 8003fcc:	eba8 0800 	sub.w	r8, r8, r0
 8003fd0:	e7e9      	b.n	8003fa6 <__sflush_r+0xda>
 8003fd2:	bf00      	nop
 8003fd4:	dfbffffe 	.word	0xdfbffffe

08003fd8 <_fflush_r>:
 8003fd8:	b538      	push	{r3, r4, r5, lr}
 8003fda:	690b      	ldr	r3, [r1, #16]
 8003fdc:	4605      	mov	r5, r0
 8003fde:	460c      	mov	r4, r1
 8003fe0:	b913      	cbnz	r3, 8003fe8 <_fflush_r+0x10>
 8003fe2:	2500      	movs	r5, #0
 8003fe4:	4628      	mov	r0, r5
 8003fe6:	bd38      	pop	{r3, r4, r5, pc}
 8003fe8:	b118      	cbz	r0, 8003ff2 <_fflush_r+0x1a>
 8003fea:	6a03      	ldr	r3, [r0, #32]
 8003fec:	b90b      	cbnz	r3, 8003ff2 <_fflush_r+0x1a>
 8003fee:	f7fe f93b 	bl	8002268 <__sinit>
 8003ff2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8003ff6:	2b00      	cmp	r3, #0
 8003ff8:	d0f3      	beq.n	8003fe2 <_fflush_r+0xa>
 8003ffa:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8003ffc:	07d0      	lsls	r0, r2, #31
 8003ffe:	d404      	bmi.n	800400a <_fflush_r+0x32>
 8004000:	0599      	lsls	r1, r3, #22
 8004002:	d402      	bmi.n	800400a <_fflush_r+0x32>
 8004004:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8004006:	f7fe fb22 	bl	800264e <__retarget_lock_acquire_recursive>
 800400a:	4628      	mov	r0, r5
 800400c:	4621      	mov	r1, r4
 800400e:	f7ff ff5d 	bl	8003ecc <__sflush_r>
 8004012:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8004014:	07da      	lsls	r2, r3, #31
 8004016:	4605      	mov	r5, r0
 8004018:	d4e4      	bmi.n	8003fe4 <_fflush_r+0xc>
 800401a:	89a3      	ldrh	r3, [r4, #12]
 800401c:	059b      	lsls	r3, r3, #22
 800401e:	d4e1      	bmi.n	8003fe4 <_fflush_r+0xc>
 8004020:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8004022:	f7fe fb15 	bl	8002650 <__retarget_lock_release_recursive>
 8004026:	e7dd      	b.n	8003fe4 <_fflush_r+0xc>

08004028 <__swhatbuf_r>:
 8004028:	b570      	push	{r4, r5, r6, lr}
 800402a:	460c      	mov	r4, r1
 800402c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8004030:	2900      	cmp	r1, #0
 8004032:	b096      	sub	sp, #88	; 0x58
 8004034:	4615      	mov	r5, r2
 8004036:	461e      	mov	r6, r3
 8004038:	da0d      	bge.n	8004056 <__swhatbuf_r+0x2e>
 800403a:	89a3      	ldrh	r3, [r4, #12]
 800403c:	f013 0f80 	tst.w	r3, #128	; 0x80
 8004040:	f04f 0100 	mov.w	r1, #0
 8004044:	bf0c      	ite	eq
 8004046:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 800404a:	2340      	movne	r3, #64	; 0x40
 800404c:	2000      	movs	r0, #0
 800404e:	6031      	str	r1, [r6, #0]
 8004050:	602b      	str	r3, [r5, #0]
 8004052:	b016      	add	sp, #88	; 0x58
 8004054:	bd70      	pop	{r4, r5, r6, pc}
 8004056:	466a      	mov	r2, sp
 8004058:	f000 f848 	bl	80040ec <_fstat_r>
 800405c:	2800      	cmp	r0, #0
 800405e:	dbec      	blt.n	800403a <__swhatbuf_r+0x12>
 8004060:	9901      	ldr	r1, [sp, #4]
 8004062:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 8004066:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 800406a:	4259      	negs	r1, r3
 800406c:	4159      	adcs	r1, r3
 800406e:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8004072:	e7eb      	b.n	800404c <__swhatbuf_r+0x24>

08004074 <__smakebuf_r>:
 8004074:	898b      	ldrh	r3, [r1, #12]
 8004076:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8004078:	079d      	lsls	r5, r3, #30
 800407a:	4606      	mov	r6, r0
 800407c:	460c      	mov	r4, r1
 800407e:	d507      	bpl.n	8004090 <__smakebuf_r+0x1c>
 8004080:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8004084:	6023      	str	r3, [r4, #0]
 8004086:	6123      	str	r3, [r4, #16]
 8004088:	2301      	movs	r3, #1
 800408a:	6163      	str	r3, [r4, #20]
 800408c:	b002      	add	sp, #8
 800408e:	bd70      	pop	{r4, r5, r6, pc}
 8004090:	ab01      	add	r3, sp, #4
 8004092:	466a      	mov	r2, sp
 8004094:	f7ff ffc8 	bl	8004028 <__swhatbuf_r>
 8004098:	9900      	ldr	r1, [sp, #0]
 800409a:	4605      	mov	r5, r0
 800409c:	4630      	mov	r0, r6
 800409e:	f7ff f9c9 	bl	8003434 <_malloc_r>
 80040a2:	b948      	cbnz	r0, 80040b8 <__smakebuf_r+0x44>
 80040a4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80040a8:	059a      	lsls	r2, r3, #22
 80040aa:	d4ef      	bmi.n	800408c <__smakebuf_r+0x18>
 80040ac:	f023 0303 	bic.w	r3, r3, #3
 80040b0:	f043 0302 	orr.w	r3, r3, #2
 80040b4:	81a3      	strh	r3, [r4, #12]
 80040b6:	e7e3      	b.n	8004080 <__smakebuf_r+0xc>
 80040b8:	89a3      	ldrh	r3, [r4, #12]
 80040ba:	6020      	str	r0, [r4, #0]
 80040bc:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80040c0:	81a3      	strh	r3, [r4, #12]
 80040c2:	9b00      	ldr	r3, [sp, #0]
 80040c4:	6163      	str	r3, [r4, #20]
 80040c6:	9b01      	ldr	r3, [sp, #4]
 80040c8:	6120      	str	r0, [r4, #16]
 80040ca:	b15b      	cbz	r3, 80040e4 <__smakebuf_r+0x70>
 80040cc:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80040d0:	4630      	mov	r0, r6
 80040d2:	f000 f81d 	bl	8004110 <_isatty_r>
 80040d6:	b128      	cbz	r0, 80040e4 <__smakebuf_r+0x70>
 80040d8:	89a3      	ldrh	r3, [r4, #12]
 80040da:	f023 0303 	bic.w	r3, r3, #3
 80040de:	f043 0301 	orr.w	r3, r3, #1
 80040e2:	81a3      	strh	r3, [r4, #12]
 80040e4:	89a3      	ldrh	r3, [r4, #12]
 80040e6:	431d      	orrs	r5, r3
 80040e8:	81a5      	strh	r5, [r4, #12]
 80040ea:	e7cf      	b.n	800408c <__smakebuf_r+0x18>

080040ec <_fstat_r>:
 80040ec:	b538      	push	{r3, r4, r5, lr}
 80040ee:	4d07      	ldr	r5, [pc, #28]	; (800410c <_fstat_r+0x20>)
 80040f0:	2300      	movs	r3, #0
 80040f2:	4604      	mov	r4, r0
 80040f4:	4608      	mov	r0, r1
 80040f6:	4611      	mov	r1, r2
 80040f8:	602b      	str	r3, [r5, #0]
 80040fa:	f000 fa2e 	bl	800455a <_fstat>
 80040fe:	1c43      	adds	r3, r0, #1
 8004100:	d102      	bne.n	8004108 <_fstat_r+0x1c>
 8004102:	682b      	ldr	r3, [r5, #0]
 8004104:	b103      	cbz	r3, 8004108 <_fstat_r+0x1c>
 8004106:	6023      	str	r3, [r4, #0]
 8004108:	bd38      	pop	{r3, r4, r5, pc}
 800410a:	bf00      	nop
 800410c:	20000374 	.word	0x20000374

08004110 <_isatty_r>:
 8004110:	b538      	push	{r3, r4, r5, lr}
 8004112:	4d06      	ldr	r5, [pc, #24]	; (800412c <_isatty_r+0x1c>)
 8004114:	2300      	movs	r3, #0
 8004116:	4604      	mov	r4, r0
 8004118:	4608      	mov	r0, r1
 800411a:	602b      	str	r3, [r5, #0]
 800411c:	f000 fb90 	bl	8004840 <_isatty>
 8004120:	1c43      	adds	r3, r0, #1
 8004122:	d102      	bne.n	800412a <_isatty_r+0x1a>
 8004124:	682b      	ldr	r3, [r5, #0]
 8004126:	b103      	cbz	r3, 800412a <_isatty_r+0x1a>
 8004128:	6023      	str	r3, [r4, #0]
 800412a:	bd38      	pop	{r3, r4, r5, pc}
 800412c:	20000374 	.word	0x20000374

08004130 <_sbrk_r>:
 8004130:	b538      	push	{r3, r4, r5, lr}
 8004132:	4d06      	ldr	r5, [pc, #24]	; (800414c <_sbrk_r+0x1c>)
 8004134:	2300      	movs	r3, #0
 8004136:	4604      	mov	r4, r0
 8004138:	4608      	mov	r0, r1
 800413a:	602b      	str	r3, [r5, #0]
 800413c:	f000 f9c8 	bl	80044d0 <_sbrk>
 8004140:	1c43      	adds	r3, r0, #1
 8004142:	d102      	bne.n	800414a <_sbrk_r+0x1a>
 8004144:	682b      	ldr	r3, [r5, #0]
 8004146:	b103      	cbz	r3, 800414a <_sbrk_r+0x1a>
 8004148:	6023      	str	r3, [r4, #0]
 800414a:	bd38      	pop	{r3, r4, r5, pc}
 800414c:	20000374 	.word	0x20000374

08004150 <memcpy>:
 8004150:	440a      	add	r2, r1
 8004152:	4291      	cmp	r1, r2
 8004154:	f100 33ff 	add.w	r3, r0, #4294967295
 8004158:	d100      	bne.n	800415c <memcpy+0xc>
 800415a:	4770      	bx	lr
 800415c:	b510      	push	{r4, lr}
 800415e:	f811 4b01 	ldrb.w	r4, [r1], #1
 8004162:	f803 4f01 	strb.w	r4, [r3, #1]!
 8004166:	4291      	cmp	r1, r2
 8004168:	d1f9      	bne.n	800415e <memcpy+0xe>
 800416a:	bd10      	pop	{r4, pc}

0800416c <__assert_func>:
 800416c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800416e:	4614      	mov	r4, r2
 8004170:	461a      	mov	r2, r3
 8004172:	4b09      	ldr	r3, [pc, #36]	; (8004198 <__assert_func+0x2c>)
 8004174:	681b      	ldr	r3, [r3, #0]
 8004176:	4605      	mov	r5, r0
 8004178:	68d8      	ldr	r0, [r3, #12]
 800417a:	b14c      	cbz	r4, 8004190 <__assert_func+0x24>
 800417c:	4b07      	ldr	r3, [pc, #28]	; (800419c <__assert_func+0x30>)
 800417e:	9100      	str	r1, [sp, #0]
 8004180:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8004184:	4906      	ldr	r1, [pc, #24]	; (80041a0 <__assert_func+0x34>)
 8004186:	462b      	mov	r3, r5
 8004188:	f000 f844 	bl	8004214 <fiprintf>
 800418c:	f000 f854 	bl	8004238 <abort>
 8004190:	4b04      	ldr	r3, [pc, #16]	; (80041a4 <__assert_func+0x38>)
 8004192:	461c      	mov	r4, r3
 8004194:	e7f3      	b.n	800417e <__assert_func+0x12>
 8004196:	bf00      	nop
 8004198:	2000006c 	.word	0x2000006c
 800419c:	08004b57 	.word	0x08004b57
 80041a0:	08004b64 	.word	0x08004b64
 80041a4:	08004b92 	.word	0x08004b92

080041a8 <_calloc_r>:
 80041a8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80041aa:	fba1 2402 	umull	r2, r4, r1, r2
 80041ae:	b94c      	cbnz	r4, 80041c4 <_calloc_r+0x1c>
 80041b0:	4611      	mov	r1, r2
 80041b2:	9201      	str	r2, [sp, #4]
 80041b4:	f7ff f93e 	bl	8003434 <_malloc_r>
 80041b8:	9a01      	ldr	r2, [sp, #4]
 80041ba:	4605      	mov	r5, r0
 80041bc:	b930      	cbnz	r0, 80041cc <_calloc_r+0x24>
 80041be:	4628      	mov	r0, r5
 80041c0:	b003      	add	sp, #12
 80041c2:	bd30      	pop	{r4, r5, pc}
 80041c4:	220c      	movs	r2, #12
 80041c6:	6002      	str	r2, [r0, #0]
 80041c8:	2500      	movs	r5, #0
 80041ca:	e7f8      	b.n	80041be <_calloc_r+0x16>
 80041cc:	4621      	mov	r1, r4
 80041ce:	f7fe f9c7 	bl	8002560 <memset>
 80041d2:	e7f4      	b.n	80041be <_calloc_r+0x16>

080041d4 <__ascii_mbtowc>:
 80041d4:	b082      	sub	sp, #8
 80041d6:	b901      	cbnz	r1, 80041da <__ascii_mbtowc+0x6>
 80041d8:	a901      	add	r1, sp, #4
 80041da:	b142      	cbz	r2, 80041ee <__ascii_mbtowc+0x1a>
 80041dc:	b14b      	cbz	r3, 80041f2 <__ascii_mbtowc+0x1e>
 80041de:	7813      	ldrb	r3, [r2, #0]
 80041e0:	600b      	str	r3, [r1, #0]
 80041e2:	7812      	ldrb	r2, [r2, #0]
 80041e4:	1e10      	subs	r0, r2, #0
 80041e6:	bf18      	it	ne
 80041e8:	2001      	movne	r0, #1
 80041ea:	b002      	add	sp, #8
 80041ec:	4770      	bx	lr
 80041ee:	4610      	mov	r0, r2
 80041f0:	e7fb      	b.n	80041ea <__ascii_mbtowc+0x16>
 80041f2:	f06f 0001 	mvn.w	r0, #1
 80041f6:	e7f8      	b.n	80041ea <__ascii_mbtowc+0x16>

080041f8 <__ascii_wctomb>:
 80041f8:	b149      	cbz	r1, 800420e <__ascii_wctomb+0x16>
 80041fa:	2aff      	cmp	r2, #255	; 0xff
 80041fc:	bf85      	ittet	hi
 80041fe:	238a      	movhi	r3, #138	; 0x8a
 8004200:	6003      	strhi	r3, [r0, #0]
 8004202:	700a      	strbls	r2, [r1, #0]
 8004204:	f04f 30ff 	movhi.w	r0, #4294967295
 8004208:	bf98      	it	ls
 800420a:	2001      	movls	r0, #1
 800420c:	4770      	bx	lr
 800420e:	4608      	mov	r0, r1
 8004210:	4770      	bx	lr
	...

08004214 <fiprintf>:
 8004214:	b40e      	push	{r1, r2, r3}
 8004216:	b503      	push	{r0, r1, lr}
 8004218:	4601      	mov	r1, r0
 800421a:	ab03      	add	r3, sp, #12
 800421c:	4805      	ldr	r0, [pc, #20]	; (8004234 <fiprintf+0x20>)
 800421e:	f853 2b04 	ldr.w	r2, [r3], #4
 8004222:	6800      	ldr	r0, [r0, #0]
 8004224:	9301      	str	r3, [sp, #4]
 8004226:	f7ff fd37 	bl	8003c98 <_vfiprintf_r>
 800422a:	b002      	add	sp, #8
 800422c:	f85d eb04 	ldr.w	lr, [sp], #4
 8004230:	b003      	add	sp, #12
 8004232:	4770      	bx	lr
 8004234:	2000006c 	.word	0x2000006c

08004238 <abort>:
 8004238:	b508      	push	{r3, lr}
 800423a:	2006      	movs	r0, #6
 800423c:	f000 f82c 	bl	8004298 <raise>
 8004240:	2001      	movs	r0, #1
 8004242:	f000 fb19 	bl	8004878 <_exit>

08004246 <_raise_r>:
 8004246:	291f      	cmp	r1, #31
 8004248:	b538      	push	{r3, r4, r5, lr}
 800424a:	4604      	mov	r4, r0
 800424c:	460d      	mov	r5, r1
 800424e:	d904      	bls.n	800425a <_raise_r+0x14>
 8004250:	2316      	movs	r3, #22
 8004252:	6003      	str	r3, [r0, #0]
 8004254:	f04f 30ff 	mov.w	r0, #4294967295
 8004258:	bd38      	pop	{r3, r4, r5, pc}
 800425a:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 800425c:	b112      	cbz	r2, 8004264 <_raise_r+0x1e>
 800425e:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8004262:	b94b      	cbnz	r3, 8004278 <_raise_r+0x32>
 8004264:	4620      	mov	r0, r4
 8004266:	f000 f831 	bl	80042cc <_getpid_r>
 800426a:	462a      	mov	r2, r5
 800426c:	4601      	mov	r1, r0
 800426e:	4620      	mov	r0, r4
 8004270:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8004274:	f000 b818 	b.w	80042a8 <_kill_r>
 8004278:	2b01      	cmp	r3, #1
 800427a:	d00a      	beq.n	8004292 <_raise_r+0x4c>
 800427c:	1c59      	adds	r1, r3, #1
 800427e:	d103      	bne.n	8004288 <_raise_r+0x42>
 8004280:	2316      	movs	r3, #22
 8004282:	6003      	str	r3, [r0, #0]
 8004284:	2001      	movs	r0, #1
 8004286:	e7e7      	b.n	8004258 <_raise_r+0x12>
 8004288:	2400      	movs	r4, #0
 800428a:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 800428e:	4628      	mov	r0, r5
 8004290:	4798      	blx	r3
 8004292:	2000      	movs	r0, #0
 8004294:	e7e0      	b.n	8004258 <_raise_r+0x12>
	...

08004298 <raise>:
 8004298:	4b02      	ldr	r3, [pc, #8]	; (80042a4 <raise+0xc>)
 800429a:	4601      	mov	r1, r0
 800429c:	6818      	ldr	r0, [r3, #0]
 800429e:	f7ff bfd2 	b.w	8004246 <_raise_r>
 80042a2:	bf00      	nop
 80042a4:	2000006c 	.word	0x2000006c

080042a8 <_kill_r>:
 80042a8:	b538      	push	{r3, r4, r5, lr}
 80042aa:	4d07      	ldr	r5, [pc, #28]	; (80042c8 <_kill_r+0x20>)
 80042ac:	2300      	movs	r3, #0
 80042ae:	4604      	mov	r4, r0
 80042b0:	4608      	mov	r0, r1
 80042b2:	4611      	mov	r1, r2
 80042b4:	602b      	str	r3, [r5, #0]
 80042b6:	f000 fafd 	bl	80048b4 <_kill>
 80042ba:	1c43      	adds	r3, r0, #1
 80042bc:	d102      	bne.n	80042c4 <_kill_r+0x1c>
 80042be:	682b      	ldr	r3, [r5, #0]
 80042c0:	b103      	cbz	r3, 80042c4 <_kill_r+0x1c>
 80042c2:	6023      	str	r3, [r4, #0]
 80042c4:	bd38      	pop	{r3, r4, r5, pc}
 80042c6:	bf00      	nop
 80042c8:	20000374 	.word	0x20000374

080042cc <_getpid_r>:
 80042cc:	f000 b8fe 	b.w	80044cc <_getpid>

080042d0 <findslot>:
 80042d0:	4b0a      	ldr	r3, [pc, #40]	; (80042fc <findslot+0x2c>)
 80042d2:	b510      	push	{r4, lr}
 80042d4:	4604      	mov	r4, r0
 80042d6:	6818      	ldr	r0, [r3, #0]
 80042d8:	b118      	cbz	r0, 80042e2 <findslot+0x12>
 80042da:	6a03      	ldr	r3, [r0, #32]
 80042dc:	b90b      	cbnz	r3, 80042e2 <findslot+0x12>
 80042de:	f7fd ffc3 	bl	8002268 <__sinit>
 80042e2:	2c13      	cmp	r4, #19
 80042e4:	d807      	bhi.n	80042f6 <findslot+0x26>
 80042e6:	4806      	ldr	r0, [pc, #24]	; (8004300 <findslot+0x30>)
 80042e8:	f850 2034 	ldr.w	r2, [r0, r4, lsl #3]
 80042ec:	3201      	adds	r2, #1
 80042ee:	d002      	beq.n	80042f6 <findslot+0x26>
 80042f0:	eb00 00c4 	add.w	r0, r0, r4, lsl #3
 80042f4:	bd10      	pop	{r4, pc}
 80042f6:	2000      	movs	r0, #0
 80042f8:	e7fc      	b.n	80042f4 <findslot+0x24>
 80042fa:	bf00      	nop
 80042fc:	2000006c 	.word	0x2000006c
 8004300:	20000394 	.word	0x20000394

08004304 <error>:
 8004304:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004306:	4604      	mov	r4, r0
 8004308:	f000 fae0 	bl	80048cc <__errno>
 800430c:	2613      	movs	r6, #19
 800430e:	4605      	mov	r5, r0
 8004310:	2700      	movs	r7, #0
 8004312:	4630      	mov	r0, r6
 8004314:	4639      	mov	r1, r7
 8004316:	beab      	bkpt	0x00ab
 8004318:	4606      	mov	r6, r0
 800431a:	602e      	str	r6, [r5, #0]
 800431c:	4620      	mov	r0, r4
 800431e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08004320 <checkerror>:
 8004320:	1c43      	adds	r3, r0, #1
 8004322:	d101      	bne.n	8004328 <checkerror+0x8>
 8004324:	f7ff bfee 	b.w	8004304 <error>
 8004328:	4770      	bx	lr

0800432a <_swiread>:
 800432a:	b530      	push	{r4, r5, lr}
 800432c:	b085      	sub	sp, #20
 800432e:	e9cd 0101 	strd	r0, r1, [sp, #4]
 8004332:	9203      	str	r2, [sp, #12]
 8004334:	2406      	movs	r4, #6
 8004336:	ad01      	add	r5, sp, #4
 8004338:	4620      	mov	r0, r4
 800433a:	4629      	mov	r1, r5
 800433c:	beab      	bkpt	0x00ab
 800433e:	4604      	mov	r4, r0
 8004340:	4620      	mov	r0, r4
 8004342:	f7ff ffed 	bl	8004320 <checkerror>
 8004346:	b005      	add	sp, #20
 8004348:	bd30      	pop	{r4, r5, pc}

0800434a <_read>:
 800434a:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800434c:	4615      	mov	r5, r2
 800434e:	9101      	str	r1, [sp, #4]
 8004350:	f7ff ffbe 	bl	80042d0 <findslot>
 8004354:	9901      	ldr	r1, [sp, #4]
 8004356:	4604      	mov	r4, r0
 8004358:	b938      	cbnz	r0, 800436a <_read+0x20>
 800435a:	f000 fab7 	bl	80048cc <__errno>
 800435e:	2309      	movs	r3, #9
 8004360:	6003      	str	r3, [r0, #0]
 8004362:	f04f 30ff 	mov.w	r0, #4294967295
 8004366:	b003      	add	sp, #12
 8004368:	bd30      	pop	{r4, r5, pc}
 800436a:	6800      	ldr	r0, [r0, #0]
 800436c:	462a      	mov	r2, r5
 800436e:	f7ff ffdc 	bl	800432a <_swiread>
 8004372:	1c43      	adds	r3, r0, #1
 8004374:	d0f7      	beq.n	8004366 <_read+0x1c>
 8004376:	6863      	ldr	r3, [r4, #4]
 8004378:	1a2a      	subs	r2, r5, r0
 800437a:	4413      	add	r3, r2
 800437c:	6063      	str	r3, [r4, #4]
 800437e:	4610      	mov	r0, r2
 8004380:	e7f1      	b.n	8004366 <_read+0x1c>

08004382 <_swilseek>:
 8004382:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8004384:	460c      	mov	r4, r1
 8004386:	4616      	mov	r6, r2
 8004388:	f7ff ffa2 	bl	80042d0 <findslot>
 800438c:	4605      	mov	r5, r0
 800438e:	b940      	cbnz	r0, 80043a2 <_swilseek+0x20>
 8004390:	f000 fa9c 	bl	80048cc <__errno>
 8004394:	2309      	movs	r3, #9
 8004396:	6003      	str	r3, [r0, #0]
 8004398:	f04f 34ff 	mov.w	r4, #4294967295
 800439c:	4620      	mov	r0, r4
 800439e:	b003      	add	sp, #12
 80043a0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80043a2:	2e02      	cmp	r6, #2
 80043a4:	d903      	bls.n	80043ae <_swilseek+0x2c>
 80043a6:	f000 fa91 	bl	80048cc <__errno>
 80043aa:	2316      	movs	r3, #22
 80043ac:	e7f3      	b.n	8004396 <_swilseek+0x14>
 80043ae:	2e01      	cmp	r6, #1
 80043b0:	d112      	bne.n	80043d8 <_swilseek+0x56>
 80043b2:	6843      	ldr	r3, [r0, #4]
 80043b4:	18e4      	adds	r4, r4, r3
 80043b6:	d4f6      	bmi.n	80043a6 <_swilseek+0x24>
 80043b8:	682b      	ldr	r3, [r5, #0]
 80043ba:	260a      	movs	r6, #10
 80043bc:	e9cd 3400 	strd	r3, r4, [sp]
 80043c0:	466f      	mov	r7, sp
 80043c2:	4630      	mov	r0, r6
 80043c4:	4639      	mov	r1, r7
 80043c6:	beab      	bkpt	0x00ab
 80043c8:	4606      	mov	r6, r0
 80043ca:	4630      	mov	r0, r6
 80043cc:	f7ff ffa8 	bl	8004320 <checkerror>
 80043d0:	2800      	cmp	r0, #0
 80043d2:	dbe1      	blt.n	8004398 <_swilseek+0x16>
 80043d4:	606c      	str	r4, [r5, #4]
 80043d6:	e7e1      	b.n	800439c <_swilseek+0x1a>
 80043d8:	2e02      	cmp	r6, #2
 80043da:	6803      	ldr	r3, [r0, #0]
 80043dc:	d1ec      	bne.n	80043b8 <_swilseek+0x36>
 80043de:	9300      	str	r3, [sp, #0]
 80043e0:	260c      	movs	r6, #12
 80043e2:	466f      	mov	r7, sp
 80043e4:	4630      	mov	r0, r6
 80043e6:	4639      	mov	r1, r7
 80043e8:	beab      	bkpt	0x00ab
 80043ea:	4606      	mov	r6, r0
 80043ec:	4630      	mov	r0, r6
 80043ee:	f7ff ff97 	bl	8004320 <checkerror>
 80043f2:	1c43      	adds	r3, r0, #1
 80043f4:	d0d0      	beq.n	8004398 <_swilseek+0x16>
 80043f6:	4404      	add	r4, r0
 80043f8:	e7de      	b.n	80043b8 <_swilseek+0x36>

080043fa <_lseek>:
 80043fa:	f7ff bfc2 	b.w	8004382 <_swilseek>

080043fe <_swiwrite>:
 80043fe:	b530      	push	{r4, r5, lr}
 8004400:	b085      	sub	sp, #20
 8004402:	e9cd 0101 	strd	r0, r1, [sp, #4]
 8004406:	9203      	str	r2, [sp, #12]
 8004408:	2405      	movs	r4, #5
 800440a:	ad01      	add	r5, sp, #4
 800440c:	4620      	mov	r0, r4
 800440e:	4629      	mov	r1, r5
 8004410:	beab      	bkpt	0x00ab
 8004412:	4604      	mov	r4, r0
 8004414:	4620      	mov	r0, r4
 8004416:	f7ff ff83 	bl	8004320 <checkerror>
 800441a:	b005      	add	sp, #20
 800441c:	bd30      	pop	{r4, r5, pc}

0800441e <_write>:
 800441e:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8004420:	4615      	mov	r5, r2
 8004422:	9101      	str	r1, [sp, #4]
 8004424:	f7ff ff54 	bl	80042d0 <findslot>
 8004428:	9901      	ldr	r1, [sp, #4]
 800442a:	4604      	mov	r4, r0
 800442c:	b930      	cbnz	r0, 800443c <_write+0x1e>
 800442e:	f000 fa4d 	bl	80048cc <__errno>
 8004432:	2309      	movs	r3, #9
 8004434:	6003      	str	r3, [r0, #0]
 8004436:	f04f 30ff 	mov.w	r0, #4294967295
 800443a:	e012      	b.n	8004462 <_write+0x44>
 800443c:	6800      	ldr	r0, [r0, #0]
 800443e:	462a      	mov	r2, r5
 8004440:	f7ff ffdd 	bl	80043fe <_swiwrite>
 8004444:	2800      	cmp	r0, #0
 8004446:	dbf6      	blt.n	8004436 <_write+0x18>
 8004448:	6862      	ldr	r2, [r4, #4]
 800444a:	1a2b      	subs	r3, r5, r0
 800444c:	441a      	add	r2, r3
 800444e:	42a8      	cmp	r0, r5
 8004450:	6062      	str	r2, [r4, #4]
 8004452:	d105      	bne.n	8004460 <_write+0x42>
 8004454:	2000      	movs	r0, #0
 8004456:	b003      	add	sp, #12
 8004458:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800445c:	f7ff bf52 	b.w	8004304 <error>
 8004460:	4618      	mov	r0, r3
 8004462:	b003      	add	sp, #12
 8004464:	bd30      	pop	{r4, r5, pc}

08004466 <_swiclose>:
 8004466:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8004468:	2402      	movs	r4, #2
 800446a:	9001      	str	r0, [sp, #4]
 800446c:	ad01      	add	r5, sp, #4
 800446e:	4620      	mov	r0, r4
 8004470:	4629      	mov	r1, r5
 8004472:	beab      	bkpt	0x00ab
 8004474:	4604      	mov	r4, r0
 8004476:	4620      	mov	r0, r4
 8004478:	f7ff ff52 	bl	8004320 <checkerror>
 800447c:	b003      	add	sp, #12
 800447e:	bd30      	pop	{r4, r5, pc}

08004480 <_close>:
 8004480:	b538      	push	{r3, r4, r5, lr}
 8004482:	4605      	mov	r5, r0
 8004484:	f7ff ff24 	bl	80042d0 <findslot>
 8004488:	4604      	mov	r4, r0
 800448a:	b930      	cbnz	r0, 800449a <_close+0x1a>
 800448c:	f000 fa1e 	bl	80048cc <__errno>
 8004490:	2309      	movs	r3, #9
 8004492:	6003      	str	r3, [r0, #0]
 8004494:	f04f 30ff 	mov.w	r0, #4294967295
 8004498:	bd38      	pop	{r3, r4, r5, pc}
 800449a:	3d01      	subs	r5, #1
 800449c:	2d01      	cmp	r5, #1
 800449e:	d809      	bhi.n	80044b4 <_close+0x34>
 80044a0:	4b09      	ldr	r3, [pc, #36]	; (80044c8 <_close+0x48>)
 80044a2:	689a      	ldr	r2, [r3, #8]
 80044a4:	691b      	ldr	r3, [r3, #16]
 80044a6:	429a      	cmp	r2, r3
 80044a8:	d104      	bne.n	80044b4 <_close+0x34>
 80044aa:	f04f 33ff 	mov.w	r3, #4294967295
 80044ae:	6003      	str	r3, [r0, #0]
 80044b0:	2000      	movs	r0, #0
 80044b2:	e7f1      	b.n	8004498 <_close+0x18>
 80044b4:	6820      	ldr	r0, [r4, #0]
 80044b6:	f7ff ffd6 	bl	8004466 <_swiclose>
 80044ba:	2800      	cmp	r0, #0
 80044bc:	d1ec      	bne.n	8004498 <_close+0x18>
 80044be:	f04f 33ff 	mov.w	r3, #4294967295
 80044c2:	6023      	str	r3, [r4, #0]
 80044c4:	e7e8      	b.n	8004498 <_close+0x18>
 80044c6:	bf00      	nop
 80044c8:	20000394 	.word	0x20000394

080044cc <_getpid>:
 80044cc:	2001      	movs	r0, #1
 80044ce:	4770      	bx	lr

080044d0 <_sbrk>:
 80044d0:	4a0d      	ldr	r2, [pc, #52]	; (8004508 <_sbrk+0x38>)
 80044d2:	6811      	ldr	r1, [r2, #0]
 80044d4:	b510      	push	{r4, lr}
 80044d6:	4603      	mov	r3, r0
 80044d8:	b909      	cbnz	r1, 80044de <_sbrk+0xe>
 80044da:	490c      	ldr	r1, [pc, #48]	; (800450c <_sbrk+0x3c>)
 80044dc:	6011      	str	r1, [r2, #0]
 80044de:	6810      	ldr	r0, [r2, #0]
 80044e0:	4669      	mov	r1, sp
 80044e2:	4403      	add	r3, r0
 80044e4:	428b      	cmp	r3, r1
 80044e6:	d806      	bhi.n	80044f6 <_sbrk+0x26>
 80044e8:	4909      	ldr	r1, [pc, #36]	; (8004510 <_sbrk+0x40>)
 80044ea:	4c0a      	ldr	r4, [pc, #40]	; (8004514 <_sbrk+0x44>)
 80044ec:	6809      	ldr	r1, [r1, #0]
 80044ee:	42a1      	cmp	r1, r4
 80044f0:	d008      	beq.n	8004504 <_sbrk+0x34>
 80044f2:	428b      	cmp	r3, r1
 80044f4:	d906      	bls.n	8004504 <_sbrk+0x34>
 80044f6:	f000 f9e9 	bl	80048cc <__errno>
 80044fa:	230c      	movs	r3, #12
 80044fc:	6003      	str	r3, [r0, #0]
 80044fe:	f04f 30ff 	mov.w	r0, #4294967295
 8004502:	bd10      	pop	{r4, pc}
 8004504:	6013      	str	r3, [r2, #0]
 8004506:	e7fc      	b.n	8004502 <_sbrk+0x32>
 8004508:	20000384 	.word	0x20000384
 800450c:	20000438 	.word	0x20000438
 8004510:	200001dc 	.word	0x200001dc
 8004514:	cafedead 	.word	0xcafedead

08004518 <_swistat>:
 8004518:	b570      	push	{r4, r5, r6, lr}
 800451a:	460c      	mov	r4, r1
 800451c:	f7ff fed8 	bl	80042d0 <findslot>
 8004520:	4605      	mov	r5, r0
 8004522:	b930      	cbnz	r0, 8004532 <_swistat+0x1a>
 8004524:	f000 f9d2 	bl	80048cc <__errno>
 8004528:	2309      	movs	r3, #9
 800452a:	6003      	str	r3, [r0, #0]
 800452c:	f04f 30ff 	mov.w	r0, #4294967295
 8004530:	bd70      	pop	{r4, r5, r6, pc}
 8004532:	6863      	ldr	r3, [r4, #4]
 8004534:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8004538:	6063      	str	r3, [r4, #4]
 800453a:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800453e:	64a3      	str	r3, [r4, #72]	; 0x48
 8004540:	260c      	movs	r6, #12
 8004542:	4630      	mov	r0, r6
 8004544:	4629      	mov	r1, r5
 8004546:	beab      	bkpt	0x00ab
 8004548:	4605      	mov	r5, r0
 800454a:	4628      	mov	r0, r5
 800454c:	f7ff fee8 	bl	8004320 <checkerror>
 8004550:	1c43      	adds	r3, r0, #1
 8004552:	bf1c      	itt	ne
 8004554:	6120      	strne	r0, [r4, #16]
 8004556:	2000      	movne	r0, #0
 8004558:	e7ea      	b.n	8004530 <_swistat+0x18>

0800455a <_fstat>:
 800455a:	460b      	mov	r3, r1
 800455c:	b510      	push	{r4, lr}
 800455e:	2100      	movs	r1, #0
 8004560:	4604      	mov	r4, r0
 8004562:	2258      	movs	r2, #88	; 0x58
 8004564:	4618      	mov	r0, r3
 8004566:	f7fd fffb 	bl	8002560 <memset>
 800456a:	4601      	mov	r1, r0
 800456c:	4620      	mov	r0, r4
 800456e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8004572:	f7ff bfd1 	b.w	8004518 <_swistat>

08004576 <_stat>:
 8004576:	b538      	push	{r3, r4, r5, lr}
 8004578:	460d      	mov	r5, r1
 800457a:	4604      	mov	r4, r0
 800457c:	2258      	movs	r2, #88	; 0x58
 800457e:	2100      	movs	r1, #0
 8004580:	4628      	mov	r0, r5
 8004582:	f7fd ffed 	bl	8002560 <memset>
 8004586:	4620      	mov	r0, r4
 8004588:	2100      	movs	r1, #0
 800458a:	f000 f811 	bl	80045b0 <_swiopen>
 800458e:	1c43      	adds	r3, r0, #1
 8004590:	4604      	mov	r4, r0
 8004592:	d00b      	beq.n	80045ac <_stat+0x36>
 8004594:	686b      	ldr	r3, [r5, #4]
 8004596:	f443 4301 	orr.w	r3, r3, #33024	; 0x8100
 800459a:	606b      	str	r3, [r5, #4]
 800459c:	4629      	mov	r1, r5
 800459e:	f7ff ffbb 	bl	8004518 <_swistat>
 80045a2:	4605      	mov	r5, r0
 80045a4:	4620      	mov	r0, r4
 80045a6:	f7ff ff6b 	bl	8004480 <_close>
 80045aa:	462c      	mov	r4, r5
 80045ac:	4620      	mov	r0, r4
 80045ae:	bd38      	pop	{r3, r4, r5, pc}

080045b0 <_swiopen>:
 80045b0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80045b4:	f8df 80a8 	ldr.w	r8, [pc, #168]	; 8004660 <_swiopen+0xb0>
 80045b8:	b097      	sub	sp, #92	; 0x5c
 80045ba:	4607      	mov	r7, r0
 80045bc:	460e      	mov	r6, r1
 80045be:	2500      	movs	r5, #0
 80045c0:	f858 4035 	ldr.w	r4, [r8, r5, lsl #3]
 80045c4:	1c61      	adds	r1, r4, #1
 80045c6:	d037      	beq.n	8004638 <_swiopen+0x88>
 80045c8:	3501      	adds	r5, #1
 80045ca:	2d14      	cmp	r5, #20
 80045cc:	d1f8      	bne.n	80045c0 <_swiopen+0x10>
 80045ce:	f000 f97d 	bl	80048cc <__errno>
 80045d2:	2318      	movs	r3, #24
 80045d4:	6003      	str	r3, [r0, #0]
 80045d6:	f04f 34ff 	mov.w	r4, #4294967295
 80045da:	e03d      	b.n	8004658 <_swiopen+0xa8>
 80045dc:	f3c6 4400 	ubfx	r4, r6, #16, #1
 80045e0:	f240 6301 	movw	r3, #1537	; 0x601
 80045e4:	07b2      	lsls	r2, r6, #30
 80045e6:	bf48      	it	mi
 80045e8:	f044 0402 	orrmi.w	r4, r4, #2
 80045ec:	421e      	tst	r6, r3
 80045ee:	bf18      	it	ne
 80045f0:	f044 0404 	orrne.w	r4, r4, #4
 80045f4:	0733      	lsls	r3, r6, #28
 80045f6:	bf48      	it	mi
 80045f8:	f024 0404 	bicmi.w	r4, r4, #4
 80045fc:	4638      	mov	r0, r7
 80045fe:	bf48      	it	mi
 8004600:	f044 0408 	orrmi.w	r4, r4, #8
 8004604:	9700      	str	r7, [sp, #0]
 8004606:	f7fb fe33 	bl	8000270 <strlen>
 800460a:	e9cd 4001 	strd	r4, r0, [sp, #4]
 800460e:	2401      	movs	r4, #1
 8004610:	4620      	mov	r0, r4
 8004612:	4649      	mov	r1, r9
 8004614:	beab      	bkpt	0x00ab
 8004616:	4604      	mov	r4, r0
 8004618:	2c00      	cmp	r4, #0
 800461a:	db08      	blt.n	800462e <_swiopen+0x7e>
 800461c:	f848 4035 	str.w	r4, [r8, r5, lsl #3]
 8004620:	eb08 08c5 	add.w	r8, r8, r5, lsl #3
 8004624:	2300      	movs	r3, #0
 8004626:	f8c8 3004 	str.w	r3, [r8, #4]
 800462a:	462c      	mov	r4, r5
 800462c:	e014      	b.n	8004658 <_swiopen+0xa8>
 800462e:	4620      	mov	r0, r4
 8004630:	f7ff fe68 	bl	8004304 <error>
 8004634:	4604      	mov	r4, r0
 8004636:	e00f      	b.n	8004658 <_swiopen+0xa8>
 8004638:	f406 6320 	and.w	r3, r6, #2560	; 0xa00
 800463c:	f5b3 6f20 	cmp.w	r3, #2560	; 0xa00
 8004640:	46e9      	mov	r9, sp
 8004642:	d1cb      	bne.n	80045dc <_swiopen+0x2c>
 8004644:	4649      	mov	r1, r9
 8004646:	4638      	mov	r0, r7
 8004648:	f7ff ff95 	bl	8004576 <_stat>
 800464c:	3001      	adds	r0, #1
 800464e:	d0c5      	beq.n	80045dc <_swiopen+0x2c>
 8004650:	f000 f93c 	bl	80048cc <__errno>
 8004654:	2311      	movs	r3, #17
 8004656:	6003      	str	r3, [r0, #0]
 8004658:	4620      	mov	r0, r4
 800465a:	b017      	add	sp, #92	; 0x5c
 800465c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8004660:	20000394 	.word	0x20000394

08004664 <_get_semihosting_exts>:
 8004664:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8004668:	4606      	mov	r6, r0
 800466a:	460f      	mov	r7, r1
 800466c:	482a      	ldr	r0, [pc, #168]	; (8004718 <_get_semihosting_exts+0xb4>)
 800466e:	2100      	movs	r1, #0
 8004670:	4615      	mov	r5, r2
 8004672:	f7ff ff9d 	bl	80045b0 <_swiopen>
 8004676:	462a      	mov	r2, r5
 8004678:	4604      	mov	r4, r0
 800467a:	2100      	movs	r1, #0
 800467c:	4630      	mov	r0, r6
 800467e:	f7fd ff6f 	bl	8002560 <memset>
 8004682:	1c63      	adds	r3, r4, #1
 8004684:	d016      	beq.n	80046b4 <_get_semihosting_exts+0x50>
 8004686:	4620      	mov	r0, r4
 8004688:	f7ff fe22 	bl	80042d0 <findslot>
 800468c:	f04f 080c 	mov.w	r8, #12
 8004690:	4681      	mov	r9, r0
 8004692:	4640      	mov	r0, r8
 8004694:	4649      	mov	r1, r9
 8004696:	beab      	bkpt	0x00ab
 8004698:	4680      	mov	r8, r0
 800469a:	4640      	mov	r0, r8
 800469c:	f7ff fe40 	bl	8004320 <checkerror>
 80046a0:	2803      	cmp	r0, #3
 80046a2:	dd02      	ble.n	80046aa <_get_semihosting_exts+0x46>
 80046a4:	1ec3      	subs	r3, r0, #3
 80046a6:	42ab      	cmp	r3, r5
 80046a8:	dc08      	bgt.n	80046bc <_get_semihosting_exts+0x58>
 80046aa:	4620      	mov	r0, r4
 80046ac:	f7ff fee8 	bl	8004480 <_close>
 80046b0:	f04f 34ff 	mov.w	r4, #4294967295
 80046b4:	4620      	mov	r0, r4
 80046b6:	b003      	add	sp, #12
 80046b8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80046bc:	2204      	movs	r2, #4
 80046be:	eb0d 0102 	add.w	r1, sp, r2
 80046c2:	4620      	mov	r0, r4
 80046c4:	f7ff fe41 	bl	800434a <_read>
 80046c8:	2803      	cmp	r0, #3
 80046ca:	ddee      	ble.n	80046aa <_get_semihosting_exts+0x46>
 80046cc:	f89d 3004 	ldrb.w	r3, [sp, #4]
 80046d0:	2b53      	cmp	r3, #83	; 0x53
 80046d2:	d1ea      	bne.n	80046aa <_get_semihosting_exts+0x46>
 80046d4:	f89d 3005 	ldrb.w	r3, [sp, #5]
 80046d8:	2b48      	cmp	r3, #72	; 0x48
 80046da:	d1e6      	bne.n	80046aa <_get_semihosting_exts+0x46>
 80046dc:	f89d 3006 	ldrb.w	r3, [sp, #6]
 80046e0:	2b46      	cmp	r3, #70	; 0x46
 80046e2:	d1e2      	bne.n	80046aa <_get_semihosting_exts+0x46>
 80046e4:	f89d 3007 	ldrb.w	r3, [sp, #7]
 80046e8:	2b42      	cmp	r3, #66	; 0x42
 80046ea:	d1de      	bne.n	80046aa <_get_semihosting_exts+0x46>
 80046ec:	2201      	movs	r2, #1
 80046ee:	4639      	mov	r1, r7
 80046f0:	4620      	mov	r0, r4
 80046f2:	f7ff fe46 	bl	8004382 <_swilseek>
 80046f6:	2800      	cmp	r0, #0
 80046f8:	dbd7      	blt.n	80046aa <_get_semihosting_exts+0x46>
 80046fa:	462a      	mov	r2, r5
 80046fc:	4631      	mov	r1, r6
 80046fe:	4620      	mov	r0, r4
 8004700:	f7ff fe23 	bl	800434a <_read>
 8004704:	4605      	mov	r5, r0
 8004706:	4620      	mov	r0, r4
 8004708:	f7ff feba 	bl	8004480 <_close>
 800470c:	4628      	mov	r0, r5
 800470e:	f7ff fe07 	bl	8004320 <checkerror>
 8004712:	4604      	mov	r4, r0
 8004714:	e7ce      	b.n	80046b4 <_get_semihosting_exts+0x50>
 8004716:	bf00      	nop
 8004718:	08004c94 	.word	0x08004c94

0800471c <initialise_semihosting_exts>:
 800471c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800471e:	4d0a      	ldr	r5, [pc, #40]	; (8004748 <initialise_semihosting_exts+0x2c>)
 8004720:	4c0a      	ldr	r4, [pc, #40]	; (800474c <initialise_semihosting_exts+0x30>)
 8004722:	2100      	movs	r1, #0
 8004724:	2201      	movs	r2, #1
 8004726:	a801      	add	r0, sp, #4
 8004728:	6029      	str	r1, [r5, #0]
 800472a:	6022      	str	r2, [r4, #0]
 800472c:	f7ff ff9a 	bl	8004664 <_get_semihosting_exts>
 8004730:	2800      	cmp	r0, #0
 8004732:	dd07      	ble.n	8004744 <initialise_semihosting_exts+0x28>
 8004734:	f89d 3004 	ldrb.w	r3, [sp, #4]
 8004738:	f003 0201 	and.w	r2, r3, #1
 800473c:	f003 0302 	and.w	r3, r3, #2
 8004740:	602a      	str	r2, [r5, #0]
 8004742:	6023      	str	r3, [r4, #0]
 8004744:	b003      	add	sp, #12
 8004746:	bd30      	pop	{r4, r5, pc}
 8004748:	200001e0 	.word	0x200001e0
 800474c:	200001e4 	.word	0x200001e4

08004750 <_has_ext_exit_extended>:
 8004750:	b510      	push	{r4, lr}
 8004752:	4c04      	ldr	r4, [pc, #16]	; (8004764 <_has_ext_exit_extended+0x14>)
 8004754:	6823      	ldr	r3, [r4, #0]
 8004756:	2b00      	cmp	r3, #0
 8004758:	da01      	bge.n	800475e <_has_ext_exit_extended+0xe>
 800475a:	f7ff ffdf 	bl	800471c <initialise_semihosting_exts>
 800475e:	6820      	ldr	r0, [r4, #0]
 8004760:	bd10      	pop	{r4, pc}
 8004762:	bf00      	nop
 8004764:	200001e0 	.word	0x200001e0

08004768 <_has_ext_stdout_stderr>:
 8004768:	b510      	push	{r4, lr}
 800476a:	4c04      	ldr	r4, [pc, #16]	; (800477c <_has_ext_stdout_stderr+0x14>)
 800476c:	6823      	ldr	r3, [r4, #0]
 800476e:	2b00      	cmp	r3, #0
 8004770:	da01      	bge.n	8004776 <_has_ext_stdout_stderr+0xe>
 8004772:	f7ff ffd3 	bl	800471c <initialise_semihosting_exts>
 8004776:	6820      	ldr	r0, [r4, #0]
 8004778:	bd10      	pop	{r4, pc}
 800477a:	bf00      	nop
 800477c:	200001e4 	.word	0x200001e4

08004780 <initialise_monitor_handles>:
 8004780:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004784:	b085      	sub	sp, #20
 8004786:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 8004838 <initialise_monitor_handles+0xb8>
 800478a:	f8cd 9004 	str.w	r9, [sp, #4]
 800478e:	2303      	movs	r3, #3
 8004790:	2400      	movs	r4, #0
 8004792:	9303      	str	r3, [sp, #12]
 8004794:	af01      	add	r7, sp, #4
 8004796:	9402      	str	r4, [sp, #8]
 8004798:	2501      	movs	r5, #1
 800479a:	4628      	mov	r0, r5
 800479c:	4639      	mov	r1, r7
 800479e:	beab      	bkpt	0x00ab
 80047a0:	4605      	mov	r5, r0
 80047a2:	f8df 8098 	ldr.w	r8, [pc, #152]	; 800483c <initialise_monitor_handles+0xbc>
 80047a6:	4623      	mov	r3, r4
 80047a8:	4c20      	ldr	r4, [pc, #128]	; (800482c <initialise_monitor_handles+0xac>)
 80047aa:	f8c8 5000 	str.w	r5, [r8]
 80047ae:	f04f 32ff 	mov.w	r2, #4294967295
 80047b2:	f844 2033 	str.w	r2, [r4, r3, lsl #3]
 80047b6:	3301      	adds	r3, #1
 80047b8:	2b14      	cmp	r3, #20
 80047ba:	d1fa      	bne.n	80047b2 <initialise_monitor_handles+0x32>
 80047bc:	f7ff ffd4 	bl	8004768 <_has_ext_stdout_stderr>
 80047c0:	4d1b      	ldr	r5, [pc, #108]	; (8004830 <initialise_monitor_handles+0xb0>)
 80047c2:	b1d0      	cbz	r0, 80047fa <initialise_monitor_handles+0x7a>
 80047c4:	f04f 0a03 	mov.w	sl, #3
 80047c8:	2304      	movs	r3, #4
 80047ca:	f8cd 9004 	str.w	r9, [sp, #4]
 80047ce:	2601      	movs	r6, #1
 80047d0:	f8cd a00c 	str.w	sl, [sp, #12]
 80047d4:	9302      	str	r3, [sp, #8]
 80047d6:	4630      	mov	r0, r6
 80047d8:	4639      	mov	r1, r7
 80047da:	beab      	bkpt	0x00ab
 80047dc:	4683      	mov	fp, r0
 80047de:	4b15      	ldr	r3, [pc, #84]	; (8004834 <initialise_monitor_handles+0xb4>)
 80047e0:	f8cd 9004 	str.w	r9, [sp, #4]
 80047e4:	f8c3 b000 	str.w	fp, [r3]
 80047e8:	2308      	movs	r3, #8
 80047ea:	f8cd a00c 	str.w	sl, [sp, #12]
 80047ee:	9302      	str	r3, [sp, #8]
 80047f0:	4630      	mov	r0, r6
 80047f2:	4639      	mov	r1, r7
 80047f4:	beab      	bkpt	0x00ab
 80047f6:	4606      	mov	r6, r0
 80047f8:	602e      	str	r6, [r5, #0]
 80047fa:	682b      	ldr	r3, [r5, #0]
 80047fc:	3301      	adds	r3, #1
 80047fe:	bf02      	ittt	eq
 8004800:	4b0c      	ldreq	r3, [pc, #48]	; (8004834 <initialise_monitor_handles+0xb4>)
 8004802:	681b      	ldreq	r3, [r3, #0]
 8004804:	602b      	streq	r3, [r5, #0]
 8004806:	2600      	movs	r6, #0
 8004808:	f8d8 3000 	ldr.w	r3, [r8]
 800480c:	6023      	str	r3, [r4, #0]
 800480e:	6066      	str	r6, [r4, #4]
 8004810:	f7ff ffaa 	bl	8004768 <_has_ext_stdout_stderr>
 8004814:	b130      	cbz	r0, 8004824 <initialise_monitor_handles+0xa4>
 8004816:	4b07      	ldr	r3, [pc, #28]	; (8004834 <initialise_monitor_handles+0xb4>)
 8004818:	681b      	ldr	r3, [r3, #0]
 800481a:	e9c4 3602 	strd	r3, r6, [r4, #8]
 800481e:	682b      	ldr	r3, [r5, #0]
 8004820:	e9c4 3604 	strd	r3, r6, [r4, #16]
 8004824:	b005      	add	sp, #20
 8004826:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800482a:	bf00      	nop
 800482c:	20000394 	.word	0x20000394
 8004830:	20000388 	.word	0x20000388
 8004834:	20000390 	.word	0x20000390
 8004838:	08004caa 	.word	0x08004caa
 800483c:	2000038c 	.word	0x2000038c

08004840 <_isatty>:
 8004840:	b570      	push	{r4, r5, r6, lr}
 8004842:	f7ff fd45 	bl	80042d0 <findslot>
 8004846:	2509      	movs	r5, #9
 8004848:	4604      	mov	r4, r0
 800484a:	b920      	cbnz	r0, 8004856 <_isatty+0x16>
 800484c:	f000 f83e 	bl	80048cc <__errno>
 8004850:	6005      	str	r5, [r0, #0]
 8004852:	4620      	mov	r0, r4
 8004854:	bd70      	pop	{r4, r5, r6, pc}
 8004856:	4628      	mov	r0, r5
 8004858:	4621      	mov	r1, r4
 800485a:	beab      	bkpt	0x00ab
 800485c:	4604      	mov	r4, r0
 800485e:	2c01      	cmp	r4, #1
 8004860:	d0f7      	beq.n	8004852 <_isatty+0x12>
 8004862:	f000 f833 	bl	80048cc <__errno>
 8004866:	2400      	movs	r4, #0
 8004868:	4605      	mov	r5, r0
 800486a:	2613      	movs	r6, #19
 800486c:	4630      	mov	r0, r6
 800486e:	4621      	mov	r1, r4
 8004870:	beab      	bkpt	0x00ab
 8004872:	4606      	mov	r6, r0
 8004874:	602e      	str	r6, [r5, #0]
 8004876:	e7ec      	b.n	8004852 <_isatty+0x12>

08004878 <_exit>:
 8004878:	4601      	mov	r1, r0
 800487a:	b508      	push	{r3, lr}
 800487c:	4a02      	ldr	r2, [pc, #8]	; (8004888 <_exit+0x10>)
 800487e:	f04f 30ff 	mov.w	r0, #4294967295
 8004882:	f000 f803 	bl	800488c <_kill_shared>
 8004886:	bf00      	nop
 8004888:	00020026 	.word	0x00020026

0800488c <_kill_shared>:
 800488c:	b507      	push	{r0, r1, r2, lr}
 800488e:	e9cd 2100 	strd	r2, r1, [sp]
 8004892:	f7ff ff5d 	bl	8004750 <_has_ext_exit_extended>
 8004896:	2800      	cmp	r0, #0
 8004898:	bf14      	ite	ne
 800489a:	2420      	movne	r4, #32
 800489c:	2418      	moveq	r4, #24
 800489e:	f7ff ff57 	bl	8004750 <_has_ext_exit_extended>
 80048a2:	b120      	cbz	r0, 80048ae <_kill_shared+0x22>
 80048a4:	466d      	mov	r5, sp
 80048a6:	4620      	mov	r0, r4
 80048a8:	4629      	mov	r1, r5
 80048aa:	beab      	bkpt	0x00ab
 80048ac:	4604      	mov	r4, r0
 80048ae:	9d00      	ldr	r5, [sp, #0]
 80048b0:	e7f9      	b.n	80048a6 <_kill_shared+0x1a>
	...

080048b4 <_kill>:
 80048b4:	2906      	cmp	r1, #6
 80048b6:	b508      	push	{r3, lr}
 80048b8:	bf0c      	ite	eq
 80048ba:	4a02      	ldreq	r2, [pc, #8]	; (80048c4 <_kill+0x10>)
 80048bc:	4a02      	ldrne	r2, [pc, #8]	; (80048c8 <_kill+0x14>)
 80048be:	f7ff ffe5 	bl	800488c <_kill_shared>
 80048c2:	bf00      	nop
 80048c4:	00020023 	.word	0x00020023
 80048c8:	00020026 	.word	0x00020026

080048cc <__errno>:
 80048cc:	4b01      	ldr	r3, [pc, #4]	; (80048d4 <__errno+0x8>)
 80048ce:	6818      	ldr	r0, [r3, #0]
 80048d0:	4770      	bx	lr
 80048d2:	bf00      	nop
 80048d4:	2000006c 	.word	0x2000006c

080048d8 <_init>:
 80048d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80048da:	bf00      	nop
 80048dc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80048de:	bc08      	pop	{r3}
 80048e0:	469e      	mov	lr, r3
 80048e2:	4770      	bx	lr

080048e4 <_fini>:
 80048e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80048e6:	bf00      	nop
 80048e8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80048ea:	bc08      	pop	{r3}
 80048ec:	469e      	mov	lr, r3
 80048ee:	4770      	bx	lr
